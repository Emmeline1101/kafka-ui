<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="kafka-ui-api"><sessioninfo id="runrabbitrun-f4425336" start="1708203154671" dump="1708203273883"/><package name="com/provectus/kafka/ui/service/rbac/extractor"><class name="com/provectus/kafka/ui/service/rbac/extractor/OauthAuthorityExtractor" sourcefilename="OauthAuthorityExtractor.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicable" desc="(Ljava/lang/String;Ljava/util/Map;)Z" line="29"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extract" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="40"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertRoles" desc="(Ljava/lang/Object;)Ljava/util/Collection;" line="92"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$7" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$6" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="71"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$5" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$4" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$3" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="56"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$2" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$0" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="54" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/RbacLdapAuthoritiesExtractor" sourcefilename="RbacLdapAuthoritiesExtractor.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/context/ApplicationContext;Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;Ljava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdditionalRoles" desc="(Lorg/springframework/ldap/core/DirContextOperations;Ljava/lang/String;)Ljava/util/Set;" line="35"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRoles" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Set;" line="52"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getRoles$6" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getRoles$5" desc="(Ljava/util/Map;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAdditionalRoles$4" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAdditionalRoles$3" desc="(Ljava/util/Set;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="39"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAdditionalRoles$2" desc="(Ljava/util/Set;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAdditionalRoles$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAdditionalRoles$0" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/GithubAuthorityExtractor$1" sourcefilename="GithubAuthorityExtractor.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/rbac/extractor/GithubAuthorityExtractor;)V" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/GithubAuthorityExtractor$2" sourcefilename="GithubAuthorityExtractor.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/rbac/extractor/GithubAuthorityExtractor;)V" line="159"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/CognitoAuthorityExtractor" sourcefilename="CognitoAuthorityExtractor.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicable" desc="(Ljava/lang/String;Ljava/util/Map;)Z" line="25"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extract" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="30"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$8" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="58"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$7" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$6" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;Ljava/lang/String;)Z" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$5" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$4" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$3" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="42"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$2" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$0" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/GithubAuthorityExtractor" sourcefilename="GithubAuthorityExtractor.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicable" desc="(Ljava/lang/String;Ljava/util/Map;)Z" line="40"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extract" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="47"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOrganizationRoles" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Ljava/util/Map;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Lorg/springframework/web/reactive/function/client/WebClient;)Lreactor/core/publisher/Mono;" line="94"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTeamRoles" desc="(Lorg/springframework/web/reactive/function/client/WebClient;Ljava/util/Map;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)Lreactor/core/publisher/Mono;" line="134"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$26" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Ljava/util/List;)Ljava/util/Set;" line="175"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$25" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="177"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$24" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="181"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$23" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;Ljava/lang/String;)Z" line="182"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$22" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="180"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$21" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="179"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$20" desc="(Ljava/util/List;)Ljava/util/List;" line="163"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$19" desc="(Ljava/util/Map;)Ljava/lang/String;" line="165"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$18" desc="(Ljava/util/Map;Lorg/springframework/http/HttpHeaders;)V" line="153"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$17" desc="(Lorg/springframework/web/util/UriBuilder;)Ljava/net/URI;" line="149"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$16" desc="(Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="136"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$15" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTeamRoles$14" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$13" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Ljava/util/List;)Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$12" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="118"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$11" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="122"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$10" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;Ljava/lang/String;)Z" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$9" desc="(Ljava/util/Map;)Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$8" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$7" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$6" desc="(Ljava/util/Map;Lorg/springframework/http/HttpHeaders;)V" line="106"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOrganizationRoles$5" desc="(Lorg/springframework/web/util/UriBuilder;)Ljava/net/URI;" line="102"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$4" desc="(Ljava/util/Set;Lreactor/util/function/Tuple2;)Ljava/util/Set;" line="87"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$3" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="60"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$0" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="437" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="109" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="33" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/GoogleAuthorityExtractor" sourcefilename="GoogleAuthorityExtractor.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicable" desc="(Ljava/lang/String;Ljava/util/Map;)Z" line="24"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extract" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="29"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$7" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="58"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$6" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$5" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$4" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$3" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$2" desc="(Lorg/springframework/security/oauth2/core/user/DefaultOAuth2User;Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$0" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Z" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="134" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/rbac/extractor/ProviderAuthorityExtractor" sourcefilename="ProviderAuthorityExtractor.java"/><sourcefile name="RbacLdapAuthoritiesExtractor.java"><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="20" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="17" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="12" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CognitoAuthorityExtractor.java"><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="15" ci="0" mb="4" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProviderAuthorityExtractor.java"/><sourcefile name="OauthAuthorityExtractor.java"><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="2" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="4" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="4" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="54" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GithubAuthorityExtractor.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="15" ci="0" mb="4" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="16" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="9" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="14" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="8" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="14" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="8" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="449" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="109" covered="0"/><counter type="COMPLEXITY" missed="41" covered="0"/><counter type="METHOD" missed="35" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GoogleAuthorityExtractor.java"><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="15" ci="0" mb="4" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1110" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="261" covered="0"/><counter type="COMPLEXITY" missed="105" covered="0"/><counter type="METHOD" missed="84" covered="0"/><counter type="CLASS" missed="7" covered="0"/></package><package name="com/provectus/kafka/ui/util"><class name="com/provectus/kafka/ui/util/ApplicationMetrics" sourcefilename="ApplicationMetrics.java"><method name="forCluster" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/util/ApplicationMetrics;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noop" desc="()Lcom/provectus/kafka/ui/util/ApplicationMetrics;" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meterPolledRecords" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/emitter/PolledRecords;Z)V" line="38"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polledRecords" desc="(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter;" line="47"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polledBytes" desc="(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary;" line="55"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollTimer" desc="(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer;" line="63"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollThrottlingActivations" desc="()Lio/micrometer/core/instrument/Counter;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activeConsumers" desc="()Ljava/util/concurrent/atomic/AtomicInteger;" line="78"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lio/micrometer/core/instrument/MeterRegistry;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activeConsumers$0" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Number;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="112"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/DynamicConfigOperations" sourcefilename="DynamicConfigOperations.java"><method name="dynamicConfigPropertiesInitializer" desc="()Lorg/springframework/context/ApplicationContextInitializer;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dynamicConfigEnabled" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dynamicConfigFilePath" desc="()Ljava/nio/file/Path;" line="68"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadDynamicPropertySource" desc="()Ljava/util/Optional;" line="74"><counter type="INSTRUCTION" missed="3" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentProperties" desc="()Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure;" line="93"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNullableBean" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persist" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uploadConfigRelatedFile" desc="(Lorg/springframework/http/codec/multipart/FilePart;)Lreactor/core/publisher/Mono;" line="124"><counter type="INSTRUCTION" missed="19" covered="54"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIfDynamicConfigEnabled" desc="()V" line="151"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeYamlToFile" desc="(Ljava/lang/String;Ljava/nio/file/Path;)V" line="158"><counter type="INSTRUCTION" missed="27" covered="40"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializeToYaml" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure;)Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/context/ConfigurableApplicationContext;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$uploadConfigRelatedFile$3" desc="(Ljava/nio/file/Path;Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uploadConfigRelatedFile$2" desc="(Ljava/nio/file/Path;Ljava/lang/Throwable;)V" line="146"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dynamicConfigPropertiesInitializer$1" desc="(Lorg/springframework/context/ConfigurableApplicationContext;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$dynamicConfigPropertiesInitializer$0" desc="(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/core/env/PropertySource;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="108" covered="242"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="25" covered="57"/><counter type="COMPLEXITY" missed="11" covered="16"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth" sourcefilename="DynamicConfigOperations.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/config/auth/OAuthProperties;)V" line="218"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth$AuthBuilder;" line="218"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/String;" line="220"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOauth2" desc="()Lcom/provectus/kafka/ui/config/auth/OAuthProperties;" line="221"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Ljava/lang/String;)V" line="217"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOauth2" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties;)V" line="217"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="217"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="217"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="217"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/util/KafkaServicesValidation" sourcefilename="KafkaServicesValidation.java"><method name="valid" desc="()Lreactor/core/publisher/Mono;" line="32"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalid" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="36"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalid" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="40"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateTruststore" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;)Ljava/util/Optional;" line="47"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateClusterConnection" desc="(Ljava/lang/String;Ljava/util/Properties;Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;)Lreactor/core/publisher/Mono;" line="67"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateSchemaRegistry" desc="(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;" line="97"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateConnect" desc="(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;" line="112"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateKsql" desc="(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;" line="127"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateKsql$3" desc="(Ljava/util/List;)Lreactor/core/publisher/Mono;" line="135"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateKsql$2" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;)Lorg/reactivestreams/Publisher;" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateKsql$1" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient;)Lreactor/core/publisher/Flux;" line="132"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateClusterConnection$0" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="88"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="69" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/util/ReactiveFailover$PublisherHolder" sourcefilename="ReactiveFailover.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;J)V" line="141"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lreactor/core/publisher/Mono;" line="150"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markFailed" desc="()V" line="161"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isActive" desc="()Z" line="165"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$PropertiesStructureBuilder" sourcefilename="DynamicConfigOperations.java"><method name="&lt;init&gt;" desc="()V" line="208"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kafka" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$PropertiesStructureBuilder;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rbac" desc="(Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$PropertiesStructureBuilder;" line="208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="auth" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$PropertiesStructureBuilder;" line="208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="webclient" desc="(Lcom/provectus/kafka/ui/config/WebclientProperties;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$PropertiesStructureBuilder;" line="208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure;" line="208"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/SslPropertiesUtil" sourcefilename="SslPropertiesUtil.java"><method name="addKafkaSslProperties" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;Ljava/util/Properties;)V" line="15"><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/EmptyRedirectStrategy" sourcefilename="EmptyRedirectStrategy.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendRedirect" desc="(Lorg/springframework/web/server/ServerWebExchange;Ljava/net/URI;)Lreactor/core/publisher/Mono;" line="18"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLocation" desc="(Lorg/springframework/web/server/ServerWebExchange;Ljava/net/URI;)Ljava/net/URI;" line="28"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHttpStatus" desc="(Lorg/springframework/http/HttpStatus;)V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContextRelative" desc="(Z)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sendRedirect$0" desc="(Lorg/springframework/web/server/ServerWebExchange;Ljava/net/URI;)V" line="21"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/util/GithubReleaseInfo" sourcefilename="GithubReleaseInfo.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lcom/provectus/kafka/ui/util/GithubReleaseInfo$GithubReleaseDto;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="refresh" desc="()Lreactor/core/publisher/Mono;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lcom/provectus/kafka/ui/util/GithubReleaseInfo$GithubReleaseDto;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Ljava/lang/Throwable;)Z" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Ljava/lang/Throwable;)V" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lreactor/core/publisher/Mono;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="55"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure" sourcefilename="DynamicConfigOperations.java"><method name="initAndValidate" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;Lcom/provectus/kafka/ui/config/WebclientProperties;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$PropertiesStructureBuilder;" line="208"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKafka" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties;" line="212"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRbac" desc="()Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;" line="213"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAuth" desc="()Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;" line="214"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWebclient" desc="()Lcom/provectus/kafka/ui/config/WebclientProperties;" line="215"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKafka" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)V" line="207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRbac" desc="(Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;)V" line="207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAuth" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;)V" line="207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setWebclient" desc="(Lcom/provectus/kafka/ui/config/WebclientProperties;)V" line="207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="207"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="207"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="207"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$initAndValidate$0" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;)Ljava/util/Optional;" line="232"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="196" covered="42"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="32" covered="3"/><counter type="METHOD" missed="13" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/ReactiveFailover" sourcefilename="ReactiveFailover.java"><method name="createNoop" desc="(Ljava/lang/Object;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/function/Predicate;Ljava/lang/String;Ljava/time/Duration;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/lang/String;Ljava/time/Duration;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/function/Predicate;Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mono" desc="(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;" line="71"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mono" desc="(Ljava/util/function/Function;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="79"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flux" desc="(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;" line="96"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flux" desc="(Ljava/util/function/Function;Ljava/util/List;)Lreactor/core/publisher/Flux;" line="104"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActivePublishers" desc="()Ljava/util/List;" line="124"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$flux$9" desc="(Lcom/provectus/kafka/ui/util/ReactiveFailover$PublisherHolder;Ljava/util/List;Ljava/util/function/Function;Ljava/lang/Throwable;)Lorg/reactivestreams/Publisher;" line="108"><counter type="INSTRUCTION" missed="3" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$flux$8" desc="()Ljava/lang/Throwable;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mono$7" desc="(Lcom/provectus/kafka/ui/util/ReactiveFailover$PublisherHolder;Ljava/util/List;Ljava/util/function/Function;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="83"><counter type="INSTRUCTION" missed="3" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mono$6" desc="()Ljava/lang/Throwable;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$5" desc="(Ljava/util/function/Function;Ljava/time/Duration;Ljava/lang/Object;)Lcom/provectus/kafka/ui/util/ReactiveFailover$PublisherHolder;" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$4" desc="(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$3" desc="(Ljava/time/Duration;Ljava/lang/Object;)Lcom/provectus/kafka/ui/util/ReactiveFailover$PublisherHolder;" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$2" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createNoop$1" desc="(Ljava/lang/Throwable;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Throwable;)Z" line="19"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="289"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="2" covered="55"/><counter type="COMPLEXITY" missed="3" covered="31"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/ResourceUtil" sourcefilename="ResourceUtil.java"><method name="readAsString" desc="(Lorg/springframework/core/io/Resource;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/util/DynamicConfigOperations$1" sourcefilename="DynamicConfigOperations.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations;Lorg/yaml/snakeyaml/DumperOptions;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="representJavaBeanProperty" desc="(Ljava/lang/Object;Lorg/yaml/snakeyaml/introspector/Property;Ljava/lang/Object;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/NodeTuple;" line="190"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/ApplicationRestarter" sourcefilename="ApplicationRestarter.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onApplicationEvent" desc="(Lorg/springframework/boot/context/event/ApplicationStartedEvent;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestRestart" desc="()V" line="25"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeApplicationContext" desc="(Lorg/springframework/context/ApplicationContext;)V" line="36"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$requestRestart$0" desc="()V" line="27"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="16"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/KafkaVersion" sourcefilename="KafkaVersion.java"><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="12"><counter type="INSTRUCTION" missed="11" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/WebClientConfigurator" sourcefilename="WebClientConfigurator.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultOM" desc="()Lcom/fasterxml/jackson/databind/ObjectMapper;" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureSsl" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;)Lcom/provectus/kafka/ui/util/WebClientConfigurator;" line="48"><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureSsl" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/provectus/kafka/ui/util/WebClientConfigurator;" line="56"><counter type="INSTRUCTION" missed="71" covered="6"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="22" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureBasicAuth" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/provectus/kafka/ui/util/WebClientConfigurator;" line="101"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureBufferSize" desc="(Lorg/springframework/util/unit/DataSize;)Lcom/provectus/kafka/ui/util/WebClientConfigurator;" line="112"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureObjectMapper" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/provectus/kafka/ui/util/WebClientConfigurator;" line="117"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureCodecs" desc="(Ljava/util/function/Consumer;)Lcom/provectus/kafka/ui/util/WebClientConfigurator;" line="127"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/springframework/web/reactive/function/client/WebClient;" line="132"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configureObjectMapper$3" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Lorg/springframework/http/codec/ClientCodecConfigurer;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configureBufferSize$2" desc="(Lorg/springframework/util/unit/DataSize;Lorg/springframework/http/codec/ClientCodecConfigurer;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configureBasicAuth$1" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configureSsl$0" desc="(Lio/netty/handler/ssl/SslContext;Lreactor/netty/tcp/SslProvider$SslContextSpec;)V" line="96"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="147"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="24" covered="35"/><counter type="COMPLEXITY" missed="12" covered="15"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth$AuthBuilder" sourcefilename="DynamicConfigOperations.java"><method name="&lt;init&gt;" desc="()V" line="218"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth$AuthBuilder;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oauth2" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth$AuthBuilder;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;" line="218"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="218"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/util/GithubReleaseInfo$GithubReleaseDto" sourcefilename="GithubReleaseInfo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lcom/provectus/kafka/ui/util/GithubReleaseInfo$GithubReleaseDto;" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KafkaVersion.java"><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="1" cb="1"/><line nr="14" mi="8" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SslPropertiesUtil.java"><line nr="15" mi="3" ci="2" mb="3" cb="1"/><line nr="16" mi="6" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="2" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WebClientConfigurator.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="3" ci="3" mb="1" cb="1"/><line nr="52" mi="3" ci="3" mb="1" cb="1"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="2" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="4" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="4" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="3"/><line nr="102" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="1" cb="1"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="13" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="147"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="24" covered="35"/><counter type="COMPLEXITY" missed="12" covered="15"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResourceUtil.java"><line nr="16" mi="7" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReactiveFailover.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="14" mb="0" cb="4"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="18" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="17" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="1" ci="6" mb="1" cb="1"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="12" mb="0" cb="2"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="17" mb="0" cb="2"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="0" cb="2"/><counter type="INSTRUCTION" missed="11" covered="334"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="4" covered="67"/><counter type="COMPLEXITY" missed="3" covered="37"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ApplicationRestarter.java"><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="2" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="16"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DynamicConfigOperations.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="1" cb="3"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="1" cb="1"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="11" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="1" cb="1"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="6" ci="3" mb="0" cb="0"/><line nr="147" mi="6" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="3" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="1" cb="1"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="1" cb="1"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="1" cb="3"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="18" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="15" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="2"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="180" ci="0" mb="38" cb="0"/><line nr="208" mi="25" ci="39" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="106" ci="0" mb="22" cb="0"/><line nr="218" mi="40" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="4" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="481" covered="322"/><counter type="BRANCH" missed="67" covered="15"/><counter type="LINE" missed="34" covered="71"/><counter type="COMPLEXITY" missed="73" covered="25"/><counter type="METHOD" missed="36" covered="21"/><counter type="CLASS" missed="2" covered="4"/></sourcefile><sourcefile name="KafkaServicesValidation.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="40" mi="11" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="4" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="9" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="69" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyRedirectStrategy.java"><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="7" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="2" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="2" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="2" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GithubReleaseInfo.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="12" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="5" ci="3" mb="0" cb="0"/><line nr="39" mi="5" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="74"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ApplicationMetrics.java"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="1" cb="1"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="2" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="112"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1018" covered="1025"/><counter type="BRANCH" missed="104" covered="60"/><counter type="LINE" missed="184" covered="232"/><counter type="COMPLEXITY" missed="127" covered="99"/><counter type="METHOD" missed="65" covered="79"/><counter type="CLASS" missed="5" covered="13"/></package><package name="com/provectus/kafka/ui"><class name="com/provectus/kafka/ui/KafkaUiApplication" sourcefilename="KafkaUiApplication.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startApplication" desc="([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;" line="21"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KafkaUiApplication.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="14" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/provectus/kafka/ui/service/ksql"><class name="com/provectus/kafka/ui/service/ksql/KsqlGrammar" sourcefilename="KsqlGrammar.java"><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="32"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSelect" desc="(Lksql/KsqlGrammarParser$SingleStatementContext;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStatements" desc="(Ljava/lang/String;)Lksql/KsqlGrammarParser$StatementsContext;" line="45"><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$0" desc="(Lksql/KsqlGrammarParser$SingleStatementContext;)Z" line="34"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="56"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlGrammar$KsqlStatements" sourcefilename="KsqlGrammar.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatements" desc="()Ljava/util/List;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="25"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="25"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="9"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlServiceV2" sourcefilename="KsqlServiceV2.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerCommand" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="45"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listTables" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listStreams" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listStreams$7" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;)Lorg/reactivestreams/Publisher;" line="80"><counter type="INSTRUCTION" missed="15" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listStreams$6" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;Ljava/util/List;)Lcom/provectus/kafka/ui/model/KsqlStreamDescriptionDTO;" line="88"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listStreams$5" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;Ljava/util/List;)Ljava/util/Optional;" line="96"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$listStreams$4" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient;)Lreactor/core/publisher/Flux;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTables$3" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;)Lorg/reactivestreams/Publisher;" line="58"><counter type="INSTRUCTION" missed="15" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTables$2" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;Ljava/util/List;)Lcom/provectus/kafka/ui/model/KsqlTableDescriptionDTO;" line="66"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTables$1" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient;)Lreactor/core/publisher/Flux;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$0" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlServiceV2$KsqlExecuteCommand;Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient;)Lreactor/core/publisher/Flux;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="82" covered="172"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="15" covered="37"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder" sourcefilename="KsqlApiClient.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="header" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="columnNames" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Z)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlServiceV2$KsqlExecuteCommand" sourcefilename="KsqlServiceV2.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/util/Map;)V" line="24"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCluster" desc="()Lcom/provectus/kafka/ui/model/KafkaCluster;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKsql" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStreamProperties" desc="()Ljava/util/Map;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="24"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="24"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlGrammar$1" sourcefilename="KsqlGrammar.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="syntaxError" desc="(Lorg/antlr/v4/runtime/Recognizer;Ljava/lang/Object;IILjava/lang/String;Lorg/antlr/v4/runtime/RecognitionException;)V" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlGrammar$CaseInsensitiveStream$1" sourcefilename="KsqlGrammar.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/CharStream;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LA" desc="(I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable" sourcefilename="KsqlApiClient.java"><method name="getColumnValue" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/util/Optional;" line="55"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Z)V" line="46"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable$KsqlResponseTableBuilder;" line="46"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeader" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumnNames" desc="()Ljava/util/List;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isError" desc="()Z" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="47"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="165" covered="39"/><counter type="BRANCH" missed="33" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="23" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlRequest" sourcefilename="KsqlApiClient.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKsql" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStreamsProperties" desc="()Ljava/util/Map;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="62"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="62"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="15"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlGrammar$CaseInsensitiveStream" sourcefilename="KsqlGrammar.java"><method name="from" desc="(Lorg/antlr/v4/runtime/CharStream;)Lcom/provectus/kafka/ui/service/ksql/KsqlGrammar$CaseInsensitiveStream;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/CharStream;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="(Lorg/antlr/v4/runtime/misc/Interval;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consume" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LA" desc="(I)I" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="(I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seek" desc="(I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceName" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/KsqlApiClient" sourcefilename="KsqlApiClient.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth;Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;Lorg/springframework/util/unit/DataSize;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="webClient" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth;Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;Lorg/springframework/util/unit/DataSize;)Lorg/springframework/web/reactive/function/client/WebClient;" line="86"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ksqlRequest" desc="(Ljava/lang/String;Ljava/util/Map;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlRequest;" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeSelect" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Flux;" line="113"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnexpectedJsonArrayEndCharException" desc="(Ljava/lang/Throwable;)Z" line="137"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeStatement" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Flux;" line="143"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Flux;" line="171"><counter type="INSTRUCTION" missed="22" covered="43"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorTableFlux" desc="(Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnsupportedStatementType" desc="(Lksql/KsqlGrammarParser$SingleStatementContext;)Z" line="203"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$5" desc="(Ljava/lang/String;Ljava/lang/Exception;)Lorg/reactivestreams/Publisher;" line="193"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$executeStatement$4" desc="(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lreactor/core/publisher/Flux;" line="151"><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$executeStatement$3" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Lorg/reactivestreams/Publisher;" line="157"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$executeSelect$2" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException;)Lorg/reactivestreams/Publisher;" line="126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$executeSelect$1" desc="(Ljava/lang/Throwable;)Lorg/reactivestreams/Publisher;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$webClient$0" desc="(Lorg/springframework/http/codec/ClientCodecConfigurer;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="112" covered="214"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="25" covered="53"/><counter type="COMPLEXITY" missed="15" covered="10"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KsqlGrammar.java"><line nr="25" mi="56" ci="6" mb="12" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="2" ci="8" mb="2" cb="2"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="18" ci="22" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="117"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="16" covered="17"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="KsqlServiceV2.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="134" ci="0" mb="28" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="2" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="1" cb="1"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="1" cb="1"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="5" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="225" covered="172"/><counter type="BRANCH" missed="32" covered="2"/><counter type="LINE" missed="19" covered="37"/><counter type="COMPLEXITY" missed="28" covered="10"/><counter type="METHOD" missed="11" covered="10"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="KsqlApiClient.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="31" ci="49" mb="0" cb="0"/><line nr="47" mi="142" ci="0" mb="32" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="1" cb="1"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="89" ci="9" mb="20" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="16" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="11" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="2" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="1" cb="1"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="3" ci="7" mb="1" cb="1"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="1" cb="1"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="1" cb="1"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="1" cb="1"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="381" covered="298"/><counter type="BRANCH" missed="64" covered="8"/><counter type="LINE" missed="29" covered="62"/><counter type="COMPLEXITY" missed="53" covered="23"/><counter type="METHOD" missed="17" covered="23"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="698" covered="587"/><counter type="BRANCH" missed="110" covered="14"/><counter type="LINE" missed="52" covered="119"/><counter type="COMPLEXITY" missed="97" covered="50"/><counter type="METHOD" missed="36" covered="49"/><counter type="CLASS" missed="1" covered="10"/></package><package name="com/provectus/kafka/ui/model/rbac/provider"><class name="com/provectus/kafka/ui/model/rbac/provider/Provider$Name" sourcefilename="Provider.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/rbac/provider/Provider" sourcefilename="Provider.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/provider/Provider;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Provider.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="6" ci="0" mb="0" cb="0"/><line nr="9" mi="6" ci="0" mb="0" cb="0"/><line nr="11" mi="6" ci="0" mb="0" cb="0"/><line nr="13" mi="6" ci="0" mb="0" cb="0"/><line nr="15" mi="6" ci="0" mb="0" cb="0"/><line nr="16" mi="6" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="com/provectus/kafka/ui/config"><class name="com/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel" sourcefilename="ClustersProperties.java"><method name="&lt;clinit&gt;" desc="()V" line="156"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$AuditProperties" sourcefilename="ClustersProperties.java"><method name="getTopic" desc="()Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAuditTopicsPartitions" desc="()Ljava/lang/Integer;" line="150"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicAuditEnabled" desc="()Ljava/lang/Boolean;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsoleAuditEnabled" desc="()Ljava/lang/Boolean;" line="152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLevel" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel;" line="153"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAuditTopicProperties" desc="()Ljava/util/Map;" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTopic" desc="(Ljava/lang/String;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAuditTopicsPartitions" desc="(Ljava/lang/Integer;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTopicAuditEnabled" desc="(Ljava/lang/Boolean;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConsoleAuditEnabled" desc="(Ljava/lang/Boolean;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLevel" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel;)V" line="145"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAuditTopicProperties" desc="(Ljava/util/Map;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="145"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="145"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="145"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel;Ljava/util/Map;)V" line="147"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="255" covered="41"/><counter type="BRANCH" missed="54" covered="0"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="33" covered="12"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$PollingProperties" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPollTimeoutMs" desc="()Ljava/lang/Integer;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxPageSize" desc="()Ljava/lang/Integer;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultPageSize" desc="()Ljava/lang/Integer;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPollTimeoutMs" desc="(Ljava/lang/Integer;)V" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMaxPageSize" desc="(Ljava/lang/Integer;)V" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultPageSize" desc="(Ljava/lang/Integer;)V" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="57"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="143" covered="12"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="22" covered="4"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties" sourcefilename="ClustersProperties.java"><method name="validateAndSetDefaults" desc="()V" line="164"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetricsDefaults" desc="()V" line="172"><counter type="INSTRUCTION" missed="9" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flattenClusterProperties" desc="()V" line="180"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flattenClusterProperties" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;" line="187"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateClusterNames" desc="()V" line="203"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusters" desc="()Ljava/util/List;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInternalTopicPrefix" desc="()Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdminClientTimeout" desc="()Ljava/lang/Integer;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolling" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$PollingProperties;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClusters" desc="(Ljava/util/List;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInternalTopicPrefix" desc="(Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAdminClientTimeout" desc="(Ljava/lang/Integer;)V" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPolling" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$PollingProperties;)V" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="23"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="23"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$flattenClusterProperties$0" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V" line="190"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="216" covered="140"/><counter type="BRANCH" missed="47" covered="17"/><counter type="LINE" missed="7" covered="32"/><counter type="COMPLEXITY" missed="33" covered="18"/><counter type="METHOD" missed="8" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="address" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="username" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="password" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keystoreLocation" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keystorePassword" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;" line="79"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$Masking$Type" sourcefilename="ClustersProperties.java"><method name="&lt;clinit&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/CustomWebFilter" sourcefilename="CustomWebFilter.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filter" desc="(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;" line="15"><counter type="INSTRUCTION" missed="16" covered="28"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$ConnectCluster" sourcefilename="ClustersProperties.java"><method name="builder" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster$ConnectClusterBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddress" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeystoreLocation" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeystorePassword" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAddress" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUsername" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPassword" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKeystoreLocation" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKeystorePassword" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="76"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="76"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="238" covered="80"/><counter type="BRANCH" missed="54" covered="0"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="34" covered="13"/><counter type="METHOD" missed="7" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$SerdeConfig" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassName" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilePath" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicKeysPattern" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicValuesPattern" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassName" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperties" desc="(Ljava/util/Map;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTopicKeysPattern" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTopicValuesPattern" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="104"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="104"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="230" covered="45"/><counter type="BRANCH" missed="54" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="31" covered="13"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$SchemaRegistryAuth" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUsername" desc="(Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPassword" desc="(Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="90"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="104" covered="9"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$MetricsConfigData" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPort" desc="()Ljava/lang/Integer;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSsl" desc="()Ljava/lang/Boolean;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeystoreLocation" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeystorePassword" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPort" desc="(Ljava/lang/Integer;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSsl" desc="(Ljava/lang/Boolean;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUsername" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPassword" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKeystoreLocation" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKeystorePassword" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="64"><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="64"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="313" covered="0"/><counter type="BRANCH" missed="62" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTruststoreLocation" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTruststorePassword" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTruststoreLocation" desc="(Ljava/lang/String;)V" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTruststorePassword" desc="(Ljava/lang/String;)V" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="97"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="97"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$Cluster" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBootstrapServers" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaRegistry" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaRegistryAuth" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$SchemaRegistryAuth;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaRegistrySsl" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKsqldbServer" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKsqldbServerAuth" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKsqldbServerSsl" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKafkaConnect" desc="()Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetrics" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$MetricsConfigData;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReadOnly" desc="()Z" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerde" desc="()Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultKeySerde" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValueSerde" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMasking" desc="()Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPollingThrottleRate" desc="()Ljava/lang/Long;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSsl" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAudit" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBootstrapServers" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSchemaRegistry" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSchemaRegistryAuth" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SchemaRegistryAuth;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSchemaRegistrySsl" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKsqldbServer" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKsqldbServerAuth" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKsqldbServerSsl" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKafkaConnect" desc="(Ljava/util/List;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetrics" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$MetricsConfigData;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperties" desc="(Ljava/util/Map;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setReadOnly" desc="(Z)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSerde" desc="(Ljava/util/List;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultKeySerde" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultValueSerde" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMasking" desc="(Ljava/util/List;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPollingThrottleRate" desc="(Ljava/lang/Long;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSsl" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAudit" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="34"><counter type="INSTRUCTION" missed="334" covered="0"/><counter type="BRANCH" missed="116" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="59" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="34"><counter type="INSTRUCTION" missed="269" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="692" covered="93"/><counter type="BRANCH" missed="154" covered="0"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="93" covered="27"/><counter type="METHOD" missed="16" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/WebclientProperties" sourcefilename="WebclientProperties.java"><method name="validate" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateAndSetDefaultBufferSize" desc="()V" line="23"><counter type="INSTRUCTION" missed="11" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxInMemoryBufferSize" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxInMemoryBufferSize" desc="(Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="12"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="12"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="13"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/CorsGlobalConfiguration" sourcefilename="CorsGlobalConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="corsFilter" desc="()Lorg/springframework/web/server/WebFilter;" line="20"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$corsFilter$0" desc="(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;" line="21"><counter type="INSTRUCTION" missed="6" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig" sourcefilename="ClustersProperties.java"><method name="getKeystoreLocation" desc="()Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeystorePassword" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKeystoreLocation" desc="(Ljava/lang/String;)V" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKeystorePassword" desc="(Ljava/lang/String;)V" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="121"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="121"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="15"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="18" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ReadOnlyModeFilter" sourcefilename="ReadOnlyModeFilter.java"><method name="filter" desc="(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;" line="31"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ClustersStorage;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$filter$0" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/exception/ClusterNotFoundException;" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="69"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$Masking" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$Masking$Type;" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFields" desc="()Ljava/util/List;" line="133"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldsNamePattern" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaskingCharsReplacement" desc="()Ljava/util/List;" line="135"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReplacement" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicKeysPattern" desc="()Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicValuesPattern" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking$Type;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFields" desc="(Ljava/util/List;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFieldsNamePattern" desc="(Ljava/lang/String;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaskingCharsReplacement" desc="(Ljava/util/List;)V" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReplacement" desc="(Ljava/lang/String;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTopicKeysPattern" desc="(Ljava/lang/String;)V" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTopicValuesPattern" desc="(Ljava/lang/String;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="130"><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="130"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="130"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="274" covered="41"/><counter type="BRANCH" missed="62" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="38" covered="12"/><counter type="METHOD" missed="7" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/Config" sourcefilename="Config.java"><method name="httpHandler" desc="(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/http/server/reactive/HttpHandler;" line="30"><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exporter" desc="()Lorg/springframework/jmx/export/MBeanExporter;" line="45"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jsonNullableModule" desc="()Lorg/openapitools/jackson/nullable/JsonNullableModule;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="45"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth" sourcefilename="ClustersProperties.java"><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUsername" desc="(Ljava/lang/String;)V" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPassword" desc="(Ljava/lang/String;)V" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="114"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="114"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="104" covered="9"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ReadOnlyModeFilter.java"><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="2"/><line nr="32" mi="0" ci="2" mb="0" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="69"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Config.java"><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="1" cb="1"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="45"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CustomWebFilter.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="12" mb="3" cb="3"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClustersProperties.java"><line nr="23" mi="176" ci="6" mb="38" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="686" ci="38" mb="154" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="143" ci="3" mb="30" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="278" ci="0" mb="62" cb="0"/><line nr="65" mi="14" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="224" ci="16" mb="54" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="21" mb="0" cb="0"/><line nr="79" mi="18" ci="71" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="100" ci="3" mb="22" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="103" ci="0" mb="22" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="230" ci="27" mb="54" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="100" ci="3" mb="22" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="100" ci="0" mb="22" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="271" ci="23" mb="62" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="18" mb="0" cb="0"/><line nr="145" mi="234" ci="20" mb="54" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="21" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="5" ci="3" mb="3" cb="1"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="11" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="1" cb="1"/><line nr="189" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="2" cb="0"/><line nr="191" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="8" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="13" mb="0" cb="4"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="2"/><line nr="210" mi="0" ci="4" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2818" covered="555"/><counter type="BRANCH" missed="605" covered="17"/><counter type="LINE" missed="33" covered="97"/><counter type="COMPLEXITY" missed="408" covered="117"/><counter type="METHOD" missed="104" covered="110"/><counter type="CLASS" missed="3" covered="12"/></sourcefile><sourcefile name="CorsGlobalConfiguration.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="1" cb="1"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WebclientProperties.java"><line nr="12" mi="69" ci="3" mb="14" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="1" cb="1"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="13"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2941" covered="751"/><counter type="BRANCH" missed="625" covered="31"/><counter type="LINE" missed="51" covered="147"/><counter type="COMPLEXITY" missed="427" covered="137"/><counter type="METHOD" missed="110" covered="126"/><counter type="CLASS" missed="3" covered="17"/></package><package name="com/provectus/kafka/ui/model/rbac/permission"><class name="com/provectus/kafka/ui/model/rbac/permission/ConnectAction" sourcefilename="ConnectAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/ConnectAction;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/AclAction" sourcefilename="AclAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/AclAction;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/TopicAction" sourcefilename="TopicAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/TopicAction;" line="23"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="56"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/ConsumerGroupAction" sourcefilename="ConsumerGroupAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/ConsumerGroupAction;" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/SchemaAction" sourcefilename="SchemaAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/SchemaAction;" line="21"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/PermissibleAction" sourcefilename="PermissibleAction.java"/><class name="com/provectus/kafka/ui/model/rbac/permission/ApplicationConfigAction" sourcefilename="ApplicationConfigAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/ApplicationConfigAction;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/ClusterConfigAction" sourcefilename="ClusterConfigAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/ClusterConfigAction;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/KsqlAction" sourcefilename="KsqlAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/KsqlAction;" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/rbac/permission/AuditAction" sourcefilename="AuditAction.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/permission/AuditAction;" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlter" desc="()Z" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AuditAction.java"><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="6" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AclAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SchemaAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="56"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PermissibleAction.java"/><sourcefile name="ClusterConfigAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ApplicationConfigAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConnectAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsumerGroupAction.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KsqlAction.java"><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="6" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="80" covered="226"/><counter type="LINE" missed="18" covered="45"/><counter type="COMPLEXITY" missed="14" covered="13"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="2" covered="7"/></package><package name="com/provectus/kafka/ui/service/integration/odd"><class name="com/provectus/kafka/ui/service/integration/odd/OddExporter" sourcefilename="OddExporter.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/StatisticsCache;Lcom/provectus/kafka/ui/service/KafkaConnectService;Lcom/provectus/kafka/ui/service/integration/odd/OddIntegrationProperties;)V" line="27"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/opendatadiscovery/client/api/OpenDataDiscoveryIngestionApi;Lcom/provectus/kafka/ui/service/integration/odd/TopicsExporter;Lcom/provectus/kafka/ui/service/integration/odd/ConnectorsExporter;)V" line="37"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTopicsFilter" desc="(Lcom/provectus/kafka/ui/service/integration/odd/OddIntegrationProperties;)Ljava/util/function/Predicate;" line="44"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createApiClient" desc="(Lcom/provectus/kafka/ui/service/integration/odd/OddIntegrationProperties;)Lorg/opendatadiscovery/client/api/OpenDataDiscoveryIngestionApi;" line="52"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="export" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exportTopics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exportKafkaConnects" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="73"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createConnectDataSources" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="80"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createKafkaDataSource" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="87"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendDataEntities" desc="(Lorg/opendatadiscovery/client/model/DataEntityList;)Lreactor/core/publisher/Mono;" line="100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createConnectDataSources$2" desc="(Ljava/util/List;)Lorg/reactivestreams/Publisher;" line="82"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createTopicsFilter$1" desc="(Ljava/util/regex/Pattern;Ljava/lang/String;)Z" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createTopicsFilter$0" desc="(Ljava/lang/String;)Z" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/integration/odd/OddExporterScheduler" sourcefilename="OddExporterScheduler.java"><method name="sendMetricsToOdd" desc="()V" line="17"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ClustersStorage;Lcom/provectus/kafka/ui/service/integration/odd/OddExporter;)V" line="9"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/integration/odd/ConnectorsExporter" sourcefilename="ConnectorsExporter.java"><method name="export" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectDataSources" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDataSource" desc="(Lcom/provectus/kafka/ui/model/ConnectDTO;)Lorg/opendatadiscovery/client/model/DataSource;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createConnectorDataEntity" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;Lcom/provectus/kafka/ui/model/ConnectorDTO;Lcom/provectus/kafka/ui/connect/model/ConnectorTopics;)Lorg/opendatadiscovery/client/model/DataEntity;" line="59"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMetadata" desc="(Lcom/provectus/kafka/ui/model/ConnectorDTO;)Ljava/util/Map;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractConnectorInfo" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectorDTO;Lcom/provectus/kafka/ui/connect/model/ConnectorTopics;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="87"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/KafkaConnectService;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractConnectorInfo$5" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$4" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;)Lorg/reactivestreams/Publisher;" line="28"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$3" desc="(Lcom/provectus/kafka/ui/model/ConnectDTO;Ljava/util/List;)Lorg/opendatadiscovery/client/model/DataEntityList;" line="35"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$2" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;Lcom/provectus/kafka/ui/model/ConnectorDTO;)Lorg/reactivestreams/Publisher;" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;Lcom/provectus/kafka/ui/model/ConnectorDTO;Lcom/provectus/kafka/ui/connect/model/ConnectorTopics;)Lorg/opendatadiscovery/client/model/DataEntity;" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="171"/><counter type="LINE" missed="6" covered="35"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/OddIntegrationProperties" sourcefilename="OddIntegrationProperties.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUrl" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToken" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicsRegex" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUrl" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setToken" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTopicsRegex" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="7"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver" sourcefilename="SchemaReferencesResolver.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/util/List;)Lreactor/core/publisher/Mono;" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveReferences" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;)Lreactor/core/publisher/Mono;" line="39"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resolveReferences$2" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaReference;Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;)Lreactor/core/publisher/Mono;" line="42"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resolveReferences$1" desc="(Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;Lcom/provectus/kafka/ui/sr/model/SchemaReference;Lcom/provectus/kafka/ui/sr/model/SchemaSubject;)Lreactor/core/publisher/Mono;" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resolveReferences$0" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaReference;Lcom/provectus/kafka/ui/sr/model/SchemaSubject;Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;)Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/OddIntegrationConfig" sourcefilename="OddIntegrationConfig.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oddIntegrationProperties" desc="()Lcom/provectus/kafka/ui/service/integration/odd/OddIntegrationProperties;" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oddExporter" desc="(Lcom/provectus/kafka/ui/service/StatisticsCache;Lcom/provectus/kafka/ui/service/KafkaConnectService;Lcom/provectus/kafka/ui/service/integration/odd/OddIntegrationProperties;)Lcom/provectus/kafka/ui/service/integration/odd/OddExporter;" line="23"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oddExporterScheduler" desc="(Lcom/provectus/kafka/ui/service/ClustersStorage;Lcom/provectus/kafka/ui/service/integration/odd/OddExporter;)Lcom/provectus/kafka/ui/service/integration/odd/OddExporterScheduler;" line="28"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/integration/odd/TopicsExporter" sourcefilename="TopicsExporter.java"><method name="export" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="39"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTopicDataEntity" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/Statistics;)Lreactor/core/publisher/Mono;" line="54"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonDefaultConfigs" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/Statistics;)Ljava/util/Map;" line="79"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicMetadata" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/Statistics;)Ljava/util/Map;" line="89"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicSchema" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lorg/opendatadiscovery/oddrn/model/KafkaPath;Z)Lreactor/core/publisher/Mono;" line="102"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjWithResolvedRefs" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="115"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Predicate;Lcom/provectus/kafka/ui/service/StatisticsCache;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSubjWithResolvedRefs$10" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="117"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSubjWithResolvedRefs$9" desc="(Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;Lcom/provectus/kafka/ui/sr/model/SchemaSubject;)Lreactor/core/publisher/Mono;" line="118"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSubjWithResolvedRefs$8" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaSubject;Lcom/google/common/collect/ImmutableMap;)Lreactor/util/function/Tuple2;" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicSchema$7" desc="(Ljava/lang/String;Lorg/springframework/web/reactive/function/client/WebClientResponseException;)Ljava/lang/Throwable;" line="110"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicSchema$6" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$NotFound;)Lreactor/core/publisher/Mono;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicSchema$5" desc="(Lorg/opendatadiscovery/oddrn/model/KafkaPath;ZLreactor/util/function/Tuple2;)Ljava/util/List;" line="107"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getNonDefaultConfigs$4" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry;)Z" line="84"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createTopicDataEntity$3" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;Lreactor/util/function/Tuple2;)Lorg/opendatadiscovery/client/model/DataEntity;" line="61"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$2" desc="(Ljava/lang/String;Ljava/util/List;)Lorg/opendatadiscovery/client/model/DataEntityList;" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$export$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Throwable;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$export$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="265"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="54"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/ConnectorInfo" sourcefilename="ConnectorInfo.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;Ljava/util/Map;Ljava/util/List;Ljava/util/function/Function;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="26"><counter type="INSTRUCTION" missed="31" covered="15"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractFileIoConnector" desc="(Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;Ljava/util/List;Ljava/util/Map;Ljava/util/function/Function;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractJdbcSink" desc="(Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;Ljava/util/List;Ljava/util/Map;Ljava/util/function/Function;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="57"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractDebeziumPg" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="84"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractDebeziumMysql" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="96"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractS3Sink" desc="(Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;Ljava/util/List;Ljava/util/Map;Ljava/util/function/Function;)Lcom/provectus/kafka/ui/service/integration/odd/ConnectorInfo;" line="110"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractInputs" desc="(Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;Ljava/util/List;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/List;" line="126"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractOutputs" desc="(Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;Ljava/util/List;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/List;" line="135"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractTopicNamesBestEffort" desc="(Ljava/util/List;Ljava/util/Map;)Ljava/util/stream/Stream;" line="145"><counter type="INSTRUCTION" missed="30" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractTopicsOddrns" desc="(Ljava/util/Map;Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List;" line="162"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractTopicNamesBestEffort$7" desc="(Ljava/lang/String;)Z" line="156"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractTopicNamesBestEffort$6" desc="(Ljava/lang/String;)Ljava/util/stream/Stream;" line="154"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractS3Sink$5" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractJdbcSink$4" desc="(Ljava/util/List;Lorg/opendatadiscovery/oddrn/model/SnowflakePath;Ljava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractJdbcSink$3" desc="(Ljava/util/List;Lorg/opendatadiscovery/oddrn/model/HivePath;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractJdbcSink$2" desc="(Ljava/util/List;Lorg/opendatadiscovery/oddrn/model/MysqlPath;Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractJdbcSink$1" desc="(Ljava/util/List;Lorg/opendatadiscovery/oddrn/model/PostgreSqlPath;Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractJdbcSink$0" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="288" covered="71"/><counter type="BRANCH" missed="16" covered="6"/><counter type="LINE" missed="54" covered="17"/><counter type="COMPLEXITY" missed="23" covered="9"/><counter type="METHOD" missed="12" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving" sourcefilename="SchemaReferencesResolver.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableSet;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/provectus/kafka/ui/service/integration/odd/SchemaReferencesResolver$Resolving;" line="34"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/Oddrn" sourcefilename="Oddrn.java"><method name="clusterOddrn" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicOddrnPath" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lorg/opendatadiscovery/oddrn/model/KafkaPath;" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicOddrn" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="awsS3Oddrn" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectDataSourceOddrn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizedConnectHosts" desc="(Ljava/lang/String;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectorOddrn" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bootstrapServersForOddrn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$normalizedConnectHosts$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="82"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OddExporterScheduler.java"><line nr="9" mi="9" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Oddrn.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="1" ci="8" mb="1" cb="1"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="82"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConnectorsExporter.java"><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="29" mi="0" ci="13" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="13" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="171"/><counter type="LINE" missed="6" covered="35"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicsExporter.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="19" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="1" ci="10" mb="1" cb="1"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="13" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="265"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="54"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OddExporter.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="2" cb="0"/><line nr="45" mi="10" ci="0" mb="2" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="10" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchemaReferencesResolver.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="14" mb="0" cb="2"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ConnectorInfo.java"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="5" cb="1"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="66" mi="15" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="15" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="2" cb="0"/><line nr="72" mi="15" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="2" cb="0"/><line nr="75" mi="15" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="1" cb="1"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="13" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="7" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="8" ci="0" mb="2" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="288" covered="71"/><counter type="BRANCH" missed="16" covered="6"/><counter type="LINE" missed="54" covered="17"/><counter type="COMPLEXITY" missed="23" covered="9"/><counter type="METHOD" missed="12" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OddIntegrationProperties.java"><line nr="7" mi="146" ci="0" mb="30" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OddIntegrationConfig.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="7" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="714" covered="715"/><counter type="BRANCH" missed="53" covered="17"/><counter type="LINE" missed="124" covered="157"/><counter type="COMPLEXITY" missed="78" covered="58"/><counter type="METHOD" missed="47" covered="52"/><counter type="CLASS" missed="4" covered="6"/></package><package name="com/provectus/kafka/ui/util/annotation"><class name="com/provectus/kafka/ui/util/annotation/KafkaClientInternalsDependant" sourcefilename="KafkaClientInternalsDependant.java"/><sourcefile name="KafkaClientInternalsDependant.java"/></package><package name="com/provectus/kafka/ui/service/masking/policies"><class name="com/provectus/kafka/ui/service/masking/policies/Remove" sourcefilename="Remove.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/masking/policies/FieldsSelector;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToJsonContainer" desc="(Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFields" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;" line="26"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeFields$1" desc="(Lcom/fasterxml/jackson/databind/node/ArrayNode;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeFields$0" desc="(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/util/Map$Entry;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/masking/policies/MaskingPolicy" sourcefilename="MaskingPolicy.java"><method name="create" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking;)Lcom/provectus/kafka/ui/service/masking/policies/MaskingPolicy;" line="11"><counter type="INSTRUCTION" missed="17" covered="25"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fieldShouldBeMasked" desc="(Ljava/lang/String;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/masking/policies/FieldsSelector;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/masking/policies/FieldsSelector" sourcefilename="FieldsSelector.java"><method name="create" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking;)Lcom/provectus/kafka/ui/service/masking/policies/FieldsSelector;" line="12"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$2" desc="(Ljava/lang/String;)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$1" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking;Ljava/lang/String;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$0" desc="(Ljava/util/regex/Pattern;Ljava/lang/String;)Z" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/masking/policies/Mask" sourcefilename="Mask.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/masking/policies/FieldsSelector;Ljava/util/List;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToJsonContainer" desc="(Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMasker" desc="(Ljava/util/List;)Ljava/util/function/UnaryOperator;" line="34"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maskWithFieldsCheck" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;" line="55"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maskNodeRecursively" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;" line="76"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$maskNodeRecursively$4" desc="(Lcom/fasterxml/jackson/databind/node/ArrayNode;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$maskNodeRecursively$3" desc="(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/util/Map$Entry;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$maskWithFieldsCheck$2" desc="(Lcom/fasterxml/jackson/databind/node/ArrayNode;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$maskWithFieldsCheck$1" desc="(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/util/Map$Entry;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createMasker$0" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="209"/><counter type="BRANCH" missed="2" covered="17"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/masking/policies/Replace" sourcefilename="Replace.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/masking/policies/FieldsSelector;Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToJsonContainer" desc="(Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWithFieldsCheck" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;" line="32"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceRecursive" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;" line="54"><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$replaceRecursive$3" desc="(Lcom/fasterxml/jackson/databind/node/ArrayNode;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$replaceRecursive$2" desc="(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/util/Map$Entry;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$replaceWithFieldsCheck$1" desc="(Lcom/fasterxml/jackson/databind/node/ArrayNode;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$replaceWithFieldsCheck$0" desc="(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/util/Map$Entry;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="122"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Mask.java"><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="1" ci="8" mb="1" cb="1"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="5"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="18" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="1" cb="1"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="209"/><counter type="BRANCH" missed="2" covered="17"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldsSelector.java"><line nr="12" mi="0" ci="8" mb="0" cb="4"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="2"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Remove.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="2"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Replace.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="18" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="13" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="122"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaskingPolicy.java"><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="4" ci="7" mb="2" cb="2"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="1" cb="1"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="2" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="60" covered="484"/><counter type="BRANCH" missed="8" covered="43"/><counter type="LINE" missed="11" covered="100"/><counter type="COMPLEXITY" missed="9" covered="53"/><counter type="METHOD" missed="2" covered="32"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/provectus/kafka/ui/service/ksql/response"><class name="com/provectus/kafka/ui/service/ksql/response/ResponseParser" sourcefilename="ResponseParser.java"><method name="parseSelectResponse" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/Optional;" line="22"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseSelectHeadersString" desc="(Ljava/lang/String;)Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorTableWithTextMsg" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="73"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseErrorResponse" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="83"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseStatementResponse" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="97"><counter type="INSTRUCTION" missed="106" covered="37"/><counter type="BRANCH" missed="18" covered="3"/><counter type="LINE" missed="21" covered="9"/><counter type="COMPLEXITY" missed="18" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseObjectDynamically" desc="(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="164"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseObject" desc="(Ljava/lang/String;Ljava/util/List;Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="169"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseArray" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="174"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseProperties" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="178"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseUnknownResponse" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayFieldNonEmpty" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Z" line="194"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="258" covered="137"/><counter type="BRANCH" missed="33" covered="24"/><counter type="LINE" missed="62" covered="32"/><counter type="COMPLEXITY" missed="33" covered="16"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ksql/response/DynamicParser" sourcefilename="DynamicParser.java"><method name="parseArray" desc="(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseArray" desc="(Ljava/lang/String;Ljava/util/List;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldNamesFromArray" desc="(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseObject" desc="(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="49"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseObject" desc="(Ljava/lang/String;Ljava/util/List;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;" line="60"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFieldNamesFromArray$2" desc="(Ljava/util/List;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFieldNamesFromArray$1" desc="(Ljava/util/List;Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseArray$0" desc="(Ljava/util/List;Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="81"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="27"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DynamicParser.java"><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="1" cb="1"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="81"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="27"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResponseParser.java"><line nr="22" mi="4" ci="0" mb="2" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="2" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="2" cb="0"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="17" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="6" mb="0" cb="4"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="6"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="1" cb="1"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="18" cb="3"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="180" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="2" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="13" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="258" covered="137"/><counter type="BRANCH" missed="33" covered="24"/><counter type="LINE" missed="62" covered="32"/><counter type="COMPLEXITY" missed="33" covered="16"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="280" covered="218"/><counter type="BRANCH" missed="36" covered="25"/><counter type="LINE" missed="69" covered="59"/><counter type="COMPLEXITY" missed="36" covered="23"/><counter type="METHOD" missed="8" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/provectus/kafka/ui/mapper"><class name="com/provectus/kafka/ui/mapper/ClusterMapperImpl" sourcefilename="ClusterMapperImpl.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCluster" desc="(Lcom/provectus/kafka/ui/model/InternalClusterState;)Lcom/provectus/kafka/ui/model/ClusterDTO;" line="43"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClusterStats" desc="(Lcom/provectus/kafka/ui/model/InternalClusterState;)Lcom/provectus/kafka/ui/model/ClusterStatsDTO;" line="66"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBrokerConfig" desc="(Lcom/provectus/kafka/ui/model/InternalBrokerConfig;)Lcom/provectus/kafka/ui/model/BrokerConfigDTO;" line="90"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTopic" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;)Lcom/provectus/kafka/ui/model/TopicDTO;" line="108"><counter type="INSTRUCTION" missed="2" covered="73"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPartition" desc="(Lcom/provectus/kafka/ui/model/InternalPartition;)Lcom/provectus/kafka/ui/model/PartitionDTO;" line="133"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBrokerDto" desc="(Lcom/provectus/kafka/ui/model/InternalBroker;)Lcom/provectus/kafka/ui/model/BrokerDTO;" line="150"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTopicDetails" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;)Lcom/provectus/kafka/ui/model/TopicDetailsDTO;" line="172"><counter type="INSTRUCTION" missed="2" covered="73"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTopicConfig" desc="(Lcom/provectus/kafka/ui/model/InternalTopicConfig;)Lcom/provectus/kafka/ui/model/TopicConfigDTO;" line="197"><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toReplica" desc="(Lcom/provectus/kafka/ui/model/InternalReplica;)Lcom/provectus/kafka/ui/model/ReplicaDTO;" line="217"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toKafkaConnect" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;)Lcom/provectus/kafka/ui/model/ConnectDTO;" line="232"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toFeaturesEnum" desc="(Ljava/util/List;)Ljava/util/List;" line="246"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configSourceToConfigSourceDTO" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;)Lcom/provectus/kafka/ui/model/ConfigSourceDTO;" line="259"><counter type="INSTRUCTION" missed="20" covered="18"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="10" covered="9"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configSynonymListToConfigSynonymDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="287"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanupPolicyToCleanUpPolicyDTO" desc="(Lcom/provectus/kafka/ui/model/CleanupPolicy;)Lcom/provectus/kafka/ui/model/CleanUpPolicyDTO;" line="300"><counter type="INSTRUCTION" missed="11" covered="18"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="internalReplicaListToReplicaDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="322"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clusterFeatureToFeaturesEnum" desc="(Lcom/provectus/kafka/ui/model/ClusterFeature;)Lcom/provectus/kafka/ui/model/ClusterDTO$FeaturesEnum;" line="335"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="272" covered="393"/><counter type="BRANCH" missed="39" covered="21"/><counter type="LINE" missed="91" covered="102"/><counter type="COMPLEXITY" missed="36" covered="18"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/DescribeLogDirsMapper" sourcefilename="DescribeLogDirsMapper.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBrokerLogDirsList" desc="(Ljava/util/Map;)Ljava/util/List;" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBrokerLogDirs" desc="(Ljava/lang/Integer;Ljava/lang/String;Lorg/apache/kafka/common/requests/DescribeLogDirsResponse$LogDirInfo;)Lcom/provectus/kafka/ui/model/BrokersLogdirsDTO;" line="30"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTopicLogDirs" desc="(Ljava/lang/Integer;Ljava/lang/String;Ljava/util/List;)Lcom/provectus/kafka/ui/model/BrokerTopicLogdirsDTO;" line="46"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicPartitionLogDir" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lorg/apache/kafka/common/requests/DescribeLogDirsResponse$ReplicaInfo;)Lcom/provectus/kafka/ui/model/BrokerTopicPartitionLogdirDTO;" line="59"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toTopicLogDirs$4" desc="(Ljava/lang/Integer;Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/BrokerTopicPartitionLogdirDTO;" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBrokerLogDirs$3" desc="(Ljava/lang/Integer;Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/BrokerTopicLogdirsDTO;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBrokerLogDirs$2" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBrokerLogDirsList$1" desc="(Ljava/util/Map$Entry;)Ljava/util/List;" line="22"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBrokerLogDirsList$0" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/BrokersLogdirsDTO;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="140"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/KafkaSrMapperImpl" sourcefilename="KafkaSrMapperImpl.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="(Ljava/util/List;)Ljava/util/List;" line="26"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="(Lcom/provectus/kafka/ui/sr/model/CompatibilityCheckResponse;)Lcom/provectus/kafka/ui/model/CompatibilityCheckResponseDTO;" line="40"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDto" desc="(Lcom/provectus/kafka/ui/sr/model/Compatibility;)Lcom/provectus/kafka/ui/model/CompatibilityLevelDTO$CompatibilityEnum;" line="53"><counter type="INSTRUCTION" missed="26" covered="12"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="14" covered="5"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromDto" desc="(Lcom/provectus/kafka/ui/model/NewSchemaSubjectDTO;)Lcom/provectus/kafka/ui/sr/model/NewSubject;" line="82"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromDto" desc="(Lcom/provectus/kafka/ui/model/CompatibilityLevelDTO$CompatibilityEnum;)Lcom/provectus/kafka/ui/sr/model/Compatibility;" line="97"><counter type="INSTRUCTION" missed="26" covered="12"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="14" covered="5"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaReferenceToSchemaReferenceDTO" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaReference;)Lcom/provectus/kafka/ui/model/SchemaReferenceDTO;" line="125"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaTypeDTOToSchemaType" desc="(Lcom/provectus/kafka/ui/model/SchemaTypeDTO;)Lcom/provectus/kafka/ui/sr/model/SchemaType;" line="139"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaReferenceDTOToSchemaReference" desc="(Lcom/provectus/kafka/ui/model/SchemaReferenceDTO;)Lcom/provectus/kafka/ui/sr/model/SchemaReference;" line="159"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaReferenceDTOListToSchemaReferenceList" desc="(Ljava/util/List;)Ljava/util/List;" line="173"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="80" covered="167"/><counter type="BRANCH" missed="23" covered="19"/><counter type="LINE" missed="38" covered="52"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/ConsumerGroupMapper" sourcefilename="ConsumerGroupMapper.java"><method name="toDto" desc="(Lcom/provectus/kafka/ui/model/InternalConsumerGroup;)Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="(Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup;)Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;" line="27"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDetailsDto" desc="(Lcom/provectus/kafka/ui/model/InternalConsumerGroup;)Lcom/provectus/kafka/ui/model/ConsumerGroupDetailsDTO;" line="41"><counter type="INSTRUCTION" missed="131" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToConsumerGroup" desc="(Lcom/provectus/kafka/ui/model/InternalConsumerGroup;Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;)Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;" line="81"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapCoordinator" desc="(Lorg/apache/kafka/common/Node;)Lcom/provectus/kafka/ui/model/BrokerDTO;" line="97"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapConsumerGroupState" desc="(Lorg/apache/kafka/common/ConsumerGroupState;)Lcom/provectus/kafka/ui/model/ConsumerGroupStateDTO;" line="102"><counter type="INSTRUCTION" missed="10" covered="7"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convertToConsumerGroup$5" desc="(Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;Lorg/apache/kafka/common/Node;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convertToConsumerGroup$4" desc="(Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;Lorg/apache/kafka/common/ConsumerGroupState;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toDetailsDto$3" desc="(Lorg/apache/kafka/common/TopicPartition;)Lcom/provectus/kafka/ui/model/ConsumerGroupTopicPartitionDTO;" line="66"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toDetailsDto$2" desc="(Ljava/util/Map$Entry;Ljava/lang/Long;)Ljava/lang/Long;" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toDetailsDto$1" desc="(Ljava/util/Map$Entry;Ljava/util/Map;)Ljava/lang/Long;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toDto$0" desc="(Lcom/provectus/kafka/ui/model/ConsumerGroupDTO;Lorg/apache/kafka/common/Node;)V" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="215" covered="79"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="44" covered="15"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/ClusterMapper" sourcefilename="ClusterMapper.java"><method name="toClusterMetrics" desc="(Lcom/provectus/kafka/ui/model/Metrics;)Lcom/provectus/kafka/ui/model/ClusterMetricsDTO;" line="57"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lcom/provectus/kafka/ui/service/metrics/RawMetric;)Lcom/provectus/kafka/ui/model/MetricDTO;" line="62"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBrokerMetrics" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/BrokerMetricsDTO;" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toConfigSynonym" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSynonym;)Lcom/provectus/kafka/ui/model/ConfigSynonymDTO;" line="78"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/util/Map;)Ljava/util/List;" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/lang/Integer;Lcom/provectus/kafka/ui/model/InternalBrokerDiskUsage;)Lcom/provectus/kafka/ui/model/BrokerDiskUsageDTO;" line="115"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(ILorg/apache/kafka/clients/admin/ProducerState;)Lcom/provectus/kafka/ui/model/TopicProducerStateDTO;" line="123"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapAclOperation" desc="(Lorg/apache/kafka/common/acl/AclOperation;)Lcom/provectus/kafka/ui/model/KafkaAclDTO$OperationEnum;" line="134"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapAclResourceType" desc="(Lorg/apache/kafka/common/resource/ResourceType;)Lcom/provectus/kafka/ui/model/KafkaAclResourceTypeDTO;" line="154"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapAclResourceTypeDto" desc="(Lcom/provectus/kafka/ui/model/KafkaAclResourceTypeDTO;)Lorg/apache/kafka/common/resource/ResourceType;" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapPatternTypeDto" desc="(Lcom/provectus/kafka/ui/model/KafkaAclNamePatternTypeDTO;)Lorg/apache/kafka/common/resource/PatternType;" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAclBinding" desc="(Lcom/provectus/kafka/ui/model/KafkaAclDTO;)Lorg/apache/kafka/common/acl/AclBinding;" line="175"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toKafkaAclDto" desc="(Lorg/apache/kafka/common/acl/AclBinding;)Lcom/provectus/kafka/ui/model/KafkaAclDTO;" line="191"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="246" covered="33"/><counter type="BRANCH" missed="27" covered="2"/><counter type="LINE" missed="67" covered="8"/><counter type="COMPLEXITY" missed="36" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/KafkaConnectMapper" sourcefilename="KafkaConnectMapper.java"><method name="fullConnectorInfo" desc="(Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo;)Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;" line="38"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/KafkaSrMapper" sourcefilename="KafkaSrMapper.java"><method name="toDto" desc="(Lcom/provectus/kafka/ui/service/SchemaRegistryService$SubjectWithCompatibilityLevel;)Lcom/provectus/kafka/ui/model/SchemaSubjectDTO;" line="24"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/mapper/KafkaConnectMapperImpl" sourcefilename="KafkaConnectMapperImpl.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toClient" desc="(Lcom/provectus/kafka/ui/model/NewConnectorDTO;)Lcom/provectus/kafka/ui/connect/model/NewConnector;" line="45"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClient" desc="(Lcom/provectus/kafka/ui/connect/model/Connector;)Lcom/provectus/kafka/ui/model/ConnectorDTO;" line="62"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClient" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorStatusConnector;)Lcom/provectus/kafka/ui/model/ConnectorStatusDTO;" line="81"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClient" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorTask;)Lcom/provectus/kafka/ui/model/TaskDTO;" line="95"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClient" desc="(Lcom/provectus/kafka/ui/connect/model/TaskStatus;)Lcom/provectus/kafka/ui/model/TaskStatusDTO;" line="112"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClient" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPlugin;)Lcom/provectus/kafka/ui/model/ConnectorPluginDTO;" line="128"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClient" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfigValidationResponse;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigValidationResponseDTO;" line="141"><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taskToTaskIdDTO" desc="(Lcom/provectus/kafka/ui/connect/model/Task;)Lcom/provectus/kafka/ui/model/TaskIdDTO;" line="159"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taskListToTaskIdDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="172"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeEnumToConnectorTypeDTO" desc="(Lcom/provectus/kafka/ui/connect/model/Connector$TypeEnum;)Lcom/provectus/kafka/ui/model/ConnectorTypeDTO;" line="185"><counter type="INSTRUCTION" missed="11" covered="12"/><counter type="BRANCH" missed="3" covered="2"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateEnumToConnectorStateDTO" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorStatusConnector$StateEnum;)Lcom/provectus/kafka/ui/model/ConnectorStateDTO;" line="203"><counter type="INSTRUCTION" missed="17" covered="12"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateEnumToConnectorTaskStatusDTO" desc="(Lcom/provectus/kafka/ui/connect/model/TaskStatus$StateEnum;)Lcom/provectus/kafka/ui/model/ConnectorTaskStatusDTO;" line="225"><counter type="INSTRUCTION" missed="20" covered="12"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="10" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeEnumToTypeEnum" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfigDefinition$TypeEnum;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigDefinitionDTO$TypeEnum;" line="249"><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importanceEnumToImportanceEnum" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfigDefinition$ImportanceEnum;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigDefinitionDTO$ImportanceEnum;" line="281"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="widthEnumToWidthEnum" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfigDefinition$WidthEnum;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigDefinitionDTO$WidthEnum;" line="301"><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectorPluginConfigDefinitionToConnectorPluginConfigDefinitionDTO" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfigDefinition;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigDefinitionDTO;" line="323"><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectorPluginConfigValueToConnectorPluginConfigValueDTO" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfigValue;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigValueDTO;" line="348"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectorPluginConfigToConnectorPluginConfigDTO" desc="(Lcom/provectus/kafka/ui/connect/model/ConnectorPluginConfig;)Lcom/provectus/kafka/ui/model/ConnectorPluginConfigDTO;" line="370"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectorPluginConfigListToConnectorPluginConfigDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="383"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="477"/><counter type="BRANCH" missed="42" covered="47"/><counter type="LINE" missed="45" covered="151"/><counter type="COMPLEXITY" missed="42" covered="33"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ClusterMapperImpl.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="2" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="1" cb="1"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="1" cb="1"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="1" cb="1"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="1" cb="1"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="1" cb="1"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="1" cb="1"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="2" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="10" ci="0" mb="2" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="1" cb="1"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="5" cb="3"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="1" cb="1"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="10" mb="0" cb="2"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="1" cb="1"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="2" cb="3"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="1" cb="1"/><line nr="323" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="327" mi="0" ci="10" mb="0" cb="2"/><line nr="328" mi="0" ci="6" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="2" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="7" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="1" ci="0" mb="0" cb="0"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="1" ci="0" mb="0" cb="0"/><line nr="354" mi="6" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="272" covered="393"/><counter type="BRANCH" missed="39" covered="21"/><counter type="LINE" missed="91" covered="102"/><counter type="COMPLEXITY" missed="36" covered="18"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaSrMapper.java"><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClusterMapper.java"><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="1" cb="1"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="16" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="10" ci="0" mb="9" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="246" covered="33"/><counter type="BRANCH" missed="27" covered="2"/><counter type="LINE" missed="67" covered="8"/><counter type="COMPLEXITY" missed="36" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaConnectMapper.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescribeLogDirsMapper.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="13" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="2" cb="2"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="13" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="140"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaConnectMapperImpl.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="1" cb="1"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="1" cb="1"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="1" cb="1"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="1" cb="1"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="2"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="1" cb="1"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="2" cb="1"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="1" cb="1"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="4" cb="1"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="1" cb="1"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="5" cb="1"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="1" cb="1"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="3" cb="7"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="1" cb="1"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="1" cb="3"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="1" cb="1"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="1" cb="4"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="1" cb="1"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="6" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="6" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="1" cb="1"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="1" cb="1"/><line nr="349" mi="2" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="1" cb="1"/><line nr="358" mi="0" ci="6" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="1" cb="1"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="1" cb="1"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="6" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="1" cb="1"/><line nr="384" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="0" ci="10" mb="0" cb="2"/><line nr="389" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="104" covered="477"/><counter type="BRANCH" missed="42" covered="47"/><counter type="LINE" missed="45" covered="151"/><counter type="COMPLEXITY" missed="42" covered="33"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsumerGroupMapper.java"><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="12" ci="0" mb="2" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="14" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="11" ci="0" mb="2" cb="0"/><line nr="63" mi="11" ci="0" mb="2" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="15" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="5" cb="1"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="215" covered="79"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="44" covered="15"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaSrMapperImpl.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="2"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="2" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="7" cb="1"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="1" cb="1"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="7" cb="1"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="1" cb="1"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="1" cb="3"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="1" cb="1"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="2"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="2"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="167"/><counter type="BRANCH" missed="23" covered="19"/><counter type="LINE" missed="38" covered="52"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="922" covered="1376"/><counter type="BRANCH" missed="144" covered="92"/><counter type="LINE" missed="286" covered="380"/><counter type="COMPLEXITY" missed="153" covered="86"/><counter type="METHOD" missed="23" covered="61"/><counter type="CLASS" missed="0" covered="8"/></package><package name="com/provectus/kafka/ui/serdes/builtin/sr"><class name="com/provectus/kafka/ui/serdes/builtin/sr/MessageFormatter$AvroMessageFormatter" sourcefilename="MessageFormatter.java"><method name="&lt;init&gt;" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/String;[B)Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/sr/Serialize" sourcefilename="Serialize.java"><method name="serializeJson" desc="(Lio/confluent/kafka/schemaregistry/json/JsonSchema;ILjava/lang/String;)[B" line="41"><counter type="INSTRUCTION" missed="13" covered="51"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializeProto" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lio/confluent/kafka/schemaregistry/protobuf/ProtobufSchema;ILjava/lang/String;)[B" line="64"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializeAvro" desc="(Lio/confluent/kafka/schemaregistry/avro/AvroSchema;ILjava/lang/String;)[B" line="98"><counter type="INSTRUCTION" missed="13" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaId" desc="(I)[B" line="124"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="185"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/sr/MessageFormatter" sourcefilename="MessageFormatter.java"><method name="createMap" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;)Ljava/util/Map;" line="22"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/sr/SchemaRegistrySerde" sourcefilename="SchemaRegistrySerde.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeAutoConfigured" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoConfigure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="96"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljava/util/List;Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;Ljava/lang/String;Ljava/lang/String;Z)V" line="125"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSchemaRegistryClient" desc="(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;" line="140"><counter type="INSTRUCTION" missed="54" covered="31"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="9" covered="8"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="179"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="184"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="191"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="197"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertSchema" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;Lio/confluent/kafka/schemaregistry/ParsedSchema;)Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="21" covered="37"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaById" desc="(I)Ljava/util/Optional;" line="234"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaBySubject" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="238"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapWith404Handler" desc="(Ljava/util/concurrent/Callable;)Ljava/util/Optional;" line="241"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaSubject" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/lang/String;" line="255"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="260"><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="281"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessageFormatBySchemaId" desc="(I)Lcom/provectus/kafka/ui/serdes/builtin/sr/SchemaType;" line="297"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractSchemaIdFromMsg" desc="([B)I" line="304"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMessageFormatBySchemaId$18" desc="(I)Lcom/provectus/kafka/ui/exception/ValidationException;" line="300"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deserializer$17" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="282"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$16" desc="(Lio/confluent/kafka/schemaregistry/ParsedSchema;Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;Ljava/lang/String;)[B" line="275"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$15" desc="(Lio/confluent/kafka/schemaregistry/ParsedSchema;Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;Ljava/lang/String;)[B" line="273"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$14" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lio/confluent/kafka/schemaregistry/ParsedSchema;Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;Ljava/lang/String;)[B" line="271"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$13" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;)Ljava/lang/IllegalStateException;" line="268"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$serializer$12" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;Ljava/lang/String;)Ljava/lang/IllegalStateException;" line="265"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$serializer$11" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/exception/ValidationException;" line="262"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSchemaBySubject$10" desc="(Ljava/lang/String;)Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;" line="238"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemaById$9" desc="(I)Lio/confluent/kafka/schemaregistry/ParsedSchema;" line="234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convertSchema$8" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;)Ljava/lang/IllegalStateException;" line="219"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSchema$7" desc="(Ljava/lang/String;Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;)Ljava/util/Optional;" line="201"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchema$6" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaMetadata;Ljava/lang/String;Lio/confluent/kafka/schemaregistry/ParsedSchema;)Lcom/provectus/kafka/ui/serde/api/SchemaDescription;" line="203"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$5" desc="()Lcom/provectus/kafka/ui/exception/ValidationException;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$4" desc="(Ljava/util/List;)Z" line="98"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$3" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Ljava/util/Optional;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$autoConfigure$2" desc="()Lcom/provectus/kafka/ui/exception/ValidationException;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$autoConfigure$1" desc="(Ljava/util/List;)Z" line="72"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$canBeAutoConfigured$0" desc="(Ljava/util/List;)Z" line="64"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="255" covered="462"/><counter type="BRANCH" missed="20" covered="22"/><counter type="LINE" missed="36" covered="100"/><counter type="COMPLEXITY" missed="27" covered="35"/><counter type="METHOD" missed="11" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/sr/MessageFormatter$ProtobufMessageFormatter" sourcefilename="MessageFormatter.java"><method name="&lt;init&gt;" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/String;[B)Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/sr/SchemaType" sourcefilename="SchemaType.java"><method name="fromString" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/sr/MessageFormatter$JsonSchemaMessageFormatter" sourcefilename="MessageFormatter.java"><method name="&lt;init&gt;" desc="(Lio/confluent/kafka/schemaregistry/client/SchemaRegistryClient;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/String;[B)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MessageFormatter.java"><line nr="22" mi="0" ci="17" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="97"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Serialize.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="22" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="1" cb="1"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="185"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SchemaType.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SchemaRegistrySerde.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="1" ci="7" mb="1" cb="1"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="1" ci="8" mb="1" cb="1"/><line nr="73" mi="5" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="2" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="2" ci="2" mb="3" cb="1"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="1" cb="1"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="2" mb="3" cb="1"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="2" mb="3" cb="1"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="14" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="2"/><line nr="186" mi="0" ci="6" mb="0" cb="2"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="9" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="7" ci="3" mb="0" cb="0"/><line nr="220" mi="4" ci="6" mb="3" cb="1"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="1" cb="1"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="16" mb="0" cb="2"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="10" ci="3" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="9" ci="3" mb="0" cb="0"/><line nr="266" mi="9" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="7" ci="3" mb="0" cb="0"/><line nr="269" mi="4" ci="6" mb="1" cb="3"/><line nr="270" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="11" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="13" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="7" mb="0" cb="4"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="255" covered="462"/><counter type="BRANCH" missed="20" covered="22"/><counter type="LINE" missed="36" covered="100"/><counter type="COMPLEXITY" missed="27" covered="35"/><counter type="METHOD" missed="11" covered="28"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="284" covered="771"/><counter type="BRANCH" missed="21" covered="25"/><counter type="LINE" missed="42" covered="177"/><counter type="COMPLEXITY" missed="28" covered="50"/><counter type="METHOD" missed="11" covered="42"/><counter type="CLASS" missed="0" covered="7"/></package><package name="com/provectus/kafka/ui/model"><class name="com/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder" sourcefilename="InternalConsumerGroup.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumerId" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupInstanceId" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clientId" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="host" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignment" desc="(Ljava/util/Set;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember;" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/CleanupPolicy" sourcefilename="CleanupPolicy.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/List;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPolicy" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/CleanupPolicy;" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fromString$1" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/CleanupPolicy;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fromString$0" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="80"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/BrokerMetrics$BrokerMetricsBuilder" sourcefilename="BrokerMetrics.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metrics" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/BrokerMetrics$BrokerMetricsBuilder;" line="8"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/BrokerMetrics;" line="8"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember" sourcefilename="InternalConsumerGroup.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember$InternalMemberBuilder;" line="31"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerId" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupInstanceId" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClientId" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHost" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssignment" desc="()Ljava/util/Set;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="30"><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="30"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="228" covered="25"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="32" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder" sourcefilename="InternalClusterMetrics.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="version" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="status" desc="(Lcom/provectus/kafka/ui/model/ServerStatusDTO;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastKafkaException" desc="(Ljava/lang/Throwable;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="brokerCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activeControllers" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="brokers" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="topicCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="topics" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="underReplicatedPartitionCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onlinePartitionCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="offlinePartitionCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inSyncReplicasCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outOfSyncReplicasCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="internalBrokerDiskUsage" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bytesInPerSec" desc="(Ljava/math/BigDecimal;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bytesOutPerSec" desc="(Ljava/math/BigDecimal;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="internalBrokerMetrics" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metrics" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalClusterMetrics;" line="12"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalClusterState" sourcefilename="InternalClusterState.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;)V" line="31"><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStatus" desc="()Lcom/provectus/kafka/ui/model/ServerStatusDTO;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastError" desc="()Lcom/provectus/kafka/ui/model/MetricsCollectionErrorDTO;" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicCount" desc="()Ljava/lang/Integer;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBrokerCount" desc="()Ljava/lang/Integer;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActiveControllers" desc="()Ljava/lang/Integer;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOnlinePartitionCount" desc="()Ljava/lang/Integer;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOfflinePartitionCount" desc="()Ljava/lang/Integer;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInSyncReplicasCount" desc="()Ljava/lang/Integer;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutOfSyncReplicasCount" desc="()Ljava/lang/Integer;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnderReplicatedPartitionCount" desc="()Ljava/lang/Integer;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDiskUsage" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeatures" desc="()Ljava/util/List;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBytesInPerSec" desc="()Ljava/math/BigDecimal;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBytesOutPerSec" desc="()Ljava/math/BigDecimal;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReadOnly" desc="()Ljava/lang/Boolean;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStatus" desc="(Lcom/provectus/kafka/ui/model/ServerStatusDTO;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLastError" desc="(Lcom/provectus/kafka/ui/model/MetricsCollectionErrorDTO;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTopicCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBrokerCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActiveControllers" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOnlinePartitionCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOfflinePartitionCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInSyncReplicasCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutOfSyncReplicasCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUnderReplicatedPartitionCount" desc="(Ljava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDiskUsage" desc="(Ljava/util/List;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVersion" desc="(Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFeatures" desc="(Ljava/util/List;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBytesInPerSec" desc="(Ljava/math/BigDecimal;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBytesOutPerSec" desc="(Ljava/math/BigDecimal;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReadOnly" desc="(Ljava/lang/Boolean;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="310" covered="0"/><counter type="BRANCH" missed="108" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="55" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="11"><counter type="INSTRUCTION" missed="244" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/BrokerDiskUsageDTO;" line="48"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/lang/Throwable;)Lcom/provectus/kafka/ui/model/MetricsCollectionErrorDTO;" line="35"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="871" covered="0"/><counter type="BRANCH" missed="144" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="113" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/BrokerMetrics" sourcefilename="BrokerMetrics.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="8"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/BrokerMetrics$BrokerMetricsBuilder;" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/BrokerMetrics$BrokerMetricsBuilder;" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetrics" desc="()Ljava/util/List;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="7"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/ClusterFeature" sourcefilename="ClusterFeature.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalBrokerDiskUsage$InternalBrokerDiskUsageBuilder" sourcefilename="InternalBrokerDiskUsage.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="segmentCount" desc="(J)Lcom/provectus/kafka/ui/model/InternalBrokerDiskUsage$InternalBrokerDiskUsageBuilder;" line="7"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="segmentSize" desc="(J)Lcom/provectus/kafka/ui/model/InternalBrokerDiskUsage$InternalBrokerDiskUsageBuilder;" line="7"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalBrokerDiskUsage;" line="7"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalReplica" sourcefilename="InternalReplica.java"><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalReplica$InternalReplicaBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBroker" desc="()I" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeader" desc="()Z" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInSync" desc="()Z" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="7"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IZZ)V" line="9"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="25"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="12" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalLogDirStats$SegmentStats" sourcefilename="InternalLogDirStats.java"><method name="&lt;init&gt;" desc="(Ljava/util/LongSummaryStatistics;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSegmentSize" desc="()J" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSegmentsCount" desc="()I" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="21"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="21"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="12"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalReplica$InternalReplicaBuilder" sourcefilename="InternalReplica.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broker" desc="(I)Lcom/provectus/kafka/ui/model/InternalReplica$InternalReplicaBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leader" desc="(Z)Lcom/provectus/kafka/ui/model/InternalReplica$InternalReplicaBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inSync" desc="(Z)Lcom/provectus/kafka/ui/model/InternalReplica$InternalReplicaBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalReplica;" line="8"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalBrokerDiskUsage" sourcefilename="InternalBrokerDiskUsage.java"><method name="&lt;init&gt;" desc="(JJ)V" line="7"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalBrokerDiskUsage$InternalBrokerDiskUsageBuilder;" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalBrokerDiskUsage$InternalBrokerDiskUsageBuilder;" line="7"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSegmentCount" desc="()J" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSegmentSize" desc="()J" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="6"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder" sourcefilename="InternalTopic.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clustersProperties" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="internal" desc="(Z)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replicas" desc="(I)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inSyncReplicas" desc="(I)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replicationFactor" desc="(I)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="underReplicatedPartitions" desc="(I)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitions" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicConfigs" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanUpPolicy" desc="(Lcom/provectus/kafka/ui/model/CleanupPolicy;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytesInPerSec" desc="(Ljava/math/BigDecimal;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytesOutPerSec" desc="(Ljava/math/BigDecimal;)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentSize" desc="(J)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="segmentCount" desc="(J)Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalTopic;" line="16"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="97"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/KafkaCluster" sourcefilename="KafkaCluster.java"><method name="builder" desc="()Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalProperties" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBootstrapServers" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Properties;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReadOnly" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetricsConfig" desc="()Lcom/provectus/kafka/ui/model/MetricsConfig;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMasking" desc="()Lcom/provectus/kafka/ui/service/masking/DataMasking;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPollingSettings" desc="()Lcom/provectus/kafka/ui/emitter/PollingSettings;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaRegistryClient" desc="()Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectsClients" desc="()Ljava/util/Map;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKsqlClient" desc="()Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="17"><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="74" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="17"><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;ZLcom/provectus/kafka/ui/model/MetricsConfig;Lcom/provectus/kafka/ui/service/masking/DataMasking;Lcom/provectus/kafka/ui/emitter/PollingSettings;Lcom/provectus/kafka/ui/util/ReactiveFailover;Ljava/util/Map;Lcom/provectus/kafka/ui/util/ReactiveFailover;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="458" covered="76"/><counter type="BRANCH" missed="98" covered="0"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="55" covered="13"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder" sourcefilename="InternalTopicConfig.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultValue" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSensitive" desc="(Z)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReadOnly" desc="(Z)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="synonyms" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doc" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalTopicConfig;" line="10"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="63"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/ConsumerPosition" sourcefilename="ConsumerPosition.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/SeekTypeDTO;Ljava/lang/String;Ljava/util/Map;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeekType" desc="()Lcom/provectus/kafka/ui/model/SeekTypeDTO;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopic" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeekTo" desc="()Ljava/util/Map;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="8"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="29"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/Metrics" sourcefilename="Metrics.java"><method name="empty" desc="()Lcom/provectus/kafka/ui/model/Metrics;" line="26"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSummarizedMetrics" desc="()Ljava/util/stream/Stream;" line="36"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokerBytesInPerSec" desc="()Ljava/util/Map;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokerBytesOutPerSec" desc="()Ljava/util/Map;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicBytesInPerSec" desc="()Ljava/util/Map;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicBytesOutPerSec" desc="()Ljava/util/Map;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPerBrokerMetrics" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="16"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSummarizedMetrics$1" desc="(Lcom/provectus/kafka/ui/service/metrics/RawMetric;Lcom/provectus/kafka/ui/service/metrics/RawMetric;)Lcom/provectus/kafka/ui/service/metrics/RawMetric;" line="38"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSummarizedMetrics$0" desc="(Lcom/provectus/kafka/ui/service/metrics/RawMetric;)Lcom/provectus/kafka/ui/service/metrics/RawMetric;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="216" covered="47"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="29" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalTopicConsumerGroup" sourcefilename="InternalTopicConsumerGroup.java"><method name="create" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;Ljava/util/Map;Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup;" line="32"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateConsumerLag" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Long;" line="51"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Long;ZLjava/lang/String;Lorg/apache/kafka/common/ConsumerGroupState;Lorg/apache/kafka/common/Node;)V" line="14"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupId" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMembers" desc="()I" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerLag" desc="()Ljava/lang/Long;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSimple" desc="()Z" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartitionAssignor" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getState" desc="()Lorg/apache/kafka/common/ConsumerGroupState;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoordinator" desc="()Lorg/apache/kafka/common/Node;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="13"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="13"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calculateConsumerLag$3" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)J" line="56"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calculateConsumerLag$2" desc="(Ljava/util/Map$Entry;Ljava/lang/Long;)Ljava/lang/Long;" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$create$1" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/MemberDescription;)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$create$0" desc="(Ljava/lang/String;Lorg/apache/kafka/common/TopicPartition;)Z" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="355" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/MetricsConfig" sourcefilename="MetricsConfig.java"><method name="builder" desc="()Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPort" desc="()Ljava/lang/Integer;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSsl" desc="()Z" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeystoreLocation" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeystorePassword" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="8"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Integer;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="287" covered="37"/><counter type="BRANCH" missed="58" covered="0"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="38" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder" sourcefilename="InternalPartition.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partition" desc="(I)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leader" desc="(Ljava/lang/Integer;)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replicas" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inSyncReplicasCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replicasCount" desc="(I)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetMin" desc="(Ljava/lang/Long;)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetMax" desc="(Ljava/lang/Long;)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentSize" desc="(Ljava/lang/Long;)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="segmentCount" desc="(Ljava/lang/Integer;)Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalPartition;" line="8"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="60"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalSegmentSizeDto$InternalSegmentSizeDtoBuilder" sourcefilename="InternalSegmentSizeDto.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="internalTopicWithSegmentSize" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalSegmentSizeDto$InternalSegmentSizeDtoBuilder;" line="8"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clusterMetricsWithSegmentSize" desc="(Lcom/provectus/kafka/ui/model/InternalClusterMetrics;)Lcom/provectus/kafka/ui/model/InternalSegmentSizeDto$InternalSegmentSizeDtoBuilder;" line="8"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalSegmentSizeDto;" line="8"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalConsumerGroup" sourcefilename="InternalConsumerGroup.java"><method name="create" desc="(Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;Ljava/util/Map;Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup;" line="44"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateConsumerLag" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Long;" line="60"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateTopicNum" desc="(Ljava/util/Map;Ljava/util/Collection;)Ljava/lang/Integer;" line="77"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initInternalMembers" desc="(Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)Ljava/util/Collection;" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLjava/util/Collection;Ljava/util/Map;Ljava/util/Map;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/String;Lorg/apache/kafka/common/ConsumerGroupState;Lorg/apache/kafka/common/Node;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupId" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimple" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMembers" desc="()Ljava/util/Collection;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffsets" desc="()Ljava/util/Map;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEndOffsets" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerLag" desc="()Ljava/lang/Long;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicNum" desc="()Ljava/lang/Integer;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionAssignor" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getState" desc="()Lorg/apache/kafka/common/ConsumerGroupState;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoordinator" desc="()Lorg/apache/kafka/common/Node;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="181" covered="0"/><counter type="BRANCH" missed="62" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="16"><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$initInternalMembers$4" desc="(Lorg/apache/kafka/clients/admin/MemberDescription;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember;" line="88"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$calculateTopicNum$3" desc="(Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalMember;)Ljava/util/stream/Stream;" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$calculateConsumerLag$2" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)J" line="65"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calculateConsumerLag$1" desc="(Ljava/util/Map$Entry;Ljava/lang/Long;)Ljava/lang/Long;" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calculateConsumerLag$0" desc="(Ljava/util/Map$Entry;Ljava/util/Map;)Ljava/lang/Long;" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="427" covered="184"/><counter type="BRANCH" missed="83" covered="1"/><counter type="LINE" missed="10" covered="41"/><counter type="COMPLEXITY" missed="52" covered="16"/><counter type="METHOD" missed="10" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/PartitionDistributionStats" sourcefilename="PartitionDistributionStats.java"><method name="create" desc="(Lcom/provectus/kafka/ui/model/Statistics;)Lcom/provectus/kafka/ui/model/PartitionDistributionStats;" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lcom/provectus/kafka/ui/model/Statistics;I)Lcom/provectus/kafka/ui/model/PartitionDistributionStats;" line="36"><counter type="INSTRUCTION" missed="5" covered="107"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incr" desc="(Ljava/util/Map;Lorg/apache/kafka/common/Node;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionsSkew" desc="(Lorg/apache/kafka/common/Node;)Ljava/math/BigDecimal;" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leadersSkew" desc="(Lorg/apache/kafka/common/Node;)Ljava/math/BigDecimal;" line="79"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateAvgSkew" desc="(Ljava/lang/Integer;D)Ljava/math/BigDecimal;" line="85"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;DDZ)V" line="16"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionLeaders" desc="()Ljava/util/Map;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionsCount" desc="()Ljava/util/Map;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInSyncPartitions" desc="()Ljava/util/Map;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAvgLeadersCntPerBroker" desc="()D" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAvgPartitionsPerBroker" desc="()D" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSkewCanBeCalculated" desc="()Z" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$incr$4" desc="(Lorg/apache/kafka/common/Node;Ljava/lang/Integer;)Ljava/lang/Integer;" line="69"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$3" desc="(Ljava/lang/Integer;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$2" desc="(Ljava/lang/Integer;)I" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$1" desc="(Ljava/util/HashMap;Lorg/apache/kafka/common/Node;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$0" desc="(Ljava/util/HashMap;Lorg/apache/kafka/common/Node;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="233"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalSegmentSizeDto" sourcefilename="InternalSegmentSizeDto.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/model/InternalClusterMetrics;)V" line="8"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalSegmentSizeDto$InternalSegmentSizeDtoBuilder;" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalSegmentSizeDto$InternalSegmentSizeDtoBuilder;" line="8"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInternalTopicWithSegmentSize" desc="()Ljava/util/Map;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClusterMetricsWithSegmentSize" desc="()Lcom/provectus/kafka/ui/model/InternalClusterMetrics;" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="7"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalPartitionsOffsets$Offsets" sourcefilename="InternalPartitionsOffsets.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Long;Ljava/lang/Long;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEarliest" desc="()Ljava/lang/Long;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLatest" desc="()Ljava/lang/Long;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="13"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="13"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="15"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalBrokerConfig" sourcefilename="InternalBrokerConfig.java"><method name="from" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry;)Lcom/provectus/kafka/ui/model/InternalBrokerConfig;" line="20"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;ZZLjava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSensitive" desc="()Z" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReadOnly" desc="()Z" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSynonyms" desc="()Ljava/util/List;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="9"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="204" covered="66"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="27" covered="9"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/Metrics$MetricsBuilder" sourcefilename="Metrics.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="brokerBytesInPerSec" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="brokerBytesOutPerSec" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicBytesInPerSec" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicBytesOutPerSec" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perBrokerMetrics" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/Metrics;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/Statistics" sourcefilename="Statistics.java"><method name="empty" desc="()Lcom/provectus/kafka/ui/model/Statistics;" line="26"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/ServerStatusDTO;Ljava/lang/Throwable;Ljava/lang/String;Ljava/util/List;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;Lcom/provectus/kafka/ui/model/Metrics;Lcom/provectus/kafka/ui/model/InternalLogDirStats;Ljava/util/Map;Ljava/util/Map;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatus" desc="()Lcom/provectus/kafka/ui/model/ServerStatusDTO;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastKafkaException" desc="()Ljava/lang/Throwable;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeatures" desc="()Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusterDescription" desc="()Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetrics" desc="()Lcom/provectus/kafka/ui/model/Metrics;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogDirInfo" desc="()Lcom/provectus/kafka/ui/model/InternalLogDirStats;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicDescriptions" desc="()Ljava/util/Map;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicConfigs" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="12"><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="BRANCH" missed="58" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="12"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="326" covered="111"/><counter type="BRANCH" missed="76" covered="0"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="43" covered="11"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalClusterMetrics" sourcefilename="InternalClusterMetrics.java"><method name="empty" desc="()Lcom/provectus/kafka/ui/model/InternalClusterMetrics;" line="16"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/ServerStatusDTO;Ljava/lang/Throwable;IILjava/util/List;ILjava/util/Map;IIIIILjava/util/Map;Ljava/math/BigDecimal;Ljava/math/BigDecimal;Ljava/util/Map;Ljava/util/List;)V" line="12"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalClusterMetrics$InternalClusterMetricsBuilder;" line="12"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStatus" desc="()Lcom/provectus/kafka/ui/model/ServerStatusDTO;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastKafkaException" desc="()Ljava/lang/Throwable;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBrokerCount" desc="()I" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActiveControllers" desc="()I" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBrokers" desc="()Ljava/util/List;" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicCount" desc="()I" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="()Ljava/util/Map;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnderReplicatedPartitionCount" desc="()I" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOnlinePartitionCount" desc="()I" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOfflinePartitionCount" desc="()I" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInSyncReplicasCount" desc="()I" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutOfSyncReplicasCount" desc="()I" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInternalBrokerDiskUsage" desc="()Ljava/util/Map;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBytesInPerSec" desc="()Ljava/math/BigDecimal;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBytesOutPerSec" desc="()Ljava/math/BigDecimal;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInternalBrokerMetrics" desc="()Ljava/util/Map;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetrics" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="82" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="11"><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="678" covered="0"/><counter type="BRANCH" missed="102" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="77" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/InternalBroker" sourcefilename="InternalBroker.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/common/Node;Lcom/provectus/kafka/ui/model/PartitionDistributionStats;Lcom/provectus/kafka/ui/model/Statistics;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Integer;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHost" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPort" desc="()Ljava/lang/Integer;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytesInPerSec" desc="()Ljava/math/BigDecimal;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBytesOutPerSec" desc="()Ljava/math/BigDecimal;" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartitionsLeader" desc="()Ljava/lang/Integer;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartitions" desc="()Ljava/lang/Integer;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInSyncPartitions" desc="()Ljava/lang/Integer;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLeadersSkew" desc="()Ljava/math/BigDecimal;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartitionsSkew" desc="()Ljava/math/BigDecimal;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="66" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="8"><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="383" covered="77"/><counter type="BRANCH" missed="86" covered="0"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="54" covered="4"/><counter type="METHOD" missed="11" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/PartitionsStats" sourcefilename="PartitionsStats.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/clients/admin/TopicDescription;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionsCount" desc="()I" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplicasCount" desc="()I" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOnlinePartitionCount" desc="()I" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOfflinePartitionCount" desc="()I" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInSyncReplicasCount" desc="()I" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutOfSyncReplicasCount" desc="()I" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnderReplicatedPartitionCount" desc="()I" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPartitionsCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReplicasCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOnlinePartitionCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOfflinePartitionCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInSyncReplicasCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutOfSyncReplicasCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUnderReplicatedPartitionCount" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="8"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lorg/apache/kafka/common/TopicPartitionInfo;)V" line="27"><counter type="INSTRUCTION" missed="6" covered="64"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lorg/apache/kafka/clients/admin/TopicDescription;)Ljava/util/stream/Stream;" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="187" covered="95"/><counter type="BRANCH" missed="21" covered="5"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="25" covered="10"/><counter type="METHOD" missed="14" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalTopicConfig" sourcefilename="InternalTopicConfig.java"><method name="from" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry;)Lcom/provectus/kafka/ui/model/InternalTopicConfig;" line="22"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;ZZLjava/util/List;Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalTopicConfig$InternalTopicConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSensitive" desc="()Z" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReadOnly" desc="()Z" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSynonyms" desc="()Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDoc" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="9"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$0" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSynonym;)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="270" covered="113"/><counter type="BRANCH" missed="62" covered="4"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="35" covered="14"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder" sourcefilename="KafkaCluster.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="originalProperties" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bootstrapServers" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="properties" desc="(Ljava/util/Properties;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readOnly" desc="(Z)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metricsConfig" desc="(Lcom/provectus/kafka/ui/model/MetricsConfig;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="masking" desc="(Lcom/provectus/kafka/ui/service/masking/DataMasking;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollingSettings" desc="(Lcom/provectus/kafka/ui/emitter/PollingSettings;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaRegistryClient" desc="(Lcom/provectus/kafka/ui/util/ReactiveFailover;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsClients" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ksqlClient" desc="(Lcom/provectus/kafka/ui/util/ReactiveFailover;)Lcom/provectus/kafka/ui/model/KafkaCluster$KafkaClusterBuilder;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/KafkaCluster;" line="18"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="81"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalPartitionsOffsets" sourcefilename="InternalPartitionsOffsets.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;I)Ljava/util/Optional;" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lorg/apache/kafka/common/TopicPartition;Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets$Offsets;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder" sourcefilename="InternalBrokerConfig.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;)Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSensitive" desc="(Z)Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReadOnly" desc="(Z)Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="synonyms" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalBrokerConfig$InternalBrokerConfigBuilder;" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalBrokerConfig;" line="10"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder" sourcefilename="InternalConsumerGroup.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupId" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simple" desc="(Z)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="members" desc="(Ljava/util/Collection;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsets" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endOffsets" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumerLag" desc="(Ljava/lang/Long;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicNum" desc="(Ljava/lang/Integer;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionAssignor" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="state" desc="(Lorg/apache/kafka/common/ConsumerGroupState;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinator" desc="(Lorg/apache/kafka/common/Node;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup$InternalConsumerGroupBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalConsumerGroup;" line="17"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="77"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalPartition" sourcefilename="InternalPartition.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Integer;Ljava/util/List;IILjava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Integer;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;" line="8"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartition" desc="()I" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeader" desc="()Ljava/lang/Integer;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplicas" desc="()Ljava/util/List;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInSyncReplicasCount" desc="()I" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReplicasCount" desc="()I" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOffsetMin" desc="()Ljava/lang/Long;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffsetMax" desc="()Ljava/lang/Long;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSegmentSize" desc="()Ljava/lang/Long;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSegmentCount" desc="()Ljava/lang/Integer;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="144" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="7"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="321" covered="49"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="39" covered="7"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder" sourcefilename="InternalTopicConsumerGroup.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="groupId" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="members" desc="(I)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consumerLag" desc="(Ljava/lang/Long;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSimple" desc="(Z)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="partitionAssignor" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="state" desc="(Lorg/apache/kafka/common/ConsumerGroupState;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coordinator" desc="(Lorg/apache/kafka/common/Node;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup$InternalTopicConsumerGroupBuilder;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup;" line="14"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/Statistics$StatisticsBuilder" sourcefilename="Statistics.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="status" desc="(Lcom/provectus/kafka/ui/model/ServerStatusDTO;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastKafkaException" desc="(Ljava/lang/Throwable;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="features" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clusterDescription" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metrics" desc="(Lcom/provectus/kafka/ui/model/Metrics;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logDirInfo" desc="(Lcom/provectus/kafka/ui/model/InternalLogDirStats;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicDescriptions" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicConfigs" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Statistics$StatisticsBuilder;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/Statistics;" line="13"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="70"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalTopic" sourcefilename="InternalTopic.java"><method name="from" desc="(Lorg/apache/kafka/clients/admin/TopicDescription;Ljava/util/List;Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets;Lcom/provectus/kafka/ui/model/Metrics;Lcom/provectus/kafka/ui/model/InternalLogDirStats;Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopic;" line="49"><counter type="INSTRUCTION" missed="11" covered="146"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="35"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;Ljava/lang/String;ZIIIIILjava/util/Map;Ljava/util/List;Lcom/provectus/kafka/ui/model/CleanupPolicy;Ljava/math/BigDecimal;Ljava/math/BigDecimal;JJ)V" line="16"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/InternalTopic$InternalTopicBuilder;" line="16"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClustersProperties" desc="()Lcom/provectus/kafka/ui/config/ClustersProperties;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInternal" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplicas" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionCount" desc="()I" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInSyncReplicas" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplicationFactor" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnderReplicatedPartitions" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitions" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicConfigs" desc="()Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCleanUpPolicy" desc="()Lcom/provectus/kafka/ui/model/CleanupPolicy;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytesInPerSec" desc="()Ljava/math/BigDecimal;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytesOutPerSec" desc="()Ljava/math/BigDecimal;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSegmentSize" desc="()J" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSegmentCount" desc="()J" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClustersProperties" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="15"><counter type="INSTRUCTION" missed="198" covered="0"/><counter type="BRANCH" missed="64" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="15"><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$4" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry;)Z" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$3" desc="(Lcom/provectus/kafka/ui/model/InternalPartition;)Lcom/provectus/kafka/ui/model/InternalPartition;" line="97"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$2" desc="(Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets;Lorg/apache/kafka/clients/admin/TopicDescription;Lcom/provectus/kafka/ui/model/InternalLogDirStats;Lorg/apache/kafka/common/TopicPartitionInfo;)Lcom/provectus/kafka/ui/model/InternalPartition;" line="62"><counter type="INSTRUCTION" missed="12" covered="71"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$1" desc="(Lcom/provectus/kafka/ui/model/InternalPartition$InternalPartitionBuilder;Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets$Offsets;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$0" desc="(Lorg/apache/kafka/common/TopicPartitionInfo;Lorg/apache/kafka/common/Node;)Lcom/provectus/kafka/ui/model/InternalReplica;" line="70"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="491" covered="352"/><counter type="BRANCH" missed="86" covered="14"/><counter type="LINE" missed="6" covered="74"/><counter type="COMPLEXITY" missed="53" covered="26"/><counter type="METHOD" missed="7" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/InternalLogDirStats" sourcefilename="InternalLogDirStats.java"><method name="empty" desc="()Lcom/provectus/kafka/ui/model/InternalLogDirStats;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionsStats" desc="()Ljava/util/Map;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicStats" desc="()Ljava/util/Map;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokerStats" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="18"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="18"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Lreactor/util/function/Tuple3;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)Ljava/util/stream/Stream;" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)Lreactor/util/function/Tuple3;" line="45"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="94"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder" sourcefilename="MetricsConfig.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="port" desc="(Ljava/lang/Integer;)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ssl" desc="(Z)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="username" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="password" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keystoreLocation" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keystorePassword" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/MetricsConfig$MetricsConfigBuilder;" line="9"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/MetricsConfig;" line="9"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="46"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KafkaCluster.java"><line nr="17" mi="415" ci="0" mb="98" cb="0"/><line nr="18" mi="76" ci="85" mb="0" cb="0"/><line nr="19" mi="0" ci="39" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="494" covered="157"/><counter type="BRANCH" missed="98" covered="0"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="58" covered="25"/><counter type="METHOD" missed="9" covered="25"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalClusterState.java"><line nr="11" mi="661" ci="0" mb="142" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="871" covered="0"/><counter type="BRANCH" missed="144" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="113" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CleanupPolicy.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="7" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="10" mi="0" ci="17" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="80"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InternalLogDirStats.java"><line nr="18" mi="122" ci="0" mb="28" cb="0"/><line nr="21" mi="63" ci="0" mb="8" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="14" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="194" covered="106"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="27" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalClusterMetrics.java"><line nr="11" mi="490" ci="0" mb="102" cb="0"/><line nr="12" mi="290" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="849" covered="0"/><counter type="BRANCH" missed="102" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="98" covered="0"/><counter type="METHOD" missed="47" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="InternalBrokerConfig.java"><line nr="9" mi="204" ci="0" mb="46" cb="0"/><line nr="10" mi="14" ci="74" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="218" covered="115"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="28" covered="17"/><counter type="METHOD" missed="5" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalSegmentSizeDto.java"><line nr="7" mi="98" ci="0" mb="22" cb="0"/><line nr="8" mi="50" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="InternalPartition.java"><line nr="7" mi="278" ci="0" mb="60" cb="0"/><line nr="8" mi="61" ci="94" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="351" covered="109"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="42" covered="16"/><counter type="METHOD" missed="12" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalTopicConsumerGroup.java"><line nr="13" mi="224" ci="0" mb="50" cb="0"/><line nr="14" mi="100" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="14" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="427" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="54" covered="0"/><counter type="METHOD" missed="28" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="MetricsConfig.java"><line nr="8" mi="250" ci="0" mb="58" cb="0"/><line nr="9" mi="51" ci="50" mb="0" cb="0"/><line nr="10" mi="0" ci="24" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="313" covered="83"/><counter type="BRANCH" missed="58" covered="0"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="41" covered="12"/><counter type="METHOD" missed="12" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalBrokerDiskUsage.java"><line nr="6" mi="80" ci="0" mb="10" cb="0"/><line nr="7" mi="50" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="InternalTopic.java"><line nr="15" mi="415" ci="0" mb="80" cb="0"/><line nr="16" mi="96" ci="149" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="1" cb="3"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="1" cb="3"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="1" ci="11" mb="2" cb="2"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="1" cb="1"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="538" covered="449"/><counter type="BRANCH" missed="86" covered="14"/><counter type="LINE" missed="6" covered="74"/><counter type="COMPLEXITY" missed="57" covered="40"/><counter type="METHOD" missed="11" covered="36"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalConsumerGroup.java"><line nr="16" mi="349" ci="0" mb="82" cb="0"/><line nr="17" mi="56" ci="114" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="197" ci="0" mb="46" cb="0"/><line nr="31" mi="31" ci="64" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="689" covered="328"/><counter type="BRANCH" missed="129" covered="1"/><counter type="LINE" missed="15" covered="43"/><counter type="COMPLEXITY" missed="86" covered="38"/><counter type="METHOD" missed="21" covered="38"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ConsumerPosition.java"><line nr="8" mi="114" ci="20" mb="28" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="29"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClusterFeature.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="6" mb="0" cb="0"/><line nr="5" mi="0" ci="6" mb="0" cb="0"/><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BrokerMetrics.java"><line nr="7" mi="65" ci="0" mb="14" cb="0"/><line nr="8" mi="35" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="PartitionsStats.java"><line nr="8" mi="172" ci="0" mb="20" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="2"/><line nr="30" mi="0" ci="11" mb="0" cb="2"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="1" cb="1"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="187" covered="95"/><counter type="BRANCH" missed="21" covered="5"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="25" covered="10"/><counter type="METHOD" missed="14" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Metrics.java"><line nr="15" mi="12" ci="64" mb="0" cb="0"/><line nr="16" mi="188" ci="0" mb="44" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="13" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="228" covered="89"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="30" covered="14"/><counter type="METHOD" missed="8" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="PartitionDistributionStats.java"><line nr="16" mi="0" ci="21" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="2"/><line nr="41" mi="0" ci="11" mb="0" cb="2"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="2" ci="8" mb="1" cb="1"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="2" ci="8" mb="1" cb="1"/><line nr="58" mi="1" ci="14" mb="1" cb="1"/><line nr="69" mi="0" ci="19" mb="0" cb="2"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="2" cb="2"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="89" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="233"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Statistics.java"><line nr="12" mi="320" ci="0" mb="76" cb="0"/><line nr="13" mi="20" ci="135" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="346" covered="181"/><counter type="BRANCH" missed="76" covered="0"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="44" covered="22"/><counter type="METHOD" missed="6" covered="22"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalReplica.java"><line nr="7" mi="88" ci="0" mb="16" cb="0"/><line nr="8" mi="8" ci="32" mb="0" cb="0"/><line nr="9" mi="0" ci="12" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="53"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="13" covered="10"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalBroker.java"><line nr="8" mi="362" ci="0" mb="86" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="383" covered="77"/><counter type="BRANCH" missed="86" covered="0"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="54" covered="4"/><counter type="METHOD" missed="11" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InternalPartitionsOffsets.java"><line nr="13" mi="89" ci="9" mb="20" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="15" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="50"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="13" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InternalTopicConfig.java"><line nr="9" mi="270" ci="0" mb="62" cb="0"/><line nr="10" mi="18" ci="94" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="2"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="288" covered="176"/><counter type="BRANCH" missed="62" covered="4"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="36" covered="24"/><counter type="METHOD" missed="5" covered="22"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="7087" covered="2449"/><counter type="BRANCH" missed="1215" covered="39"/><counter type="LINE" missed="196" covered="351"/><counter type="COMPLEXITY" missed="906" covered="282"/><counter type="METHOD" missed="292" covered="269"/><counter type="CLASS" missed="11" covered="32"/></package><package name="com/provectus/kafka/ui/serdes"><class name="com/provectus/kafka/ui/serdes/SerdesInitializer" sourcefilename="SerdesInitializer.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/serdes/CustomSerdeLoader;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lorg/springframework/core/env/Environment;Lcom/provectus/kafka/ui/config/ClustersProperties;I)Lcom/provectus/kafka/ui/serdes/ClusterSerdes;" line="89"><counter type="INSTRUCTION" missed="13" covered="115"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerTopicRelatedSerde" desc="(Ljava/util/Map;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerConsumerOffsetsSerde" desc="(Ljava/util/Map;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFallbackSerde" desc="()Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="164"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSerdeFromConfig" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="169"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSerdeWithBuiltInSerdeName" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="194"><counter type="INSTRUCTION" missed="10" covered="59"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoConfigureSerde" desc="(Lcom/provectus/kafka/ui/serdes/BuiltInSerde;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSerdeWithBuiltInClass" desc="(Ljava/lang/Class;Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="229"><counter type="INSTRUCTION" missed="8" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSerdeInstance" desc="(Ljava/lang/Class;)Lcom/provectus/kafka/ui/serde/api/Serde;" line="249"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadAndInitCustomSerde" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="258"><counter type="INSTRUCTION" missed="14" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullablePattern" desc="(Ljava/lang/String;)Ljava/util/regex/Pattern;" line="279"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createSerdeFromConfig$5" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;Ljava/lang/Class;)Z" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$init$4" desc="(Ljava/util/Map;)Ljava/util/Optional;" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$init$3" desc="(Ljava/util/Map;)Ljava/util/Optional;" line="135"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$init$2" desc="(Ljava/util/Map;Ljava/lang/String;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$1" desc="(Ljava/util/Map;Ljava/lang/String;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="131"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$0" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/serdes/PropertyResolverImpl;Lcom/provectus/kafka/ui/serdes/PropertyResolverImpl;Ljava/lang/String;Ljava/lang/Class;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="463"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="11" covered="106"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/ProducerRecordCreator" sourcefilename="ProducerRecordCreator.java"><method name="create" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/clients/producer/ProducerRecord;" line="23"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createHeaders" desc="(Ljava/util/Map;)Ljava/lang/Iterable;" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createHeaders$0" desc="(Lorg/apache/kafka/common/header/internals/RecordHeaders;Ljava/lang/String;Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/RecordHeaderImpl" sourcefilename="RecordHeaderImpl.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/common/header/Header;)V" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="key" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()[B" line="21"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/serdes/RecordHeadersImpl" sourcefilename="RecordHeadersImpl.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/common/header/Headers;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="24"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/CustomSerdeLoader" sourcefilename="CustomSerdeLoader.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadAndConfigure" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Lcom/provectus/kafka/ui/serdes/CustomSerdeLoader$CustomSerde;" line="36"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArchive" desc="(Ljava/nio/file/Path;)Z" line="56"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findArchiveFiles" desc="(Ljava/nio/file/Path;)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createClassloader" desc="(Ljava/nio/file/Path;)Ljava/lang/ClassLoader;" line="81"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createClassloader$2" desc="(Ljava/util/List;Ljava/nio/file/Path;)Ljava/lang/ClassLoader;" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createClassloader$1" desc="(Ljava/util/List;)Ljava/net/URLClassLoader;" line="93"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createClassloader$0" desc="(I)[Ljava/net/URL;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="168" covered="8"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="35" covered="2"/><counter type="COMPLEXITY" missed="16" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/CustomSerdeLoader$CustomSerde" sourcefilename="CustomSerdeLoader.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serde/api/Serde;Ljava/lang/ClassLoader;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerde" desc="()Lcom/provectus/kafka/ui/serde/api/Serde;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassLoader" desc="()Ljava/lang/ClassLoader;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="27"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="27"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="15"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/BuiltInSerde" sourcefilename="BuiltInSerde.java"><method name="canBeAutoConfigured" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Z" line="12"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoConfigure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/ConsumerRecordDeserializer" sourcefilename="ConsumerRecordDeserializer.java"><method name="deserialize" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Lcom/provectus/kafka/ui/model/TopicMessageDTO;" line="40"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapToTimestampType" desc="(Lorg/apache/kafka/common/record/TimestampType;)Lcom/provectus/kafka/ui/model/TopicMessageDTO$TimestampTypeEnum;" line="58"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillHeaders" desc="(Lcom/provectus/kafka/ui/model/TopicMessageDTO;Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillKey" desc="(Lcom/provectus/kafka/ui/model/TopicMessageDTO;Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="77"><counter type="INSTRUCTION" missed="51" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillValue" desc="(Lcom/provectus/kafka/ui/model/TopicMessageDTO;Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeadersSize" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Ljava/lang/Long;" line="115"><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeySize" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Ljava/lang/Long;" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueSize" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Ljava/lang/Long;" line="129"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="headerSize" desc="(Lorg/apache/kafka/common/header/Header;)I" line="133"><counter type="INSTRUCTION" missed="1" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;Ljava/util/function/UnaryOperator;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fillHeaders$0" desc="(Ljava/util/Map;Lorg/apache/kafka/common/header/Header;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="297"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="8" covered="60"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/PropertyResolverImpl" sourcefilename="PropertyResolverImpl.java"><method name="empty" desc="()Lcom/provectus/kafka/ui/serdes/PropertyResolverImpl;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/core/env/Environment;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/core/env/Environment;Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetPropertyName" desc="(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;" line="37"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperty" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;" line="45"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getListProperty" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;" line="52"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapProperty" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Optional;" line="59"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="109"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/SerdeInstance" sourcefilename="SerdeInstance.java"><method name="wrapWithClassloader" desc="(Ljava/util/function/Supplier;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="46"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="description" desc="()Ljava/util/Optional;" line="55"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="64"><counter type="INSTRUCTION" missed="25" covered="9"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="73"><counter type="INSTRUCTION" missed="25" covered="9"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="88"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="96"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde;Ljava/util/regex/Pattern;Ljava/util/regex/Pattern;Ljava/lang/ClassLoader;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$close$9" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deserializer$8" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="89"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$7" desc="(Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="90"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$6" desc="(Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$5" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$4" desc="(Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;Ljava/lang/String;)[B" line="83"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$3" desc="(Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;Ljava/lang/String;)[B" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$canDeserialize$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/lang/Boolean;" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$canSerialize$1" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/lang/Boolean;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchema$0" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="139" covered="123"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="24" covered="13"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/ClassloaderUtil" sourcefilename="ClassloaderUtil.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareAndSwapLoaders" desc="(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;" line="6"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/serdes/CustomSerdeLoader$ChildFirstClassloader" sourcefilename="CustomSerdeLoader.java"><method name="&lt;init&gt;" desc="([Ljava/net/URL;Ljava/lang/ClassLoader;)V" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadClass" desc="(Ljava/lang/String;Z)Ljava/lang/Class;" line="113"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResources" desc="(Ljava/lang/String;)Ljava/util/Enumeration;" line="134"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResource" desc="(Ljava/lang/String;)Ljava/net/URL;" line="165"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/serdes/CustomSerdeLoader$ChildFirstClassloader$1" sourcefilename="CustomSerdeLoader.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/CustomSerdeLoader$ChildFirstClassloader;Ljava/util/List;)V" line="148"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMoreElements" desc="()Z" line="153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextElement" desc="()Ljava/net/URL;" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/serdes/ClusterSerdes" sourcefilename="ClusterSerdes.java"><method name="findSerdeByPatternsOrDefault" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Ljava/util/function/Predicate;)Ljava/util/Optional;" line="34"><counter type="INSTRUCTION" missed="16" covered="52"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serdeForName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="()Ljava/util/stream/Stream;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="suggestSerdeForSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="66"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="suggestSerdeForDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="71"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/serdes/SerdeInstance;Lcom/provectus/kafka/ui/serdes/SerdeInstance;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFallbackSerde" desc="()Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$suggestSerdeForDeserialize$1" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$suggestSerdeForSerialize$0" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)Z" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="101"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ProducerRecordCreator.java"><line nr="12" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="8" mb="0" cb="2"/><line nr="28" mi="2" ci="6" mb="1" cb="1"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RecordHeadersImpl.java"><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RecordHeaderImpl.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BuiltInSerde.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsumerRecordDeserializer.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="27" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="4" ci="6" mb="2" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="23" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="23" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="2"/><line nr="129" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="1" ci="9" mb="1" cb="1"/><line nr="134" mi="0" ci="9" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="297"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="8" covered="60"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClusterSerdes.java"><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="15" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="12" mb="0" cb="2"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="2" ci="3" mb="1" cb="1"/><line nr="40" mi="2" ci="0" mb="2" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="3" ci="6" mb="1" cb="3"/><line nr="46" mi="2" ci="0" mb="2" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="1" cb="3"/><line nr="51" mi="0" ci="2" mb="1" cb="1"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="15" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="15" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="101"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassloaderUtil.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="4" ci="0" mb="2" cb="0"/><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SerdesInitializer.java"><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="9" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="1" cb="1"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="1" cb="1"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="13" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="2"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="8" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="8" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="2"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="1" cb="1"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="1" cb="3"/><line nr="204" mi="0" ci="6" mb="0" cb="2"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="2"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="1" cb="1"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="9" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="1" cb="1"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="1" cb="1"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="2" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="66" covered="463"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="11" covered="106"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SerdeInstance.java"><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="18" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="22" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="10" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="22" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="16" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="22" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="15" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="17" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="123"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="24" covered="13"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyResolverImpl.java"><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="1" ci="6" mb="1" cb="1"/><line nr="39" mi="0" ci="10" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="1" covered="109"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CustomSerdeLoader.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="89" ci="9" mb="20" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="9" ci="0" mb="4" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="2" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="2" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="2" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="14" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="371" covered="23"/><counter type="BRANCH" missed="54" covered="0"/><counter type="LINE" missed="65" covered="5"/><counter type="COMPLEXITY" missed="44" covered="4"/><counter type="METHOD" missed="17" covered="4"/><counter type="CLASS" missed="2" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="722" covered="1188"/><counter type="BRANCH" missed="81" covered="73"/><counter type="LINE" missed="128" covered="238"/><counter type="COMPLEXITY" missed="85" covered="100"/><counter type="METHOD" missed="34" covered="73"/><counter type="CLASS" missed="4" covered="10"/></package><package name="com/provectus/kafka/ui/serdes/builtin"><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufRawSerde" sourcefilename="ProtobufRawSerde.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="26"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="31"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/UInt32Serde" sourcefilename="UInt32Serde.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="19"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="24"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$1" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$0" desc="(Ljava/lang/String;)[B" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="23"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/Int32Serde" sourcefilename="Int32Serde.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="18"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="23"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$1" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$0" desc="(Ljava/lang/String;)[B" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$2" sourcefilename="ProtobufFileSerde.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde;Lcom/google/protobuf/Descriptors$Descriptor;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="163"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="32"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$1" sourcefilename="ProtobufFileSerde.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde;Lcom/google/protobuf/Descriptors$Descriptor;)V" line="148"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Ljava/lang/String;)[B" line="149"><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="21"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ConsumerOffsetsSerde$1" sourcefilename="ConsumerOffsetsSerde.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lorg/apache/kafka/common/protocol/types/Struct;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/Base64Serde" sourcefilename="Base64Serde.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="18"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$1" desc="(Ljava/util/Base64$Encoder;Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$0" desc="(Ljava/util/Base64$Decoder;Ljava/lang/String;)[B" line="40"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde" sourcefilename="ProtobufFileSerde.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeAutoConfigured" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoConfigure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="95"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$Configuration;)V" line="107"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="descriptorFor" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="126"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="137"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="147"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="161"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="180"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSchemaDescription" desc="(Lcom/google/protobuf/Descriptors$Descriptor;)Lcom/provectus/kafka/ui/serde/api/SchemaDescription;" line="184"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFileAsString" desc="(Ljava/nio/file/Path;)Ljava/lang/String;" line="191"><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$descriptorFor$1" desc="()Ljava/util/Optional;" line="132"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$descriptorFor$0" desc="()Ljava/util/Optional;" line="129"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="122"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="15" covered="27"/><counter type="COMPLEXITY" missed="10" covered="13"/><counter type="METHOD" missed="7" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$ProtoSchemaLoader$1" sourcefilename="ProtobufFileSerde.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$ProtoSchemaLoader;Ljava/util/Map;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/String;)Lcom/squareup/wire/schema/ProtoFile;" line="388"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withErrors" desc="(Lcom/squareup/wire/schema/ErrorCollector;)Lcom/squareup/wire/schema/Loader;" line="393"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/UuidBinarySerde" sourcefilename="UuidBinarySerde.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="33"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$2" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="70"><counter type="INSTRUCTION" missed="7" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$1" desc="(Ljava/lang/String;)[B" line="54"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$0" desc="(Ljava/lang/Boolean;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="97"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/StringSerde" sourcefilename="StringSerde.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="31"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$2" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="57"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$1" desc="(Ljava/lang/String;)[B" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$0" desc="(Ljava/nio/charset/Charset;)V" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="45"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$ProtoSchemaLoader" sourcefilename="ProtobufFileSerde.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="312"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="()Ljava/util/List;" line="320"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="knownProtoFiles" desc="()Ljava/util/Map;" line="341"><counter type="INSTRUCTION" missed="0" covered="191"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadKnownProtoFile" desc="(Ljava/lang/String;Lcom/google/protobuf/Descriptors$FileDescriptor;)Lcom/squareup/wire/schema/ProtoFile;" line="372"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFilesLoader" desc="(Ljava/util/Map;)Lcom/squareup/wire/schema/Loader;" line="385"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadFilesWithLocations" desc="()Ljava/util/Map;" line="398"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadFilesWithLocations$4" desc="(Ljava/util/Map;Ljava/nio/file/Path;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadFilesWithLocations$3" desc="(Ljava/nio/file/Path;)Z" line="402"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$knownProtoFiles$2" desc="(Lcom/squareup/wire/schema/ProtoFile;)Lcom/squareup/wire/schema/ProtoFile;" line="368"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$knownProtoFiles$1" desc="(Lcom/squareup/wire/schema/ProtoFile;)Ljava/lang/String;" line="368"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$0" desc="(Ljava/util/Map;Lcom/squareup/wire/schema/ProtoFile;)Z" line="336"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="365"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="62"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ConsumerOffsetsSerde" sourcefilename="ConsumerOffsetsSerde.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMapper" desc="()Lcom/fasterxml/jackson/databind/json/JsonMapper;" line="55"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="99"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keyDeserializer" desc="()Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="106"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueDeserializer" desc="()Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="134"><counter type="INSTRUCTION" missed="0" covered="864"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJson" desc="(Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/lang/String;" line="308"><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$valueDeserializer$1" desc="(Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="265"><counter type="INSTRUCTION" missed="49" covered="42"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="11" covered="13"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keyDeserializer$0" desc="(Lorg/apache/kafka/common/protocol/types/Schema;Lorg/apache/kafka/common/protocol/types/Schema;Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="117"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="1031"/><counter type="BRANCH" missed="13" covered="7"/><counter type="LINE" missed="17" covered="50"/><counter type="COMPLEXITY" missed="17" covered="13"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$Configuration" sourcefilename="ProtobufFileSerde.java"><method name="&lt;init&gt;" desc="(Lcom/google/protobuf/Descriptors$Descriptor;Lcom/google/protobuf/Descriptors$Descriptor;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V" line="199"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeAutoConfigured" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Z" line="206"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)Lcom/provectus/kafka/ui/serdes/builtin/ProtobufFileSerde$Configuration;" line="212"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescriptorAndPath" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map$Entry;" line="252"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="populateDescriptors" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="262"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadSchemas" desc="(Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Map;" line="272"><counter type="INSTRUCTION" missed="3" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProtobufSchema" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V" line="295"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProtobufSchemas" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V" line="302"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addProtobufSchemas$17" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)V" line="304"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addProtobufSchemas$16" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map$Entry;" line="303"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSchemas$15" desc="(Ljava/nio/file/Path;)Lio/confluent/kafka/schemaregistry/protobuf/ProtobufSchema;" line="289"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSchemas$14" desc="(Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="289"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSchemas$13" desc="(Ljava/lang/String;)Ljava/nio/file/Path;" line="288"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSchemas$12" desc="(Ljava/util/Map;Lcom/squareup/wire/schema/ProtoFile;)Lio/confluent/kafka/schemaregistry/protobuf/ProtobufSchema;" line="282"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSchemas$11" desc="(Lcom/squareup/wire/schema/ProtoFile;)Ljava/nio/file/Path;" line="281"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSchemas$10" desc="(Lcom/squareup/wire/schema/ProtoFile;)Ljava/lang/String;" line="278"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDescriptorAndPath$9" desc="(Ljava/lang/String;)Ljava/lang/NullPointerException;" line="256"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDescriptorAndPath$8" desc="(Ljava/lang/String;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="254"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDescriptorAndPath$7" desc="(Ljava/lang/String;Ljava/util/Map$Entry;)Z" line="253"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$6" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="246"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$5" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="245"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$4" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$3" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V" line="230"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$2" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$1" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V" line="220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$canBeAutoConfigured$0" desc="(Ljava/util/List;)Z" line="208"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="368"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="2" covered="31"/><counter type="METHOD" missed="0" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/UInt64Serde" sourcefilename="UInt64Serde.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="25"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$1" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$0" desc="(Ljava/lang/String;)[B" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="23"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/Int64Serde" sourcefilename="Int64Serde.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="25"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$1" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$0" desc="(Ljava/lang/String;)[B" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/HexSerde" sourcefilename="HexSerde.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoConfigure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;Lcom/provectus/kafka/ui/serde/api/PropertyResolver;)V" line="28"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljava/lang/String;Z)V" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareInputForParse" desc="(Ljava/lang/String;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deserializer$1" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="83"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$serializer$0" desc="(Ljava/lang/String;)[B" line="63"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/ProtobufRawSerde$1" sourcefilename="ProtobufRawSerde.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/builtin/ProtobufRawSerde;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="47"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/AvroEmbeddedSerde$1" sourcefilename="AvroEmbeddedSerde.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/builtin/AvroEmbeddedSerde;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/provectus/kafka/ui/serde/api/RecordHeaders;[B)Lcom/provectus/kafka/ui/serde/api/DeserializeResult;" line="50"><counter type="INSTRUCTION" missed="14" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/serdes/builtin/AvroEmbeddedSerde" sourcefilename="AvroEmbeddedSerde.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/util/Optional;" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/Optional;" line="29"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canDeserialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deserializer" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Lcom/provectus/kafka/ui/serde/api/Serde$Deserializer;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="14"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AvroEmbeddedSerde.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="57" mi="9" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="StringSerde.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="4" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="45"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Int32Serde.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsumerOffsetsSerde.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="18" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="6" mb="1" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="33" mb="0" cb="0"/><line nr="112" mi="0" ci="15" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="1" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="33" mb="0" cb="0"/><line nr="141" mi="0" ci="42" mb="0" cb="0"/><line nr="149" mi="0" ci="33" mb="0" cb="0"/><line nr="156" mi="0" ci="42" mb="0" cb="0"/><line nr="164" mi="0" ci="44" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="112" mb="0" cb="0"/><line nr="188" mi="0" ci="121" mb="0" cb="0"/><line nr="205" mi="0" ci="130" mb="0" cb="0"/><line nr="223" mi="0" ci="139" mb="0" cb="0"/><line nr="242" mi="0" ci="136" mb="0" cb="0"/><line nr="258" mi="0" ci="11" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="13" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="5" cb="1"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="5" cb="1"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="1" cb="1"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="1067"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="17" covered="56"/><counter type="COMPLEXITY" missed="17" covered="16"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UInt32Serde.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="11" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="23"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Base64Serde.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="1" cb="1"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UuidBinarySerde.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="1" cb="1"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="15" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="97"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HexSerde.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="10" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="1" cb="1"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProtobufFileSerde.java"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="1" ci="3" mb="1" cb="1"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="15" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="15" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="18" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="1" ci="18" mb="1" cb="5"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="10" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="0"/><line nr="245" mi="0" ci="11" mb="0" cb="0"/><line nr="246" mi="0" ci="9" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="13" mb="0" cb="2"/><line nr="254" mi="0" ci="11" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="11" mb="0" cb="2"/><line nr="264" mi="0" ci="11" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="2"/><line nr="273" mi="0" ci="3" mb="1" cb="1"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="13" mb="0" cb="0"/><line nr="282" mi="0" ci="8" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="8" mb="0" cb="0"/><line nr="289" mi="0" ci="11" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="304" mi="0" ci="11" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="1" cb="1"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="8" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="11" mb="0" cb="2"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="10" mb="0" cb="0"/><line nr="342" mi="0" ci="7" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="0"/><line nr="344" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="0" ci="7" mb="0" cb="0"/><line nr="346" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="7" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="0"/><line nr="350" mi="0" ci="7" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="354" mi="0" ci="7" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><line nr="357" mi="0" ci="7" mb="0" cb="0"/><line nr="358" mi="0" ci="7" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="0" ci="7" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="0"/><line nr="363" mi="0" ci="7" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="368" mi="0" ci="9" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="2"/><line nr="375" mi="0" ci="11" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="1" cb="1"/><line nr="377" mi="0" ci="11" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="8" mb="0" cb="0"/><line nr="385" mi="0" ci="15" mb="0" cb="0"/><line nr="388" mi="0" ci="10" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="402" mi="0" ci="20" mb="1" cb="3"/><line nr="403" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="929"/><counter type="BRANCH" missed="9" covered="27"/><counter type="LINE" missed="21" covered="159"/><counter type="COMPLEXITY" missed="15" covered="65"/><counter type="METHOD" missed="7" covered="55"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="ProtobufRawSerde.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UInt64Serde.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="11" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="23"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Int64Serde.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="10" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="330" covered="2433"/><counter type="BRANCH" missed="26" covered="46"/><counter type="LINE" missed="87" covered="341"/><counter type="COMPLEXITY" missed="66" covered="162"/><counter type="METHOD" missed="41" covered="146"/><counter type="CLASS" missed="0" covered="20"/></package><package name="com/provectus/kafka/ui/util/jsonschema"><class name="com/provectus/kafka/ui/util/jsonschema/EnumJsonType" sourcefilename="EnumJsonType.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Ljava/util/Map;" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/OneOfFieldSchema" sourcefilename="OneOfFieldSchema.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="17"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toJsonNode$0" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/JsonType$Type" sourcefilename="JsonType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/JsonAvroConversion" sourcefilename="JsonAvroConversion.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertJsonToAvro" desc="(Ljava/lang/String;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="60" covered="422"/><counter type="BRANCH" missed="7" covered="44"/><counter type="LINE" missed="8" covered="72"/><counter type="COMPLEXITY" missed="7" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertAvroToJson" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="198"><counter type="INSTRUCTION" missed="25" covered="184"/><counter type="BRANCH" missed="5" covered="26"/><counter type="LINE" missed="7" covered="40"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectUnionTypeFieldName" desc="(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;I)Ljava/lang/String;" line="282"><counter type="INSTRUCTION" missed="7" covered="33"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processLogicalType" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="297"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processLogicalType" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="305"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findConversion" desc="(Lorg/apache/avro/Schema;)Ljava/util/Optional;" line="313"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLogicalType" desc="(Lorg/apache/avro/Schema;)Z" line="320"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertJsonType" desc="(Lcom/fasterxml/jackson/databind/JsonNode;[Lcom/fasterxml/jackson/databind/node/JsonNodeType;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertJsonNumberType" desc="(Lcom/fasterxml/jackson/databind/JsonNode;[Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V" line="332"><counter type="INSTRUCTION" missed="22" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$assertJsonNumberType$10" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)Z" line="332"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$assertJsonType$9" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/node/JsonNodeType;)Z" line="324"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findConversion$8" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/util/jsonschema/JsonAvroConversion$LogicalTypeConversion;)Z" line="315"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$processLogicalType$7" desc="(Lorg/apache/avro/Schema;)Lcom/provectus/kafka/ui/exception/JsonAvroConversionException;" line="308"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$processLogicalType$6" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;Lcom/provectus/kafka/ui/util/jsonschema/JsonAvroConversion$LogicalTypeConversion;)Lcom/fasterxml/jackson/databind/JsonNode;" line="306"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$processLogicalType$5" desc="(Lorg/apache/avro/Schema;)Lcom/provectus/kafka/ui/exception/JsonAvroConversionException;" line="300"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$processLogicalType$4" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;Lcom/provectus/kafka/ui/util/jsonschema/JsonAvroConversion$LogicalTypeConversion;)Ljava/lang/Object;" line="298"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convertAvroToJson$3" desc="(Lcom/fasterxml/jackson/databind/node/ArrayNode;Lorg/apache/avro/Schema;Ljava/lang/Object;)V" line="221"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$convertAvroToJson$2" desc="(Lcom/fasterxml/jackson/databind/node/ObjectNode;Lorg/apache/avro/Schema;Ljava/lang/Object;Ljava/lang/Object;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convert$1" desc="(Ljava/util/ArrayList;Lorg/apache/avro/Schema;Lcom/fasterxml/jackson/databind/JsonNode;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convert$0" desc="(Ljava/util/LinkedHashMap;Lorg/apache/avro/Schema;Ljava/util/Map$Entry;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="159" covered="797"/><counter type="BRANCH" missed="16" covered="86"/><counter type="LINE" missed="25" covered="141"/><counter type="COMPLEXITY" missed="19" covered="68"/><counter type="METHOD" missed="4" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/FieldSchema" sourcefilename="FieldSchema.java"/><class name="com/provectus/kafka/ui/util/jsonschema/JsonAvroConversion$LogicalTypeConversion" sourcefilename="JsonAvroConversion.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;)V" line="524"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonSchema" desc="(Lorg/apache/avro/Schema;)Ljava/util/Optional;" line="532"><counter type="INSTRUCTION" missed="13" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getJsonSchema$19" desc="(Lcom/provectus/kafka/ui/util/jsonschema/JsonAvroConversion$LogicalTypeConversion;)Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;" line="538"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getJsonSchema$18" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/util/jsonschema/JsonAvroConversion$LogicalTypeConversion;)Z" line="537"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$17" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="508"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$16" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="501"><counter type="INSTRUCTION" missed="11" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$15" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="491"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$14" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="483"><counter type="INSTRUCTION" missed="11" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$13" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="473"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$12" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="458"><counter type="INSTRUCTION" missed="29" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$11" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="448"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$10" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="437"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$9" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="427"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$8" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="416"><counter type="INSTRUCTION" missed="18" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$7" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="406"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="395"><counter type="INSTRUCTION" missed="18" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="385"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="374"><counter type="INSTRUCTION" missed="17" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="367"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="357"><counter type="INSTRUCTION" missed="18" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Object;Lorg/apache/avro/Schema;)Lcom/fasterxml/jackson/databind/JsonNode;" line="347"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/avro/Schema;)Ljava/lang/Object;" line="343"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="339"><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="159" covered="360"/><counter type="BRANCH" missed="15" covered="15"/><counter type="LINE" missed="30" covered="59"/><counter type="COMPLEXITY" missed="17" covered="21"/><counter type="METHOD" missed="2" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/JsonType" sourcefilename="JsonType.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/jsonschema/JsonType$Type;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/provectus/kafka/ui/util/jsonschema/JsonType$Type;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/ObjectFieldSchema" sourcefilename="ObjectFieldSchema.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/List;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequired" desc="()Ljava/util/List;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="35"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toJsonNode$0" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/util/Map$Entry;)Lreactor/util/function/Tuple2;" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/RefFieldSchema" sourcefilename="RefFieldSchema.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="16"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRef" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/ArrayFieldSchema" sourcefilename="ArrayFieldSchema.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="16"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/JsonSchema" sourcefilename="JsonSchema.java"><method name="toJson" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringSchema" desc="()Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema;" line="63"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Lcom/provectus/kafka/ui/util/jsonschema/JsonType;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/net/URI;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="()Ljava/net/URI;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTitle" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lcom/provectus/kafka/ui/util/jsonschema/JsonType;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinitions" desc="()Ljava/util/Map;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequired" desc="()Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootRef" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="54" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="16"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toJson$1" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/util/Map$Entry;)Lreactor/util/function/Tuple2;" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toJson$0" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/util/Map$Entry;)Lreactor/util/function/Tuple2;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="336" covered="161"/><counter type="BRANCH" missed="72" covered="10"/><counter type="LINE" missed="13" covered="22"/><counter type="COMPLEXITY" missed="50" covered="9"/><counter type="METHOD" missed="13" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/SimpleJsonType" sourcefilename="SimpleJsonType.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/jsonschema/JsonType$Type;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/jsonschema/JsonType$Type;Ljava/util/Map;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Ljava/util/Map;" line="24"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/MapFieldSchema" sourcefilename="MapFieldSchema.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="23"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder" sourcefilename="JsonSchema.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="id" desc="(Ljava/net/URI;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="title" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="(Lcom/provectus/kafka/ui/util/jsonschema/JsonType;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="properties" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="definitions" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="required" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootRef" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema$JsonSchemaBuilder;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema;" line="17"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="51"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/SimpleFieldSchema" sourcefilename="SimpleFieldSchema.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/jsonschema/JsonType;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="15"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/AnyFieldSchema" sourcefilename="AnyFieldSchema.java"><method name="get" desc="()Lcom/provectus/kafka/ui/util/jsonschema/AnyFieldSchema;" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJsonNode" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lcom/fasterxml/jackson/databind/JsonNode;" line="18"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/JsonSchemaConverter" sourcefilename="JsonSchemaConverter.java"/><class name="com/provectus/kafka/ui/util/jsonschema/AvroJsonSchemaConverter" sourcefilename="AvroJsonSchemaConverter.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/net/URI;Lorg/apache/avro/Schema;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema;" line="18"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertField" desc="(Lorg/apache/avro/Schema$Field;Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertSchema" desc="(Lorg/apache/avro/Schema;Ljava/util/Map;Z)Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;" line="44"><counter type="INSTRUCTION" missed="9" covered="55"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUnionSchema" desc="(Lorg/apache/avro/Schema;Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;" line="77"><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createObjectSchema" desc="(Lorg/apache/avro/Schema;Ljava/util/Map;Z)Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;" line="112"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRefField" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/util/jsonschema/RefFieldSchema;" line="143"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createArraySchema" desc="(Lorg/apache/avro/Schema;Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/ArrayFieldSchema;" line="148"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertType" desc="(Lorg/apache/avro/Schema;)Lcom/provectus/kafka/ui/util/jsonschema/JsonType;" line="154"><counter type="INSTRUCTION" missed="14" covered="38"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createObjectSchema$4" desc="(Lorg/apache/avro/Schema$Field;)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createObjectSchema$3" desc="(Ljava/util/Map;Lorg/apache/avro/Schema$Field;)Lreactor/util/function/Tuple2;" line="120"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createUnionSchema$2" desc="(Ljava/util/Map;Lorg/apache/avro/Schema;)Lreactor/util/function/Tuple2;" line="84"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createUnionSchema$1" desc="(Lorg/apache/avro/Schema;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createUnionSchema$0" desc="(Lorg/apache/avro/Schema;)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="336"/><counter type="BRANCH" missed="6" covered="27"/><counter type="LINE" missed="6" covered="65"/><counter type="COMPLEXITY" missed="6" covered="29"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/util/jsonschema/ProtobufSchemaConverter" sourcefilename="ProtobufSchemaConverter.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/net/URI;Lcom/google/protobuf/Descriptors$Descriptor;)Lcom/provectus/kafka/ui/util/jsonschema/JsonSchema;" line="57"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerObjectAndReturnRef" desc="(Lcom/google/protobuf/Descriptors$Descriptor;Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/RefFieldSchema;" line="69"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRefField" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/util/jsonschema/RefFieldSchema;" line="91"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertField" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;Ljava/util/Map;)Lcom/provectus/kafka/ui/util/jsonschema/FieldSchema;" line="96"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertProtoWellKnownTypes" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;)Ljava/util/Optional;" line="122"><counter type="INSTRUCTION" missed="9" covered="101"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertType" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;)Lcom/provectus/kafka/ui/util/jsonschema/JsonType;" line="158"><counter type="INSTRUCTION" missed="4" covered="91"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$registerObjectAndReturnRef$0" desc="(Ljava/util/Map;Lcom/google/protobuf/Descriptors$FieldDescriptor;)Lreactor/util/function/Tuple2;" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="365"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="1" covered="89"/><counter type="COMPLEXITY" missed="3" covered="28"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AnyFieldSchema.java"><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RefFieldSchema.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonSchemaConverter.java"/><sourcefile name="AvroJsonSchemaConverter.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="1" cb="3"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="13" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="1" cb="1"/><line nr="98" mi="0" ci="13" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="3" cb="6"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="336"/><counter type="BRANCH" missed="6" covered="27"/><counter type="LINE" missed="6" covered="65"/><counter type="COMPLEXITY" missed="6" covered="29"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProtobufSchemaConverter.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="2"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="2"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="1" cb="1"/><line nr="139" mi="9" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="1" cb="3"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="2"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="4" ci="7" mb="1" cb="9"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="365"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="1" covered="89"/><counter type="COMPLEXITY" missed="3" covered="28"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OneOfFieldSchema.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleJsonType.java"><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayFieldSchema.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonAvroConversion.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="4" ci="7" mb="2" cb="13"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="2"/><line nr="67" mi="0" ci="11" mb="0" cb="4"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="18" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="14" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="1" cb="1"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="1" cb="3"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="1" cb="1"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="2"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="12" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="12" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="1" cb="1"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="1" cb="1"/><line nr="186" mi="9" ci="0" mb="0" cb="0"/><line nr="188" mi="11" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="1" cb="1"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="7" mb="3" cb="12"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="11" mb="0" cb="2"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="16" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="13" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="2"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="10" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="1" cb="1"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="10" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="4" ci="4" mb="3" cb="1"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="2"/><line nr="287" mi="0" ci="12" mb="0" cb="4"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="9" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="9" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="9" ci="0" mb="0" cb="0"/><line nr="309" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="5" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="7" mb="0" cb="2"/><line nr="324" mi="0" ci="14" mb="0" cb="4"/><line nr="325" mi="0" ci="12" mb="0" cb="0"/><line nr="327" mi="0" ci="10" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="14" mb="1" cb="3"/><line nr="333" mi="12" ci="0" mb="0" cb="0"/><line nr="335" mi="10" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="17" mb="0" cb="0"/><line nr="343" mi="0" ci="8" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="16" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="1" cb="1"/><line nr="358" mi="6" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="1" cb="1"/><line nr="360" mi="0" ci="7" mb="0" cb="0"/><line nr="362" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="0" ci="6" mb="0" cb="0"/><line nr="372" mi="0" ci="17" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="1" cb="1"/><line nr="375" mi="5" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="1" cb="1"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="9" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="17" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="1" cb="1"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="1" cb="1"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="9" ci="0" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="17" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="1" cb="1"/><line nr="417" mi="6" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="1" cb="1"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="9" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="17" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="1" cb="1"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="1" cb="1"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="9" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="448" mi="0" ci="6" mb="0" cb="0"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="456" mi="0" ci="17" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="1" cb="1"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="462" mi="6" ci="0" mb="0" cb="0"/><line nr="463" mi="4" ci="0" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="1" cb="1"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="9" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="17" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="1" cb="1"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="7" ci="0" mb="0" cb="0"/><line nr="488" mi="4" ci="0" mb="0" cb="0"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="17" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="1" cb="1"/><line nr="502" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="7" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="0" cb="0"/><line nr="508" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="1" cb="1"/><line nr="533" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="536" mi="5" ci="0" mb="0" cb="0"/><line nr="537" mi="7" ci="0" mb="0" cb="0"/><line nr="538" mi="4" ci="0" mb="0" cb="0"/><line nr="539" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="318" covered="1157"/><counter type="BRANCH" missed="31" covered="101"/><counter type="LINE" missed="55" covered="200"/><counter type="COMPLEXITY" missed="36" covered="89"/><counter type="METHOD" missed="6" covered="40"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SimpleFieldSchema.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectFieldSchema.java"><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="13" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonSchema.java"><line nr="16" mi="296" ci="0" mb="70" cb="0"/><line nr="17" mi="21" ci="79" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="4" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="1" cb="3"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="13" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="1" cb="3"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="357" covered="212"/><counter type="BRANCH" missed="72" covered="10"/><counter type="LINE" missed="13" covered="22"/><counter type="COMPLEXITY" missed="52" covered="17"/><counter type="METHOD" missed="15" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="JsonType.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FieldSchema.java"/><sourcefile name="EnumJsonType.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapFieldSchema.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="13" mb="0" cb="2"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="717" covered="2430"/><counter type="BRANCH" missed="112" covered="177"/><counter type="LINE" missed="75" covered="469"/><counter type="COMPLEXITY" missed="97" covered="196"/><counter type="METHOD" missed="21" covered="106"/><counter type="CLASS" missed="0" covered="17"/></package><package name="com/provectus/kafka/ui/model/connect"><class name="com/provectus/kafka/ui/model/connect/InternalConnectInfo" sourcefilename="InternalConnectInfo.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/ConnectorDTO;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder;" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder;" line="11"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnector" desc="()Lcom/provectus/kafka/ui/model/ConnectorDTO;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Ljava/util/Map;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTasks" desc="()Ljava/util/List;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopics" desc="()Ljava/util/List;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="10"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="180" covered="31"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="24" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder" sourcefilename="InternalConnectInfo.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connector" desc="(Lcom/provectus/kafka/ui/model/ConnectorDTO;)Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="config" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tasks" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topics" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo$InternalConnectInfoBuilder;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo;" line="11"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="InternalConnectInfo.java"><line nr="10" mi="164" ci="0" mb="38" cb="0"/><line nr="11" mi="26" ci="54" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="190" covered="66"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="25" covered="12"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="190" covered="66"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="25" covered="12"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/provectus/kafka/ui/service/analyze"><class name="com/provectus/kafka/ui/service/analyze/AnalysisTasksStore" sourcefilename="AnalysisTasksStore.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnalysisError" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;Ljava/time/Instant;Ljava/lang/Throwable;)V" line="27"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAnalysisResult" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;Ljava/time/Instant;Lcom/provectus/kafka/ui/service/analyze/TopicAnalysisStats;Ljava/util/Map;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateProgress" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;JJLjava/lang/Double;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerNewTask" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;Ljava/io/Closeable;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelAnalysis" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;)V" line="71"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnalysisInProgress" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicAnalysis" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;)Ljava/util/Optional;" line="80"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAnalysisDto" desc="(Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis;Lcom/provectus/kafka/ui/model/TopicAnalysisResultDTO;)Lcom/provectus/kafka/ui/model/TopicAnalysisDTO;" line="90"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateProgress$1" desc="(JJLjava/lang/Double;Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis;)Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis;" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setAnalysisResult$0" desc="(Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/TopicAnalysisStatsDTO;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="127"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/TopicAnalysisService$AnalysisTask" sourcefilename="TopicAnalysisService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/analyze/TopicAnalysisService;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/analyze/TopicIdentity;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="103"><counter type="INSTRUCTION" missed="28" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateProgress" desc="(JJ)V" line="134"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$run$1" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$run$0" desc="(Lorg/apache/kafka/common/PartitionInfo;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="167"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="8" covered="31"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/TopicAnalysisStats$SizeStats" sourcefilename="TopicAnalysisStats.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="()Lcom/provectus/kafka/ui/model/TopicAnalysisSizeStatsDTO;" line="54"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/TopicAnalysisStats$HourlyCounts" sourcefilename="TopicAnalysisStats.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="()Ljava/util/List;" line="81"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toDto$1" desc="(Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/TopicAnalysisStatsHourlyMsgCountsInnerDTO;" line="83"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$0" desc="(Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/TopicAnalysisService" sourcefilename="TopicAnalysisService.java"><method name="analyze" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="49"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startAnalysis" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelAnalysis" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicAnalysis" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Ljava/util/Optional;" line="69"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/TopicsService;Lcom/provectus/kafka/ui/service/ConsumerGroupService;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$analyze$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="79"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/TopicIdentity" sourcefilename="TopicIdentity.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="16" covered="39"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="8"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="88"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder" sourcefilename="AnalysisTasksStore.java"><method name="&lt;init&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startedAt" desc="(Ljava/time/Instant;)Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completenessPercent" desc="(D)Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="msgsScanned" desc="(J)Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytesScanned" desc="(J)Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="task" desc="(Ljava/io/Closeable;)Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis;" line="95"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/TopicAnalysisStats" sourcefilename="TopicAnalysisStats.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="91"><counter type="INSTRUCTION" missed="12" covered="82"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="(Ljava/lang/Integer;)Lcom/provectus/kafka/ui/model/TopicAnalysisStatsDTO;" line="116"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNullable" desc="(Ljava/lang/Long;J)Ljava/lang/Long;" line="134"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minNullable" desc="(Ljava/lang/Long;J)Ljava/lang/Long;" line="138"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="201"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis" sourcefilename="AnalysisTasksStore.java"><method name="&lt;init&gt;" desc="(Ljava/time/Instant;DJJLjava/io/Closeable;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDto" desc="()Lcom/provectus/kafka/ui/model/TopicAnalysisProgressDTO;" line="103"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopTask" desc="()V" line="110"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/provectus/kafka/ui/service/analyze/AnalysisTasksStore$RunningAnalysis$RunningAnalysisBuilder;" line="95"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="37"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TopicAnalysisService.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="1" cb="1"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="9" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="2" cb="2"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="18" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="246"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="11" covered="45"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TopicIdentity.java"><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="20" ci="72" mb="13" cb="9"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="88"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicAnalysisStats.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="1" cb="1"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="17" mb="0" cb="2"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="13" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="2"/><line nr="138" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="12" covered="370"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="73"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AnalysisTasksStore.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="9" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="2" cb="2"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="3" ci="5" mb="1" cb="1"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="16" ci="61" mb="0" cb="0"/><line nr="96" mi="0" ci="18" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="206"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="18" covered="32"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="6" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="161" covered="910"/><counter type="BRANCH" missed="22" covered="26"/><counter type="LINE" missed="31" covered="156"/><counter type="COMPLEXITY" missed="28" covered="51"/><counter type="METHOD" missed="8" covered="47"/><counter type="CLASS" missed="0" covered="9"/></package><package name="com/provectus/kafka/ui/client"><class name="com/provectus/kafka/ui/client/RetryingKafkaConnectClient" sourcefilename="RetryingKafkaConnectClient.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;Lorg/springframework/util/unit/DataSize;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="conflictCodeRetry" desc="()Lreactor/util/retry/Retry;" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withRetryOnConflict" desc="(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withRetryOnConflict" desc="(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withBadRequestErrorHandling" desc="(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConnector" desc="(Lcom/provectus/kafka/ui/connect/model/NewConnector;)Lreactor/core/publisher/Mono;" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConnectorConfig" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConnectorWithHttpInfo" desc="(Lcom/provectus/kafka/ui/connect/model/NewConnector;)Lreactor/core/publisher/Mono;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteConnector" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteConnectorWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="98"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnector" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorConfig" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorConfigWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorPlugins" desc="()Lreactor/core/publisher/Flux;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorPluginsWithHttpInfo" desc="()Lreactor/core/publisher/Mono;" line="132"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorStatus" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorStatusWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorTaskStatus" desc="(Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="149"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorTaskStatusWithHttpInfo" desc="(Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="155"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorTasks" desc="(Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="160"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorTasksWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorTopics" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="171"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorTopicsWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="177"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectors" desc="(Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorsWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pauseConnector" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pauseConnectorWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="197"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartConnector" desc="(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;" line="203"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartConnectorWithHttpInfo" desc="(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;" line="209"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartConnectorTask" desc="(Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="214"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartConnectorTaskWithHttpInfo" desc="(Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="220"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resumeConnector" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="225"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resumeConnectorWithHttpInfo" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="231"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setConnectorConfigWithHttpInfo" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="238"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateConnectorPluginConfig" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="245"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConnectorPluginConfigWithHttpInfo" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="251"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withBadRequestErrorHandling$3" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$InternalServerError;)Lreactor/core/publisher/Mono;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withBadRequestErrorHandling$2" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$BadRequest;)Lreactor/core/publisher/Mono;" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$conflictCodeRetry$1" desc="(Lreactor/util/retry/RetryBackoffSpec;Lreactor/util/retry/Retry$RetrySignal;)Ljava/lang/Throwable;" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$conflictCodeRetry$0" desc="(Ljava/lang/Throwable;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="117"/><counter type="LINE" missed="22" covered="29"/><counter type="COMPLEXITY" missed="21" covered="21"/><counter type="METHOD" missed="21" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/client/RetryingKafkaConnectClient$RetryingApiClient" sourcefilename="RetryingKafkaConnectClient.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;Lorg/springframework/util/unit/DataSize;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildWebClient" desc="(Lorg/springframework/util/unit/DataSize;Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;)Lorg/springframework/web/reactive/function/client/WebClient;" line="268"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RetryingKafkaConnectClient.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="209" mi="7" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="160"/><counter type="LINE" missed="22" covered="43"/><counter type="COMPLEXITY" missed="21" covered="23"/><counter type="METHOD" missed="21" covered="23"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="114" covered="160"/><counter type="LINE" missed="22" covered="43"/><counter type="COMPLEXITY" missed="21" covered="23"/><counter type="METHOD" missed="21" covered="23"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/provectus/kafka/ui/exception"><class name="com/provectus/kafka/ui/exception/TopicRecreationException" sourcefilename="TopicRecreationException.java"><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="6"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="10"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/TopicMetadataException" sourcefilename="TopicMetadataException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/TopicNotFoundException" sourcefilename="TopicNotFoundException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/GlobalErrorWebExceptionHandler" sourcefilename="GlobalErrorWebExceptionHandler.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/context/ApplicationContext;Lorg/springframework/http/codec/ServerCodecConfigurer;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoutingFunction" desc="(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;)Lorg/springframework/web/reactive/function/server/RouterFunction;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderErrorResponse" desc="(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;" line="51"><counter type="INSTRUCTION" missed="11" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderDefault" desc="(Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;" line="72"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="render" desc="(Lcom/provectus/kafka/ui/exception/CustomBaseException;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;" line="85"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lorg/springframework/web/bind/support/WebExchangeBindException;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;" line="99"><counter type="INSTRUCTION" missed="3" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lorg/springframework/web/server/ResponseStatusException;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;" line="129"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requestId" desc="(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentTimestamp" desc="()Ljava/math/BigDecimal;" line="147"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractFieldErrorMsg" desc="(Lorg/springframework/validation/FieldError;)Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coalesce" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$render$1" desc="(Ljava/util/Map$Entry;)Lcom/provectus/kafka/ui/model/FieldErrorDTO;" line="105"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$render$0" desc="(Lorg/springframework/validation/FieldError;)Ljava/util/Set;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="196"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="24" covered="48"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/UnprocessableEntityException" sourcefilename="UnprocessableEntityException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="12"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/FileUploadException" sourcefilename="FileUploadException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="8"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/lang/Throwable;)V" line="12"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="17"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/TopicOrPartitionNotFoundException" sourcefilename="TopicOrPartitionNotFoundException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/IllegalEntityStateException" sourcefilename="IllegalEntityStateException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="10"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/KsqlDbNotFoundException" sourcefilename="KsqlDbNotFoundException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/ClusterNotFoundException" sourcefilename="ClusterNotFoundException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/DuplicateEntityException" sourcefilename="DuplicateEntityException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/SchemaCompatibilityException" sourcefilename="SchemaCompatibilityException.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="10"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/ConnectNotFoundException" sourcefilename="ConnectNotFoundException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/SchemaFailedToDeleteException" sourcefilename="SchemaFailedToDeleteException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/TopicAnalysisException" sourcefilename="TopicAnalysisException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/ErrorCode" sourcefilename="ErrorCode.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IILorg/springframework/http/HttpStatus;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="code" desc="()I" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="httpStatus" desc="()Lorg/springframework/http/HttpStatus;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="8" covered="213"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="230"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/NotFoundException" sourcefilename="NotFoundException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/CustomBaseException" sourcefilename="CustomBaseException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V" line="23"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="9"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/LogDirNotFoundApiException" sourcefilename="LogDirNotFoundApiException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/JsonAvroConversionException" sourcefilename="JsonAvroConversionException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/InvalidRequestApiException" sourcefilename="InvalidRequestApiException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="11"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/KsqlApiException" sourcefilename="KsqlApiException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="10"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="15"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/SchemaNotFoundException" sourcefilename="SchemaNotFoundException.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/KafkaConnectConflictReponseException" sourcefilename="KafkaConnectConflictReponseException.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$Conflict;)V" line="9"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="15"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/exception/ValidationException" sourcefilename="ValidationException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="10"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/exception/ReadOnlyModeException" sourcefilename="ReadOnlyModeException.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lcom/provectus/kafka/ui/exception/ErrorCode;" line="12"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ValidationException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="10" mi="4" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnprocessableEntityException.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="1" ci="0" mb="0" cb="0"/><line nr="12" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CustomBaseException.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="9"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SchemaNotFoundException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicOrPartitionNotFoundException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotFoundException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IllegalEntityStateException.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="1" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConnectNotFoundException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchemaFailedToDeleteException.java"><line nr="6" mi="10" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KsqlDbNotFoundException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TopicNotFoundException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonAvroConversionException.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogDirNotFoundApiException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KsqlApiException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="10" mi="4" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TopicRecreationException.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="10" mi="13" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchemaCompatibilityException.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="1" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicMetadataException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ErrorCode.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="2"/><line nr="40" mi="0" ci="6" mb="1" cb="1"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="230"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaConnectConflictReponseException.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReadOnlyModeException.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DuplicateEntityException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileUploadException.java"><line nr="8" mi="4" ci="0" mb="0" cb="0"/><line nr="9" mi="1" ci="0" mb="0" cb="0"/><line nr="12" mi="11" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GlobalErrorWebExceptionHandler.java"><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="20" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="20" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="196"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="24" covered="48"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicAnalysisException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ClusterNotFoundException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidRequestApiException.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="241" covered="512"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="76" covered="124"/><counter type="COMPLEXITY" missed="35" covered="44"/><counter type="METHOD" missed="31" covered="42"/><counter type="CLASS" missed="10" covered="16"/></package><package name="com/provectus/kafka/ui/model/schemaregistry"><class name="com/provectus/kafka/ui/model/schemaregistry/SubjectIdResponse" sourcefilename="SubjectIdResponse.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/Integer;" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setId" desc="(Ljava/lang/Integer;)V" line="5"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="5"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="5"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/schemaregistry/InternalCompatibilityCheck" sourcefilename="InternalCompatibilityCheck.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCompatible" desc="()Z" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCompatible" desc="(Z)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="6"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/schemaregistry/InternalNewSchema" sourcefilename="InternalNewSchema.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/SchemaTypeDTO;)V" line="13"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchemaType" desc="()Lcom/provectus/kafka/ui/model/SchemaTypeDTO;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSchema" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSchemaType" desc="(Lcom/provectus/kafka/ui/model/SchemaTypeDTO;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="7"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/schemaregistry/InternalCompatibilityLevel" sourcefilename="InternalCompatibilityLevel.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCompatibilityLevel" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCompatibilityLevel" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="5"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="5"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/schemaregistry/ErrorResponse" sourcefilename="ErrorResponse.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()I" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setErrorCode" desc="(I)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMessage" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="6"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SubjectIdResponse.java"><line nr="5" mi="72" ci="0" mb="14" cb="0"/><line nr="7" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InternalNewSchema.java"><line nr="7" mi="106" ci="0" mb="22" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InternalCompatibilityCheck.java"><line nr="6" mi="59" ci="0" mb="10" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InternalCompatibilityLevel.java"><line nr="5" mi="72" ci="0" mb="14" cb="0"/><line nr="7" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ErrorResponse.java"><line nr="6" mi="92" ci="0" mb="16" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="431" covered="0"/><counter type="BRANCH" missed="76" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="77" covered="0"/><counter type="METHOD" missed="39" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="com/provectus/kafka/ui/service/masking"><class name="com/provectus/kafka/ui/service/masking/DataMasking$Mask" sourcefilename="DataMasking.java"><method name="shouldBeApplied" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Z" line="35"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/regex/Pattern;Ljava/util/regex/Pattern;Lcom/provectus/kafka/ui/service/masking/policies/MaskingPolicy;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicKeysPattern" desc="()Ljava/util/regex/Pattern;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicValuesPattern" desc="()Ljava/util/regex/Pattern;" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPolicy" desc="()Lcom/provectus/kafka/ui/service/masking/policies/MaskingPolicy;" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="25"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="25"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="131" covered="41"/><counter type="BRANCH" missed="29" covered="9"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/masking/DataMasking" sourcefilename="DataMasking.java"><method name="create" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/service/masking/DataMasking;" line="44"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaskerForTopic" desc="(Ljava/lang/String;)Ljava/util/function/UnaryOperator;" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaskingFunction" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/function/UnaryOperator;" line="75"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMaskingFunction$3" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMaskingFunction$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/service/masking/DataMasking$Mask;)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMaskerForTopic$1" desc="(Ljava/util/function/UnaryOperator;Ljava/util/function/UnaryOperator;Lcom/provectus/kafka/ui/model/TopicMessageDTO;)Lcom/provectus/kafka/ui/model/TopicMessageDTO;" line="68"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$0" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking;)Lcom/provectus/kafka/ui/service/masking/DataMasking$Mask;" line="46"><counter type="INSTRUCTION" missed="1" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="152"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataMasking.java"><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="122" ci="12" mb="28" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="13" mb="1" cb="3"/><line nr="37" mi="0" ci="12" mb="0" cb="4"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="1" cb="1"/><line nr="49" mi="1" ci="6" mb="1" cb="1"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="1" cb="1"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="193"/><counter type="BRANCH" missed="32" covered="18"/><counter type="LINE" missed="4" covered="38"/><counter type="COMPLEXITY" missed="24" covered="18"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="134" covered="193"/><counter type="BRANCH" missed="32" covered="18"/><counter type="LINE" missed="4" covered="38"/><counter type="COMPLEXITY" missed="24" covered="18"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/provectus/kafka/ui/controller"><class name="com/provectus/kafka/ui/controller/AclsController" sourcefilename="AclsController.java"><method name="createAcl" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="34"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteAcl" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="51"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listAcls" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaAclResourceTypeDTO;Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaAclNamePatternTypeDTO;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="71"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAclAsCsv" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="97"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="syncAclsCsv" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="113"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createConsumerAcl" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="130"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProducerAcl" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="147"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createStreamAppAcl" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="164"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/acl/AclsService;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createStreamAppAcl$13" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="173"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createStreamAppAcl$12" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/CreateStreamAppAclDTO;)Lreactor/core/publisher/Mono;" line="172"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProducerAcl$11" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProducerAcl$10" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/CreateProducerAclDTO;)Lreactor/core/publisher/Mono;" line="155"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createConsumerAcl$9" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createConsumerAcl$8" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/CreateConsumerAclDTO;)Lreactor/core/publisher/Mono;" line="138"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$syncAclsCsv$7" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$syncAclsCsv$6" desc="(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="121"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAclAsCsv$5" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$listAcls$4" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteAcl$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteAcl$2" desc="(Ljava/lang/String;Lorg/apache/kafka/common/acl/AclBinding;)Lreactor/core/publisher/Mono;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createAcl$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createAcl$0" desc="(Ljava/lang/String;Lorg/apache/kafka/common/acl/AclBinding;)Lreactor/core/publisher/Mono;" line="43"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="368" covered="6"/><counter type="LINE" missed="90" covered="1"/><counter type="COMPLEXITY" missed="22" covered="1"/><counter type="METHOD" missed="22" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/KafkaConnectController" sourcefilename="KafkaConnectController.java"><method name="getConnects" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="47"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectors" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="57"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConnector" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="74"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnector" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="92"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteConnector" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="111"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllConnectors" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConnectorColumnsToSortDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="134"><counter type="INSTRUCTION" missed="8" covered="51"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorConfig" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="159"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConnectorConfig" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="179"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateConnectorState" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConnectorActionDTO;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="200"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorTasks" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="226"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartConnectorTask" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="246"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorPlugins" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="265"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConnectorPluginConfig" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="283"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorsComparator" desc="(Lcom/provectus/kafka/ui/model/ConnectorColumnsToSortDTO;)Ljava/util/Comparator;" line="290"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/KafkaConnectService;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorsComparator$14" desc="(Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;)Lcom/provectus/kafka/ui/model/ConnectorStateDTO;" line="297"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConnectorPlugins$13" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$restartConnectorTask$12" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="258"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConnectorTasks$11" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="238"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateConnectorState$10" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setConnectorConfig$9" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorConfig$8" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="170"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllConnectors$7" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllConnectors$6" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;)Lorg/reactivestreams/Publisher;" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllConnectors$5" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;)Lorg/reactivestreams/Publisher;" line="145"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteConnector$4" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnector$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createConnector$2" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectors$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnects$0" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConnectDTO;)Lorg/reactivestreams/Publisher;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="208" covered="406"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="44" covered="98"/><counter type="COMPLEXITY" missed="16" covered="22"/><counter type="METHOD" missed="9" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/StaticController" sourcefilename="StaticController.java"><method name="getIndex" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="31"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getManifest" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="36"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRenderedFile" desc="(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/concurrent/atomic/AtomicReference;Lorg/springframework/core/io/Resource;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildFile" desc="(Lorg/springframework/core/io/Resource;Ljava/lang/String;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="17"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/ApplicationConfigController$PropertiesMapperImpl" sourcefilename="ApplicationConfigController$PropertiesMapperImpl.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromDto" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesDTO;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure;" line="51"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDto" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesDTO;" line="67"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTOToSchemaRegistryAuth" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$SchemaRegistryAuth;" line="82"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerSchemaRegistrySslDTOToKeystoreConfig" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSchemaRegistrySslDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;" line="95"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTOToKsqldbServerAuth" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth;" line="108"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerKafkaConnectInnerDTOToConnectCluster" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerKafkaConnectInnerDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;" line="121"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerKafkaConnectInnerDTOListToConnectClusterList" desc="(Ljava/util/List;)Ljava/util/List;" line="138"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerMetricsDTOToMetricsConfigData" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerMetricsDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$MetricsConfigData;" line="151"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerSerdeInnerDTOToSerdeConfig" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSerdeInnerDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;" line="169"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerSerdeInnerDTOListToSerdeConfigList" desc="(Ljava/util/List;)Ljava/util/List;" line="189"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeEnumToType" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerMaskingInnerDTO$TypeEnum;)Lcom/provectus/kafka/ui/config/ClustersProperties$Masking$Type;" line="202"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerMaskingInnerDTOToMasking" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerMaskingInnerDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$Masking;" line="222"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerMaskingInnerDTOListToMaskingList" desc="(Ljava/util/List;)Ljava/util/List;" line="246"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerSslDTOToTruststoreConfig" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSslDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;" line="259"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="levelEnumToLogLevel" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerAuditDTO$LevelEnum;)Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel;" line="272"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerAuditDTOToAuditProperties" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerAuditDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties;" line="290"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerDTOToCluster" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;" line="310"><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaClustersInnerDTOListToClusterList" desc="(Ljava/util/List;)Ljava/util/List;" line="345"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaPollingDTOToPollingProperties" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaPollingDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties$PollingProperties;" line="358"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesKafkaDTOToClustersProperties" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaDTO;)Lcom/provectus/kafka/ui/config/ClustersProperties;" line="372"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacRolesInnerSubjectsInnerDTOToSubject" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacRolesInnerSubjectsInnerDTO;)Lcom/provectus/kafka/ui/model/rbac/Subject;" line="387"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacRolesInnerSubjectsInnerDTOListToSubjectList" desc="(Ljava/util/List;)Ljava/util/List;" line="401"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="actionDTOListToStringList" desc="(Ljava/util/List;)Ljava/util/List;" line="414"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacRolesInnerPermissionsInnerDTOToPermission" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacRolesInnerPermissionsInnerDTO;)Lcom/provectus/kafka/ui/model/rbac/Permission;" line="427"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacRolesInnerPermissionsInnerDTOListToPermissionList" desc="(Ljava/util/List;)Ljava/util/List;" line="443"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacRolesInnerDTOToRole" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacRolesInnerDTO;)Lcom/provectus/kafka/ui/model/rbac/Role;" line="456"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacRolesInnerDTOListToRoleList" desc="(Ljava/util/List;)Ljava/util/List;" line="474"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesRbacDTOToRoleBasedAccessControlProperties" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacDTO;)Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;" line="487"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesAuthOauth2ClientValueDTOToOAuth2Provider" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesAuthOauth2ClientValueDTO;)Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;" line="504"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringApplicationConfigPropertiesAuthOauth2ClientValueDTOMapToStringOAuth2ProviderMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="535"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesAuthOauth2DTOToOAuthProperties" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesAuthOauth2DTO;)Lcom/provectus/kafka/ui/config/auth/OAuthProperties;" line="551"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesAuthDTOToAuth" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesAuthDTO;)Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;" line="563"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applicationConfigPropertiesWebclientDTOToWebclientProperties" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesWebclientDTO;)Lcom/provectus/kafka/ui/config/WebclientProperties;" line="576"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oAuth2ProviderToApplicationConfigPropertiesAuthOauth2ClientValueDTO" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesAuthOauth2ClientValueDTO;" line="588"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringOAuth2ProviderMapToStringApplicationConfigPropertiesAuthOauth2ClientValueDTOMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="619"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oAuthPropertiesToApplicationConfigPropertiesAuthOauth2DTO" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesAuthOauth2DTO;" line="635"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="authToApplicationConfigPropertiesAuthDTO" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations$PropertiesStructure$Auth;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesAuthDTO;" line="647"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subjectToApplicationConfigPropertiesRbacRolesInnerSubjectsInnerDTO" desc="(Lcom/provectus/kafka/ui/model/rbac/Subject;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacRolesInnerSubjectsInnerDTO;" line="660"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subjectListToApplicationConfigPropertiesRbacRolesInnerSubjectsInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="676"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToResourceTypeDTO" desc="(Lcom/provectus/kafka/ui/model/rbac/Resource;)Lcom/provectus/kafka/ui/model/ResourceTypeDTO;" line="689"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringListToActionDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="721"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="permissionToApplicationConfigPropertiesRbacRolesInnerPermissionsInnerDTO" desc="(Lcom/provectus/kafka/ui/model/rbac/Permission;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacRolesInnerPermissionsInnerDTO;" line="734"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="permissionListToApplicationConfigPropertiesRbacRolesInnerPermissionsInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="748"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roleToApplicationConfigPropertiesRbacRolesInnerDTO" desc="(Lcom/provectus/kafka/ui/model/rbac/Role;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacRolesInnerDTO;" line="761"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roleListToApplicationConfigPropertiesRbacRolesInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="779"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roleBasedAccessControlPropertiesToApplicationConfigPropertiesRbacDTO" desc="(Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesRbacDTO;" line="792"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="webclientPropertiesToApplicationConfigPropertiesWebclientDTO" desc="(Lcom/provectus/kafka/ui/config/WebclientProperties;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesWebclientDTO;" line="804"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pollingPropertiesToApplicationConfigPropertiesKafkaPollingDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$PollingProperties;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaPollingDTO;" line="816"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="truststoreConfigToApplicationConfigPropertiesKafkaClustersInnerSslDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$TruststoreConfig;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSslDTO;" line="830"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schemaRegistryAuthToApplicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SchemaRegistryAuth;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTO;" line="843"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keystoreConfigToApplicationConfigPropertiesKafkaClustersInnerSchemaRegistrySslDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$KeystoreConfig;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSchemaRegistrySslDTO;" line="856"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ksqldbServerAuthToApplicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$KsqldbServerAuth;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSchemaRegistryAuthDTO;" line="869"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectClusterToApplicationConfigPropertiesKafkaClustersInnerKafkaConnectInnerDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerKafkaConnectInnerDTO;" line="882"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectClusterListToApplicationConfigPropertiesKafkaClustersInnerKafkaConnectInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="899"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metricsConfigDataToApplicationConfigPropertiesKafkaClustersInnerMetricsDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$MetricsConfigData;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerMetricsDTO;" line="912"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serdeConfigToApplicationConfigPropertiesKafkaClustersInnerSerdeInnerDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$SerdeConfig;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerSerdeInnerDTO;" line="930"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serdeConfigListToApplicationConfigPropertiesKafkaClustersInnerSerdeInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="950"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeToTypeEnum" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking$Type;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerMaskingInnerDTO$TypeEnum;" line="963"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maskingToApplicationConfigPropertiesKafkaClustersInnerMaskingInnerDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Masking;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerMaskingInnerDTO;" line="983"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maskingListToApplicationConfigPropertiesKafkaClustersInnerMaskingInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="1007"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logLevelToLevelEnum" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerAuditDTO$LevelEnum;" line="1020"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="auditPropertiesToApplicationConfigPropertiesKafkaClustersInnerAuditDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerAuditDTO;" line="1038"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clusterToApplicationConfigPropertiesKafkaClustersInnerDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaClustersInnerDTO;" line="1058"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clusterListToApplicationConfigPropertiesKafkaClustersInnerDTOList" desc="(Ljava/util/List;)Ljava/util/List;" line="1091"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clustersPropertiesToApplicationConfigPropertiesKafkaDTO" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)Lcom/provectus/kafka/ui/model/ApplicationConfigPropertiesKafkaDTO;" line="1104"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2153" covered="3"/><counter type="BRANCH" missed="232" covered="0"/><counter type="LINE" missed="597" covered="1"/><counter type="COMPLEXITY" missed="188" covered="1"/><counter type="METHOD" missed="65" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/TopicsController" sourcefilename="TopicsController.java"><method name="createTopic" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recreateTopic" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="79"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneTopic" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="97"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteTopic" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="116"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicConfigs" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="135"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicDetails" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="157"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopics" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Lcom/provectus/kafka/ui/model/TopicColumnsToSortDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="181"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateTopic" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="223"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increaseTopicPartitions" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="244"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeReplicationFactor" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="263"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="analyzeTopic" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="281"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cancelTopicAnalysis" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="298"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicAnalysis" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="317"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActiveProducerStates" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="335"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComparatorForTopic" desc="(Lcom/provectus/kafka/ui/model/TopicColumnsToSortDTO;)Ljava/util/Comparator;" line="361"><counter type="INSTRUCTION" missed="9" covered="17"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/TopicsService;Lcom/provectus/kafka/ui/service/analyze/TopicAnalysisService;Lcom/provectus/kafka/ui/mapper/ClusterMapper;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getComparatorForTopic$31" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;)Ljava/lang/Integer;" line="369"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducerStates$30" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="356"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducerStates$29" desc="(Ljava/util/Comparator;Ljava/util/Map;)Lorg/reactivestreams/Publisher;" line="348"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducerStates$28" desc="(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;" line="350"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducerStates$27" desc="(Ljava/util/Map$Entry;Lorg/apache/kafka/clients/admin/ProducerState;)Lcom/provectus/kafka/ui/model/TopicProducerStateDTO;" line="350"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicAnalysis$26" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicAnalysis$25" desc="()Lorg/springframework/http/ResponseEntity;" line="327"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cancelTopicAnalysis$24" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="307"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cancelTopicAnalysis$23" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="306"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$analyzeTopic$22" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$changeReplicationFactor$21" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="275"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$changeReplicationFactor$20" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ReplicationFactorChangeDTO;)Lreactor/core/publisher/Mono;" line="273"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$increaseTopicPartitions$19" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$increaseTopicPartitions$18" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/PartitionsIncreaseDTO;)Lreactor/core/publisher/Mono;" line="252"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateTopic$17" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopics$16" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopics$15" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/provectus/kafka/ui/model/SortOrderDTO;Lcom/provectus/kafka/ui/model/TopicColumnsToSortDTO;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="189"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopics$14" desc="(ILjava/util/List;)Lcom/provectus/kafka/ui/model/TopicsResponseDTO;" line="210"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopics$13" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)Z" line="196"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopics$12" desc="(Ljava/lang/Boolean;Lcom/provectus/kafka/ui/model/InternalTopic;)Z" line="194"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopics$11" desc="(Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="187"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicDetails$10" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicConfigs$9" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicConfigs$8" desc="(Ljava/util/List;)Ljava/util/List;" line="144"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopic$7" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="127"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cloneTopic$6" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cloneTopic$5" desc="(Lcom/provectus/kafka/ui/model/TopicDTO;)Lorg/springframework/http/ResponseEntity;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recreateTopic$4" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recreateTopic$3" desc="(Lcom/provectus/kafka/ui/model/TopicDTO;)Lorg/springframework/http/ResponseEntity;" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createTopic$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/TopicCreationDTO;)Lreactor/core/publisher/Mono;" line="60"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createTopic$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createTopic$0" desc="(Lcom/provectus/kafka/ui/model/TopicDTO;)Lorg/springframework/http/ResponseEntity;" line="70"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="318" covered="599"/><counter type="BRANCH" missed="5" covered="26"/><counter type="LINE" missed="75" covered="123"/><counter type="COMPLEXITY" missed="24" covered="42"/><counter type="METHOD" missed="19" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/BrokersController" sourcefilename="BrokersController.java"><method name="getBrokers" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="37"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBrokersMetrics" desc="(Ljava/lang/String;Ljava/lang/Integer;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="51"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBrokersLogdirs" desc="(Ljava/lang/String;Ljava/util/List;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="72"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokerConfig" desc="(Ljava/lang/String;Ljava/lang/Integer;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="90"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateBrokerTopicPartitionLogDir" desc="(Ljava/lang/String;Ljava/lang/Integer;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="109"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateBrokerConfigByName" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="129"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/BrokerService;Lcom/provectus/kafka/ui/mapper/ClusterMapper;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerConfigByName$7" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerConfigByName$6" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Lcom/provectus/kafka/ui/model/BrokerConfigItemDTO;)Lreactor/core/publisher/Mono;" line="138"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerTopicPartitionLogDir$5" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerTopicPartitionLogDir$4" desc="(Ljava/lang/String;Ljava/lang/Integer;Lcom/provectus/kafka/ui/model/BrokerLogdirUpdateDTO;)Lreactor/core/publisher/Mono;" line="118"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokerConfig$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllBrokersLogdirs$2" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokersMetrics$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getBrokers$0" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="208"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="20" covered="44"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/AccessController" sourcefilename="AccessController.java"><method name="getUserAuthInfo" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="34"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapPermissions" desc="(Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapAction" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/ActionDTO;" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mapPermissions$4" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/Permission;)Lcom/provectus/kafka/ui/model/UserPermissionDTO;" line="63"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUserAuthInfo$3" desc="(Lreactor/util/function/Tuple2;)Lcom/provectus/kafka/ui/model/AuthenticationInfoDTO;" line="51"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUserAuthInfo$2" desc="(Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUserAuthInfo$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Role;)Ljava/util/List;" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUserAuthInfo$0" desc="(Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="133" covered="10"/><counter type="LINE" missed="38" covered="2"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="8" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/ApplicationConfigController$PropertiesMapper" sourcefilename="ApplicationConfigController.java"/><class name="com/provectus/kafka/ui/controller/AbstractController" sourcefilename="AbstractController.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCluster" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/KafkaCluster;" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateAccess" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;)Lreactor/core/publisher/Mono;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="audit" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClustersStorage" desc="(Lcom/provectus/kafka/ui/service/ClustersStorage;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAccessControlService" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAuditService" desc="(Lcom/provectus/kafka/ui/service/audit/AuditService;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getCluster$0" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/exception/ClusterNotFoundException;" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/ConsumerGroupsController" sourcefilename="ConsumerGroupsController.java"><method name="deleteConsumerGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="50"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsumerGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="67"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicConsumerGroups" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="85"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerGroupsPage" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerGroupOrderingDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="117"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetConsumerGroupOffsets" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="142"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertPage" desc="(Lcom/provectus/kafka/ui/service/ConsumerGroupService$ConsumerGroupsPage;)Lcom/provectus/kafka/ui/model/ConsumerGroupsPageResponseDTO;" line="197"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ConsumerGroupService;Lcom/provectus/kafka/ui/service/OffsetsResetService;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetConsumerGroupOffsets$9" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerGroupOffsetsResetDTO;)Lreactor/core/publisher/Mono;" line="143"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$resetConsumerGroupOffsets$8" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$resetConsumerGroupOffsets$7" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerGroupOffsetsResetDTO;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="152"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsPage$6" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$5" desc="(Ljava/lang/Integer;)Z" line="127"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$4" desc="(Ljava/lang/Integer;)Z" line="126"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicConsumerGroups$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicConsumerGroups$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup;)Lorg/reactivestreams/Publisher;" line="95"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroup$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="78"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteConsumerGroup$0" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="257" covered="136"/><counter type="BRANCH" missed="12" covered="1"/><counter type="LINE" missed="60" covered="32"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/AuthController" sourcefilename="AuthController.java"><method name="getAuth" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="20"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createPage" desc="(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)[B" line="28"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formLogin" desc="(Lorg/springframework/util/MultiValueMap;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="csrfToken" desc="(Lorg/springframework/security/web/server/csrf/CsrfToken;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createError" desc="(Z)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLogoutSuccess" desc="(Z)Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAuth$0" desc="(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)[B" line="24"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/ApplicationConfigController" sourcefilename="ApplicationConfigController.java"><method name="getApplicationInfo" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentConfig" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="64"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartWithConfig" desc="(Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="79"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uploadConfigRelatedFile" desc="(Lreactor/core/publisher/Flux;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="97"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConfig" desc="(Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="113"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateClustersConfig" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)Lreactor/core/publisher/Mono;" line="131"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations;Lcom/provectus/kafka/ui/util/ApplicationRestarter;Lcom/provectus/kafka/ui/service/KafkaClusterFactory;Lcom/provectus/kafka/ui/service/ApplicationInfoService;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validateClustersConfig$13" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lorg/reactivestreams/Publisher;" line="136"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateClustersConfig$12" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/provectus/kafka/ui/model/ClusterConfigValidationDTO;)Lreactor/util/function/Tuple2;" line="136"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateConfig$11" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateConfig$10" desc="(Lcom/provectus/kafka/ui/model/ApplicationConfigDTO;)Lreactor/core/publisher/Mono;" line="120"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateConfig$9" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/ApplicationConfigValidationDTO;" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uploadConfigRelatedFile$8" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$uploadConfigRelatedFile$7" desc="(Lorg/springframework/http/codec/multipart/Part;)Lreactor/core/publisher/Mono;" line="104"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$uploadConfigRelatedFile$6" desc="(Ljava/nio/file/Path;)Lcom/provectus/kafka/ui/model/UploadedFileInfoDTO;" line="105"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$restartWithConfig$5" desc="(Lcom/provectus/kafka/ui/model/RestartRequestDTO;)Lorg/springframework/http/ResponseEntity;" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$restartWithConfig$4" desc="(Lcom/provectus/kafka/ui/model/RestartRequestDTO;)V" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$restartWithConfig$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$restartWithConfig$2" desc="(Lcom/provectus/kafka/ui/model/RestartRequestDTO;)V" line="86"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCurrentConfig$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCurrentConfig$0" desc="()Lorg/springframework/http/ResponseEntity;" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="185" covered="71"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="41" covered="14"/><counter type="COMPLEXITY" missed="18" covered="6"/><counter type="METHOD" missed="16" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/ClustersController" sourcefilename="ClustersController.java"><method name="getClusters" desc="(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="25"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClusterMetrics" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="34"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClusterStats" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="51"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateClusterInfo" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="69"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ClusterService;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateClusterInfo$2" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getClusterStats$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getClusterMetrics$0" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="109" covered="10"/><counter type="LINE" missed="30" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/SchemasController" sourcefilename="SchemasController.java"><method name="getCluster" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/KafkaCluster;" line="41"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSchemaCompatibility" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="52"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createNewSchema" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="75"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteLatestSchema" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="96"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteSchema" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="113"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteSchemaByVersion" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="130"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllVersionsBySubject" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="147"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGlobalSchemaCompatibilityLevel" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="166"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLatestSchema" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="176"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaByVersion" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="193"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchemas" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="215"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateGlobalSchemaCompatibilityLevel" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="249"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateSchemaCompatibilityLevel" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="271"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/SchemaRegistryService;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateSchemaCompatibilityLevel$21" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="286"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateSchemaCompatibilityLevel$20" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/CompatibilityLevelDTO;)Lreactor/core/publisher/Mono;" line="281"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateGlobalSchemaCompatibilityLevel$19" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="262"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateGlobalSchemaCompatibilityLevel$18" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/CompatibilityLevelDTO;)Lreactor/core/publisher/Mono;" line="258"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSchemas$17" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemas$16" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="226"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemas$15" desc="(ILjava/util/List;)Lcom/provectus/kafka/ui/model/SchemaSubjectsResponseDTO;" line="240"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemas$14" desc="(Ljava/util/List;)Ljava/util/List;" line="239"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemas$13" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="230"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemas$12" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="223"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemas$11" desc="(Ljava/util/List;)Ljava/lang/Iterable;" line="222"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemaByVersion$10" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="206"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLatestSchema$9" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getGlobalSchemaCompatibilityLevel$8" desc="(Lcom/provectus/kafka/ui/sr/model/Compatibility;)Lcom/provectus/kafka/ui/model/CompatibilityLevelDTO;" line="167"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllVersionsBySubject$7" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="160"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteSchemaByVersion$6" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteSchema$5" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteLatestSchema$4" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createNewSchema$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createNewSchema$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/NewSchemaSubjectDTO;)Lreactor/core/publisher/Mono;" line="83"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkSchemaCompatibility$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$checkSchemaCompatibility$0" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/NewSchemaSubjectDTO;)Lreactor/core/publisher/Mono;" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="332" covered="353"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="82" covered="76"/><counter type="COMPLEXITY" missed="17" covered="28"/><counter type="METHOD" missed="16" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/MessagesController" sourcefilename="MessagesController.java"><method name="deleteTopicMessages" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="56"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeSmartFilterTest" desc="(Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicMessages" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/SeekTypeDTO;Ljava/util/List;Ljava/lang/Integer;Ljava/lang/String;Lcom/provectus/kafka/ui/model/MessageFilterTypeDTO;Lcom/provectus/kafka/ui/model/SeekDirectionDTO;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="91"><counter type="INSTRUCTION" missed="14" covered="77"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendTopicMessages" desc="(Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="129"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseSeekTo" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/SeekTypeDTO;Ljava/util/List;)Ljava/util/Map;" line="149"><counter type="INSTRUCTION" missed="20" covered="10"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerdes" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/SerdeUsageDTO;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="176"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/MessagesService;Lcom/provectus/kafka/ui/service/DeserializationService;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseSeekTo$4" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/tuple/Pair;" line="157"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sendTopicMessages$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="140"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sendTopicMessages$2" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/CreateTopicMessageDTO;)Lreactor/core/publisher/Mono;" line="138"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicMessages$1" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopicMessages$0" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="189" covered="148"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="42" covered="35"/><counter type="COMPLEXITY" missed="17" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/controller/KsqlController" sourcefilename="KsqlController.java"><method name="executeKsql" desc="(Ljava/lang/String;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="35"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="openKsqlResponsePipe" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="59"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listStreams" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="79"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listTables" desc="(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;" line="93"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlServiceV2;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTables$4" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$listStreams$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$openKsqlResponsePipe$2" desc="(Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient$KsqlResponseTable;)Lcom/provectus/kafka/ui/model/KsqlResponseDTO;" line="67"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$executeKsql$1" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KsqlCommandV2DTO;)Lreactor/core/publisher/Mono;" line="37"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$executeKsql$0" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="169" covered="10"/><counter type="LINE" missed="43" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BrokersController.java"><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="14" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="13" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="14" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="208"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="20" covered="44"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AclsController.java"><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="12" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="12" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="7" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="12" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="368" covered="6"/><counter type="LINE" missed="90" covered="1"/><counter type="COMPLEXITY" missed="22" covered="1"/><counter type="METHOD" missed="22" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SchemasController.java"><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="1" cb="1"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="13" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="167" mi="0" ci="11" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="4"/><line nr="227" mi="0" ci="14" mb="0" cb="4"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="11" mb="0" cb="4"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="10" mb="0" cb="2"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="10" mb="0" cb="0"/><line nr="239" mi="0" ci="14" mb="0" cb="0"/><line nr="240" mi="0" ci="10" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="9" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="10" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="332" covered="353"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="82" covered="76"/><counter type="COMPLEXITY" missed="17" covered="28"/><counter type="METHOD" missed="16" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsumerGroupsController.java"><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="7" ci="9" mb="2" cb="0"/><line nr="127" mi="1" ci="17" mb="1" cb="1"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="5" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="2" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="257" covered="136"/><counter type="BRANCH" missed="12" covered="1"/><counter type="LINE" missed="60" covered="32"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AuthController.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicsController.java"><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="12" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="12" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="12" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="16" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="4"/><line nr="190" mi="0" ci="14" mb="0" cb="4"/><line nr="191" mi="0" ci="6" mb="1" cb="3"/><line nr="192" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="10" mb="1" cb="3"/><line nr="195" mi="0" ci="5" mb="0" cb="2"/><line nr="196" mi="0" ci="13" mb="0" cb="4"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="10" mb="0" cb="2"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="11" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="12" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="11" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="13" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="9" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="11" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="13" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="9" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="7" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="9" ci="0" mb="0" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="6" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="2" ci="0" mb="0" cb="0"/><line nr="300" mi="7" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="8" ci="0" mb="0" cb="0"/><line nr="306" mi="13" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="7" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="8" ci="0" mb="0" cb="0"/><line nr="325" mi="8" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="10" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="20" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="6" ci="0" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="2"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="3" cb="2"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="10" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="318" covered="599"/><counter type="BRANCH" missed="5" covered="26"/><counter type="LINE" missed="75" covered="123"/><counter type="COMPLEXITY" missed="24" covered="42"/><counter type="METHOD" missed="19" covered="30"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ApplicationConfigController.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="13" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="4" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="16" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="185" covered="71"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="41" covered="14"/><counter type="COMPLEXITY" missed="18" covered="6"/><counter type="METHOD" missed="16" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractController.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="12" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ApplicationConfigController$PropertiesMapperImpl.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="10" ci="0" mb="2" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="2" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="2" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="194" mi="10" ci="0" mb="2" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="4" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="6" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="2" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="6" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="2" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="2" cb="0"/><line nr="236" mi="6" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="2" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="10" ci="0" mb="2" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="2" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="2" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="3" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="6" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="2" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="6" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="2" cb="0"/><line nr="303" mi="6" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="2" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="6" ci="0" mb="0" cb="0"/><line nr="320" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="6" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="6" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="2" cb="0"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="2" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="333" mi="6" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="6" ci="0" mb="0" cb="0"/><line nr="341" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="2" cb="0"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="6" ci="0" mb="0" cb="0"/><line nr="350" mi="10" ci="0" mb="2" cb="0"/><line nr="351" mi="6" ci="0" mb="0" cb="0"/><line nr="352" mi="1" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="2" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="4" ci="0" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="2" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="6" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="6" ci="0" mb="0" cb="0"/><line nr="383" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="2" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="2" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="6" ci="0" mb="0" cb="0"/><line nr="406" mi="10" ci="0" mb="2" cb="0"/><line nr="407" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="2" cb="0"/><line nr="415" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="6" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="2" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="421" mi="1" ci="0" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="0" cb="0"/><line nr="427" mi="2" ci="0" mb="2" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="2" cb="0"/><line nr="434" mi="5" ci="0" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="6" ci="0" mb="0" cb="0"/><line nr="439" mi="2" ci="0" mb="0" cb="0"/><line nr="443" mi="2" ci="0" mb="2" cb="0"/><line nr="444" mi="2" ci="0" mb="0" cb="0"/><line nr="447" mi="6" ci="0" mb="0" cb="0"/><line nr="448" mi="10" ci="0" mb="2" cb="0"/><line nr="449" mi="6" ci="0" mb="0" cb="0"/><line nr="450" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="2" cb="0"/><line nr="457" mi="2" ci="0" mb="0" cb="0"/><line nr="460" mi="4" ci="0" mb="0" cb="0"/><line nr="462" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="2" ci="0" mb="2" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="6" ci="0" mb="0" cb="0"/><line nr="468" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="0" cb="0"/><line nr="474" mi="2" ci="0" mb="2" cb="0"/><line nr="475" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="10" ci="0" mb="2" cb="0"/><line nr="480" mi="6" ci="0" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="2" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="3" ci="0" mb="2" cb="0"/><line nr="494" mi="5" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="2" cb="0"/><line nr="496" mi="5" ci="0" mb="0" cb="0"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="2" ci="0" mb="2" cb="0"/><line nr="505" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="510" mi="4" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="512" mi="4" ci="0" mb="0" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="4" ci="0" mb="0" cb="0"/><line nr="515" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="3" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="2" cb="0"/><line nr="518" mi="6" ci="0" mb="0" cb="0"/><line nr="520" mi="4" ci="0" mb="0" cb="0"/><line nr="521" mi="4" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="4" ci="0" mb="0" cb="0"/><line nr="526" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="2" cb="0"/><line nr="528" mi="6" ci="0" mb="0" cb="0"/><line nr="531" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="2" cb="0"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="539" mi="14" ci="0" mb="0" cb="0"/><line nr="541" mi="11" ci="0" mb="2" cb="0"/><line nr="542" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="6" ci="0" mb="0" cb="0"/><line nr="544" mi="5" ci="0" mb="0" cb="0"/><line nr="545" mi="1" ci="0" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="2" ci="0" mb="2" cb="0"/><line nr="552" mi="2" ci="0" mb="0" cb="0"/><line nr="555" mi="4" ci="0" mb="0" cb="0"/><line nr="557" mi="6" ci="0" mb="0" cb="0"/><line nr="559" mi="2" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="2" cb="0"/><line nr="564" mi="2" ci="0" mb="0" cb="0"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="569" mi="5" ci="0" mb="0" cb="0"/><line nr="570" mi="7" ci="0" mb="0" cb="0"/><line nr="572" mi="3" ci="0" mb="0" cb="0"/><line nr="576" mi="2" ci="0" mb="2" cb="0"/><line nr="577" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="4" ci="0" mb="0" cb="0"/><line nr="582" mi="4" ci="0" mb="0" cb="0"/><line nr="584" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="2" ci="0" mb="2" cb="0"/><line nr="589" mi="2" ci="0" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="595" mi="4" ci="0" mb="0" cb="0"/><line nr="596" mi="4" ci="0" mb="0" cb="0"/><line nr="597" mi="4" ci="0" mb="0" cb="0"/><line nr="598" mi="4" ci="0" mb="0" cb="0"/><line nr="599" mi="4" ci="0" mb="0" cb="0"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="601" mi="4" ci="0" mb="0" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="4" ci="0" mb="0" cb="0"/><line nr="604" mi="4" ci="0" mb="0" cb="0"/><line nr="605" mi="4" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="0" cb="0"/><line nr="607" mi="2" ci="0" mb="2" cb="0"/><line nr="608" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="2" ci="0" mb="2" cb="0"/><line nr="612" mi="6" ci="0" mb="0" cb="0"/><line nr="615" mi="2" ci="0" mb="0" cb="0"/><line nr="619" mi="2" ci="0" mb="2" cb="0"/><line nr="620" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="14" ci="0" mb="0" cb="0"/><line nr="625" mi="11" ci="0" mb="2" cb="0"/><line nr="626" mi="4" ci="0" mb="0" cb="0"/><line nr="627" mi="6" ci="0" mb="0" cb="0"/><line nr="628" mi="5" ci="0" mb="0" cb="0"/><line nr="629" mi="1" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="635" mi="2" ci="0" mb="2" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="639" mi="4" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="2" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="651" mi="4" ci="0" mb="0" cb="0"/><line nr="653" mi="4" ci="0" mb="0" cb="0"/><line nr="654" mi="6" ci="0" mb="0" cb="0"/><line nr="656" mi="2" ci="0" mb="0" cb="0"/><line nr="660" mi="2" ci="0" mb="2" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="4" ci="0" mb="0" cb="0"/><line nr="666" mi="3" ci="0" mb="2" cb="0"/><line nr="667" mi="5" ci="0" mb="0" cb="0"/><line nr="669" mi="4" ci="0" mb="0" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="676" mi="2" ci="0" mb="2" cb="0"/><line nr="677" mi="2" ci="0" mb="0" cb="0"/><line nr="680" mi="6" ci="0" mb="0" cb="0"/><line nr="681" mi="10" ci="0" mb="2" cb="0"/><line nr="682" mi="6" ci="0" mb="0" cb="0"/><line nr="683" mi="1" ci="0" mb="0" cb="0"/><line nr="685" mi="2" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="2" cb="0"/><line nr="690" mi="2" ci="0" mb="0" cb="0"/><line nr="695" mi="5" ci="0" mb="10" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="1" ci="0" mb="0" cb="0"/><line nr="698" mi="2" ci="0" mb="0" cb="0"/><line nr="699" mi="1" ci="0" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="701" mi="1" ci="0" mb="0" cb="0"/><line nr="702" mi="2" ci="0" mb="0" cb="0"/><line nr="703" mi="1" ci="0" mb="0" cb="0"/><line nr="704" mi="2" ci="0" mb="0" cb="0"/><line nr="705" mi="1" ci="0" mb="0" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="707" mi="1" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="0" cb="0"/><line nr="709" mi="1" ci="0" mb="0" cb="0"/><line nr="710" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="1" ci="0" mb="0" cb="0"/><line nr="712" mi="2" ci="0" mb="0" cb="0"/><line nr="713" mi="1" ci="0" mb="0" cb="0"/><line nr="714" mi="6" ci="0" mb="0" cb="0"/><line nr="717" mi="2" ci="0" mb="0" cb="0"/><line nr="721" mi="2" ci="0" mb="2" cb="0"/><line nr="722" mi="2" ci="0" mb="0" cb="0"/><line nr="725" mi="6" ci="0" mb="0" cb="0"/><line nr="726" mi="10" ci="0" mb="2" cb="0"/><line nr="727" mi="7" ci="0" mb="0" cb="0"/><line nr="728" mi="1" ci="0" mb="0" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="2" cb="0"/><line nr="735" mi="2" ci="0" mb="0" cb="0"/><line nr="738" mi="4" ci="0" mb="0" cb="0"/><line nr="740" mi="6" ci="0" mb="0" cb="0"/><line nr="741" mi="4" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="748" mi="2" ci="0" mb="2" cb="0"/><line nr="749" mi="2" ci="0" mb="0" cb="0"/><line nr="752" mi="6" ci="0" mb="0" cb="0"/><line nr="753" mi="10" ci="0" mb="2" cb="0"/><line nr="754" mi="6" ci="0" mb="0" cb="0"/><line nr="755" mi="1" ci="0" mb="0" cb="0"/><line nr="757" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="2" ci="0" mb="2" cb="0"/><line nr="762" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="4" ci="0" mb="0" cb="0"/><line nr="767" mi="4" ci="0" mb="0" cb="0"/><line nr="768" mi="3" ci="0" mb="0" cb="0"/><line nr="769" mi="2" ci="0" mb="2" cb="0"/><line nr="770" mi="6" ci="0" mb="0" cb="0"/><line nr="772" mi="6" ci="0" mb="0" cb="0"/><line nr="773" mi="6" ci="0" mb="0" cb="0"/><line nr="775" mi="2" ci="0" mb="0" cb="0"/><line nr="779" mi="2" ci="0" mb="2" cb="0"/><line nr="780" mi="2" ci="0" mb="0" cb="0"/><line nr="783" mi="6" ci="0" mb="0" cb="0"/><line nr="784" mi="10" ci="0" mb="2" cb="0"/><line nr="785" mi="6" ci="0" mb="0" cb="0"/><line nr="786" mi="1" ci="0" mb="0" cb="0"/><line nr="788" mi="2" ci="0" mb="0" cb="0"/><line nr="792" mi="2" ci="0" mb="2" cb="0"/><line nr="793" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="4" ci="0" mb="0" cb="0"/><line nr="798" mi="6" ci="0" mb="0" cb="0"/><line nr="800" mi="2" ci="0" mb="0" cb="0"/><line nr="804" mi="2" ci="0" mb="2" cb="0"/><line nr="805" mi="2" ci="0" mb="0" cb="0"/><line nr="808" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="812" mi="2" ci="0" mb="0" cb="0"/><line nr="816" mi="2" ci="0" mb="2" cb="0"/><line nr="817" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="4" ci="0" mb="0" cb="0"/><line nr="823" mi="4" ci="0" mb="0" cb="0"/><line nr="824" mi="4" ci="0" mb="0" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="830" mi="2" ci="0" mb="2" cb="0"/><line nr="831" mi="2" ci="0" mb="0" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="836" mi="4" ci="0" mb="0" cb="0"/><line nr="837" mi="4" ci="0" mb="0" cb="0"/><line nr="839" mi="2" ci="0" mb="0" cb="0"/><line nr="843" mi="2" ci="0" mb="2" cb="0"/><line nr="844" mi="2" ci="0" mb="0" cb="0"/><line nr="847" mi="4" ci="0" mb="0" cb="0"/><line nr="849" mi="4" ci="0" mb="0" cb="0"/><line nr="850" mi="4" ci="0" mb="0" cb="0"/><line nr="852" mi="2" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="2" cb="0"/><line nr="857" mi="2" ci="0" mb="0" cb="0"/><line nr="860" mi="4" ci="0" mb="0" cb="0"/><line nr="862" mi="4" ci="0" mb="0" cb="0"/><line nr="863" mi="4" ci="0" mb="0" cb="0"/><line nr="865" mi="2" ci="0" mb="0" cb="0"/><line nr="869" mi="2" ci="0" mb="2" cb="0"/><line nr="870" mi="2" ci="0" mb="0" cb="0"/><line nr="873" mi="4" ci="0" mb="0" cb="0"/><line nr="875" mi="4" ci="0" mb="0" cb="0"/><line nr="876" mi="4" ci="0" mb="0" cb="0"/><line nr="878" mi="2" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="2" cb="0"/><line nr="883" mi="2" ci="0" mb="0" cb="0"/><line nr="886" mi="4" ci="0" mb="0" cb="0"/><line nr="888" mi="4" ci="0" mb="0" cb="0"/><line nr="889" mi="4" ci="0" mb="0" cb="0"/><line nr="890" mi="4" ci="0" mb="0" cb="0"/><line nr="891" mi="4" ci="0" mb="0" cb="0"/><line nr="892" mi="4" ci="0" mb="0" cb="0"/><line nr="893" mi="4" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="899" mi="2" ci="0" mb="2" cb="0"/><line nr="900" mi="2" ci="0" mb="0" cb="0"/><line nr="903" mi="6" ci="0" mb="0" cb="0"/><line nr="904" mi="10" ci="0" mb="2" cb="0"/><line nr="905" mi="6" ci="0" mb="0" cb="0"/><line nr="906" mi="1" ci="0" mb="0" cb="0"/><line nr="908" mi="2" ci="0" mb="0" cb="0"/><line nr="912" mi="2" ci="0" mb="2" cb="0"/><line nr="913" mi="2" ci="0" mb="0" cb="0"/><line nr="916" mi="4" ci="0" mb="0" cb="0"/><line nr="918" mi="4" ci="0" mb="0" cb="0"/><line nr="919" mi="4" ci="0" mb="0" cb="0"/><line nr="920" mi="4" ci="0" mb="0" cb="0"/><line nr="921" mi="4" ci="0" mb="0" cb="0"/><line nr="922" mi="4" ci="0" mb="0" cb="0"/><line nr="923" mi="4" ci="0" mb="0" cb="0"/><line nr="924" mi="4" ci="0" mb="0" cb="0"/><line nr="926" mi="2" ci="0" mb="0" cb="0"/><line nr="930" mi="2" ci="0" mb="2" cb="0"/><line nr="931" mi="2" ci="0" mb="0" cb="0"/><line nr="934" mi="4" ci="0" mb="0" cb="0"/><line nr="936" mi="4" ci="0" mb="0" cb="0"/><line nr="937" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="4" ci="0" mb="0" cb="0"/><line nr="939" mi="3" ci="0" mb="0" cb="0"/><line nr="940" mi="2" ci="0" mb="2" cb="0"/><line nr="941" mi="6" ci="0" mb="0" cb="0"/><line nr="943" mi="4" ci="0" mb="0" cb="0"/><line nr="944" mi="4" ci="0" mb="0" cb="0"/><line nr="946" mi="2" ci="0" mb="0" cb="0"/><line nr="950" mi="2" ci="0" mb="2" cb="0"/><line nr="951" mi="2" ci="0" mb="0" cb="0"/><line nr="954" mi="6" ci="0" mb="0" cb="0"/><line nr="955" mi="10" ci="0" mb="2" cb="0"/><line nr="956" mi="6" ci="0" mb="0" cb="0"/><line nr="957" mi="1" ci="0" mb="0" cb="0"/><line nr="959" mi="2" ci="0" mb="0" cb="0"/><line nr="963" mi="2" ci="0" mb="2" cb="0"/><line nr="964" mi="2" ci="0" mb="0" cb="0"/><line nr="969" mi="5" ci="0" mb="4" cb="0"/><line nr="970" mi="2" ci="0" mb="0" cb="0"/><line nr="971" mi="1" ci="0" mb="0" cb="0"/><line nr="972" mi="2" ci="0" mb="0" cb="0"/><line nr="973" mi="1" ci="0" mb="0" cb="0"/><line nr="974" mi="2" ci="0" mb="0" cb="0"/><line nr="975" mi="1" ci="0" mb="0" cb="0"/><line nr="976" mi="6" ci="0" mb="0" cb="0"/><line nr="979" mi="2" ci="0" mb="0" cb="0"/><line nr="983" mi="2" ci="0" mb="2" cb="0"/><line nr="984" mi="2" ci="0" mb="0" cb="0"/><line nr="987" mi="4" ci="0" mb="0" cb="0"/><line nr="989" mi="6" ci="0" mb="0" cb="0"/><line nr="990" mi="3" ci="0" mb="0" cb="0"/><line nr="991" mi="2" ci="0" mb="2" cb="0"/><line nr="992" mi="6" ci="0" mb="0" cb="0"/><line nr="994" mi="4" ci="0" mb="0" cb="0"/><line nr="995" mi="3" ci="0" mb="0" cb="0"/><line nr="996" mi="2" ci="0" mb="2" cb="0"/><line nr="997" mi="6" ci="0" mb="0" cb="0"/><line nr="999" mi="4" ci="0" mb="0" cb="0"/><line nr="1000" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="4" ci="0" mb="0" cb="0"/><line nr="1003" mi="2" ci="0" mb="0" cb="0"/><line nr="1007" mi="2" ci="0" mb="2" cb="0"/><line nr="1008" mi="2" ci="0" mb="0" cb="0"/><line nr="1011" mi="6" ci="0" mb="0" cb="0"/><line nr="1012" mi="10" ci="0" mb="2" cb="0"/><line nr="1013" mi="6" ci="0" mb="0" cb="0"/><line nr="1014" mi="1" ci="0" mb="0" cb="0"/><line nr="1016" mi="2" ci="0" mb="0" cb="0"/><line nr="1020" mi="2" ci="0" mb="2" cb="0"/><line nr="1021" mi="2" ci="0" mb="0" cb="0"/><line nr="1026" mi="5" ci="0" mb="3" cb="0"/><line nr="1027" mi="2" ci="0" mb="0" cb="0"/><line nr="1028" mi="1" ci="0" mb="0" cb="0"/><line nr="1029" mi="2" ci="0" mb="0" cb="0"/><line nr="1030" mi="1" ci="0" mb="0" cb="0"/><line nr="1031" mi="6" ci="0" mb="0" cb="0"/><line nr="1034" mi="2" ci="0" mb="0" cb="0"/><line nr="1038" mi="2" ci="0" mb="2" cb="0"/><line nr="1039" mi="2" ci="0" mb="0" cb="0"/><line nr="1042" mi="4" ci="0" mb="0" cb="0"/><line nr="1044" mi="6" ci="0" mb="0" cb="0"/><line nr="1045" mi="4" ci="0" mb="0" cb="0"/><line nr="1046" mi="4" ci="0" mb="0" cb="0"/><line nr="1047" mi="4" ci="0" mb="0" cb="0"/><line nr="1048" mi="4" ci="0" mb="0" cb="0"/><line nr="1049" mi="3" ci="0" mb="0" cb="0"/><line nr="1050" mi="2" ci="0" mb="2" cb="0"/><line nr="1051" mi="6" ci="0" mb="0" cb="0"/><line nr="1054" mi="2" ci="0" mb="0" cb="0"/><line nr="1058" mi="2" ci="0" mb="2" cb="0"/><line nr="1059" mi="2" ci="0" mb="0" cb="0"/><line nr="1062" mi="4" ci="0" mb="0" cb="0"/><line nr="1064" mi="4" ci="0" mb="0" cb="0"/><line nr="1065" mi="4" ci="0" mb="0" cb="0"/><line nr="1066" mi="6" ci="0" mb="0" cb="0"/><line nr="1067" mi="4" ci="0" mb="0" cb="0"/><line nr="1068" mi="6" ci="0" mb="0" cb="0"/><line nr="1069" mi="6" ci="0" mb="0" cb="0"/><line nr="1070" mi="4" ci="0" mb="0" cb="0"/><line nr="1071" mi="6" ci="0" mb="0" cb="0"/><line nr="1072" mi="6" ci="0" mb="0" cb="0"/><line nr="1073" mi="6" ci="0" mb="0" cb="0"/><line nr="1074" mi="6" ci="0" mb="0" cb="0"/><line nr="1075" mi="3" ci="0" mb="0" cb="0"/><line nr="1076" mi="2" ci="0" mb="2" cb="0"/><line nr="1077" mi="6" ci="0" mb="0" cb="0"/><line nr="1079" mi="5" ci="0" mb="0" cb="0"/><line nr="1080" mi="6" ci="0" mb="0" cb="0"/><line nr="1081" mi="4" ci="0" mb="0" cb="0"/><line nr="1082" mi="4" ci="0" mb="0" cb="0"/><line nr="1083" mi="6" ci="0" mb="0" cb="0"/><line nr="1084" mi="4" ci="0" mb="0" cb="0"/><line nr="1085" mi="6" ci="0" mb="0" cb="0"/><line nr="1087" mi="2" ci="0" mb="0" cb="0"/><line nr="1091" mi="2" ci="0" mb="2" cb="0"/><line nr="1092" mi="2" ci="0" mb="0" cb="0"/><line nr="1095" mi="6" ci="0" mb="0" cb="0"/><line nr="1096" mi="10" ci="0" mb="2" cb="0"/><line nr="1097" mi="6" ci="0" mb="0" cb="0"/><line nr="1098" mi="1" ci="0" mb="0" cb="0"/><line nr="1100" mi="2" ci="0" mb="0" cb="0"/><line nr="1104" mi="2" ci="0" mb="2" cb="0"/><line nr="1105" mi="2" ci="0" mb="0" cb="0"/><line nr="1108" mi="4" ci="0" mb="0" cb="0"/><line nr="1110" mi="6" ci="0" mb="0" cb="0"/><line nr="1111" mi="4" ci="0" mb="0" cb="0"/><line nr="1112" mi="4" ci="0" mb="0" cb="0"/><line nr="1113" mi="6" ci="0" mb="0" cb="0"/><line nr="1115" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2153" covered="3"/><counter type="BRANCH" missed="232" covered="0"/><counter type="LINE" missed="597" covered="1"/><counter type="COMPLEXITY" missed="188" covered="1"/><counter type="METHOD" missed="65" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaConnectController.java"><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="4" ci="2" mb="3" cb="1"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="4" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="12" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="12" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="2" cb="0"/><line nr="201" mi="12" ci="0" mb="0" cb="0"/><line nr="203" mi="11" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="216" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="12" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="11" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="12" ci="0" mb="0" cb="0"/><line nr="256" mi="6" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="12" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="1" cb="1"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="4" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="208" covered="406"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="44" covered="98"/><counter type="COMPLEXITY" missed="16" covered="22"/><counter type="METHOD" missed="9" covered="22"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MessagesController.java"><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="1" cb="1"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="4" mb="1" cb="1"/><line nr="102" mi="1" ci="5" mb="1" cb="1"/><line nr="103" mi="2" ci="4" mb="1" cb="1"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="13" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="2" mb="3" cb="1"/><line nr="150" mi="0" ci="6" mb="2" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="2" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="2" cb="0"/><line nr="185" mi="9" ci="0" mb="0" cb="0"/><line nr="186" mi="8" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="2" cb="0"/><line nr="188" mi="9" ci="0" mb="0" cb="0"/><line nr="189" mi="8" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="189" covered="148"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="42" covered="35"/><counter type="COMPLEXITY" missed="17" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AccessController.java"><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="9" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="11" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="10"/><counter type="LINE" missed="38" covered="2"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="8" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClustersController.java"><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="10"/><counter type="LINE" missed="30" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KsqlController.java"><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="15" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="169" covered="10"/><counter type="LINE" missed="43" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StaticController.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="2" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="17"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4642" covered="2031"/><counter type="BRANCH" missed="287" covered="53"/><counter type="LINE" missed="1200" covered="449"/><counter type="COMPLEXITY" missed="363" covered="146"/><counter type="METHOD" missed="202" covered="126"/><counter type="CLASS" missed="0" covered="15"/></package><package name="com/provectus/kafka/ui/config/auth"><class name="com/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider" sourcefilename="OAuthProperties.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProvider" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClientId" desc="()Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClientSecret" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClientName" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRedirectUri" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAuthorizationGrantType" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScope" desc="()Ljava/util/Set;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIssuerUri" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAuthorizationUri" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTokenUri" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserInfoUri" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJwkSetUri" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserNameAttribute" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCustomParams" desc="()Ljava/util/Map;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProvider" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClientId" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClientSecret" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClientName" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRedirectUri" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAuthorizationGrantType" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setScope" desc="(Ljava/util/Set;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIssuerUri" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAuthorizationUri" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTokenUri" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUserInfoUri" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setJwkSetUri" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUserNameAttribute" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCustomParams" desc="(Ljava/util/Map;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="36"><counter type="INSTRUCTION" missed="259" covered="0"/><counter type="BRANCH" missed="90" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="36"><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="595" covered="0"/><counter type="BRANCH" missed="118" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="92" covered="0"/><counter type="METHOD" missed="33" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/DisabledAuthSecurityConfig" sourcefilename="DisabledAuthSecurityConfig.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity;Lorg/springframework/core/env/Environment;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/web/server/SecurityWebFilterChain;" line="22"><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$1" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$0" desc="()I" line="26"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties" sourcefilename="RoleBasedAccessControlProperties.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoles" desc="()Ljava/util/List;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/auth/LdapSecurityConfig$UserDetailsMapper" sourcefilename="LdapSecurityConfig.java"><method name="mapUserFromContext" desc="(Lorg/springframework/ldap/core/DirContextOperations;Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/security/core/userdetails/UserDetails;" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/RbacUser" sourcefilename="RbacUser.java"/><class name="com/provectus/kafka/ui/config/auth/AbstractAuthSecurityConfig" sourcefilename="AbstractAuthSecurityConfig.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/auth/OAuthProperties" sourcefilename="OAuthProperties.java"><method name="init" desc="()V" line="19"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateProvider" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)V" line="32"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClient" desc="()Ljava/util/Map;" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClient" desc="(Ljava/util/Map;)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="13"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="13"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$0" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)V" line="20"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/OAuthSecurityConfig" sourcefilename="OAuthSecurityConfig.java"><method name="configure" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity;Lcom/provectus/kafka/ui/config/auth/logout/OAuthLogoutSuccessHandler;)Lorg/springframework/security/web/server/SecurityWebFilterChain;" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="customOidcUserService" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)Lorg/springframework/security/oauth2/client/userinfo/ReactiveOAuth2UserService;" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="customOauth2UserService" desc="(Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)Lorg/springframework/security/oauth2/client/userinfo/ReactiveOAuth2UserService;" line="83"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clientRegistrationRepository" desc="()Lorg/springframework/security/oauth2/client/registration/InMemoryReactiveClientRegistrationRepository;" line="99"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultOidcLogoutHandler" desc="(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)Lorg/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtractor" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)Lcom/provectus/kafka/ui/service/rbac/extractor/ProviderAuthorityExtractor;" line="116"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProviderByProviderId" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;" line="125"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties;)V" line="43"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getExtractor$8" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;Lcom/provectus/kafka/ui/service/rbac/extractor/ProviderAuthorityExtractor;)Z" line="118"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$customOauth2UserService$7" desc="(Lorg/springframework/security/oauth2/client/userinfo/DefaultReactiveOAuth2UserService;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserRequest;)Lreactor/core/publisher/Mono;" line="84"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$customOauth2UserService$6" desc="(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserRequest;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Lorg/springframework/security/oauth2/core/user/OAuth2User;)Lreactor/core/publisher/Mono;" line="86"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$customOauth2UserService$5" desc="(Lorg/springframework/security/oauth2/core/user/OAuth2User;Ljava/util/Set;)Lcom/provectus/kafka/ui/config/auth/RbacOAuth2User;" line="93"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$customOidcUserService$4" desc="(Lorg/springframework/security/oauth2/client/oidc/userinfo/OidcReactiveOAuth2UserService;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Lorg/springframework/security/oauth2/client/oidc/userinfo/OidcUserRequest;)Lreactor/core/publisher/Mono;" line="68"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$customOidcUserService$3" desc="(Lorg/springframework/security/oauth2/client/oidc/userinfo/OidcUserRequest;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;Lorg/springframework/security/oauth2/core/oidc/user/OidcUser;)Lreactor/core/publisher/Mono;" line="70"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$customOidcUserService$2" desc="(Lorg/springframework/security/oauth2/core/oidc/user/OidcUser;Ljava/util/Set;)Lcom/provectus/kafka/ui/config/auth/RbacOidcUser;" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$1" desc="(Lcom/provectus/kafka/ui/config/auth/logout/OAuthLogoutSuccessHandler;Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;)V" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$0" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;)V" line="54"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="204" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/OAuthPropertiesConverter" sourcefilename="OAuthPropertiesConverter.java"><method name="convertProperties" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties;)Lorg/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties;" line="23"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyCustomTransformations" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)V" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyGoogleTransformations" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)V" line="55"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGoogle" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)Z" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$convertProperties$0" desc="(Lorg/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties;Ljava/lang/String;Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)V" line="25"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/AuthenticatedUser" sourcefilename="AuthenticatedUser.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Collection;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/auth/BasicAuthSecurityConfig" sourcefilename="BasicAuthSecurityConfig.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)Lorg/springframework/security/web/server/SecurityWebFilterChain;" line="28"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$2" desc="(Lorg/springframework/security/web/server/authentication/logout/RedirectServerLogoutSuccessHandler;Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;)V" line="44"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$1" desc="(Lorg/springframework/security/web/server/authentication/RedirectServerAuthenticationSuccessHandler;Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;)V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$0" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;)V" line="38"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/LdapSecurityConfig" sourcefilename="LdapSecurityConfig.java"><method name="authenticationManager" desc="(Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;Lorg/springframework/security/ldap/userdetails/LdapAuthoritiesPopulator;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)Lorg/springframework/security/authentication/ReactiveAuthenticationManager;" line="58"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contextSource" desc="()Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;" line="93"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ldapAuthoritiesExtractor" desc="(Lorg/springframework/context/ApplicationContext;Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)Lorg/springframework/security/ldap/userdetails/DefaultLdapAuthoritiesPopulator;" line="106"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configureLdap" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)Lorg/springframework/security/web/server/SecurityWebFilterChain;" line="125"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/auth/LdapProperties;)V" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configureLdap$0" desc="(Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;)V" line="131"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/RbacOidcUser" sourcefilename="RbacOidcUser.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/security/oauth2/core/oidc/user/OidcUser;Ljava/util/Collection;)V" line="10"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClaims" desc="()Ljava/util/Map;" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserInfo" desc="()Lorg/springframework/security/oauth2/core/oidc/OidcUserInfo;" line="19"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdToken" desc="()Lorg/springframework/security/oauth2/core/oidc/OidcIdToken;" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributes" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAuthorities" desc="()Ljava/util/Collection;" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/RbacLdapUser" sourcefilename="RbacLdapUser.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/security/core/userdetails/UserDetails;)V" line="12"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="groups" desc="()Ljava/util/Collection;" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAuthorities" desc="()Ljava/util/Collection;" line="28"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPassword" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAccountNonExpired" desc="()Z" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAccountNonLocked" desc="()Z" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCredentialsNonExpired" desc="()Z" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnabled" desc="()Z" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/RbacOAuth2User" sourcefilename="RbacOAuth2User.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/security/oauth2/core/user/OAuth2User;Ljava/util/Collection;)V" line="8"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAttributes" desc="()Ljava/util/Map;" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAuthorities" desc="()Ljava/util/Collection;" line="17"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/LdapProperties" sourcefilename="LdapProperties.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUrls" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBase" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdminUser" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdminPassword" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserFilterSearchBase" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserFilterSearchFilter" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupFilterSearchBase" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupFilterSearchFilter" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupRoleAttribute" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isActiveDirectory" desc="()Z" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActiveDirectoryDomain" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUrls" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBase" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAdminUser" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAdminPassword" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUserFilterSearchBase" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUserFilterSearchFilter" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGroupFilterSearchBase" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGroupFilterSearchFilter" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGroupRoleAttribute" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActiveDirectory" desc="(Z)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActiveDirectoryDomain" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="198" covered="0"/><counter type="BRANCH" missed="68" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="35" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="8"><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="462" covered="0"/><counter type="BRANCH" missed="90" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="72" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RbacUser.java"/><sourcefile name="BasicAuthSecurityConfig.java"><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OAuthProperties.java"><line nr="13" mi="71" ci="0" mb="14" cb="0"/><line nr="15" mi="9" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="2" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="553" ci="0" mb="118" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="709" covered="0"/><counter type="BRANCH" missed="136" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="111" covered="0"/><counter type="METHOD" missed="43" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="OAuthSecurityConfig.java"><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="13" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="204" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RbacOidcUser.java"><line nr="10" mi="9" ci="0" mb="0" cb="0"/><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LdapSecurityConfig.java"><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="2" cb="0"/><line nr="61" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="9" ci="0" mb="4" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="50" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="AbstractAuthSecurityConfig.java"><line nr="5" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="9" mi="0" ci="52" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RbacLdapUser.java"><line nr="12" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DisabledAuthSecurityConfig.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="1" cb="1"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="11" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OAuthPropertiesConverter.java"><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RbacOAuth2User.java"><line nr="8" mi="9" ci="0" mb="0" cb="0"/><line nr="12" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LdapProperties.java"><line nr="8" mi="429" ci="0" mb="90" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="462" covered="0"/><counter type="BRANCH" missed="90" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="72" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AuthenticatedUser.java"><line nr="5" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RoleBasedAccessControlProperties.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1912" covered="106"/><counter type="BRANCH" missed="255" covered="1"/><counter type="LINE" missed="217" covered="18"/><counter type="COMPLEXITY" missed="259" covered="10"/><counter type="METHOD" missed="131" covered="10"/><counter type="CLASS" missed="11" covered="4"/></package><package name="ksql"><class name="ksql/KsqlGrammarParser$SelectItemContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="4115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$SelectItemContext;)V" line="4117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$NumericLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="7805"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$LiteralContext;)V" line="7807"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7810"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7814"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$TablePropertyContext" sourcefilename="KsqlGrammarParser.java"><method name="EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3043"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literal" desc="()Lksql/KsqlGrammarParser$LiteralContext;" line="3045"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="3048"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3050"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3052"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3054"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3057"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3061"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarListener" sourcefilename="KsqlGrammarListener.java"/><class name="ksql/KsqlGrammarParser$AssertStreamContext" sourcefilename="KsqlGrammarParser.java"><method name="ASSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2262"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STREAM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2263"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="2265"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableElements" desc="()Lksql/KsqlGrammarParser$TableElementsContext;" line="2268"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2270"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="2272"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$AssertStatementContext;)V" line="2274"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2277"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2281"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$PrintClauseContext" sourcefilename="KsqlGrammarParser.java"><method name="FROM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BEGINNING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intervalClause" desc="()Lksql/KsqlGrammarParser$IntervalClauseContext;" line="3159"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="limitClause" desc="()Lksql/KsqlGrammarParser$LimitClauseContext;" line="3162"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3165"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3167"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3170"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3174"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$NonReservedContext" sourcefilename="KsqlGrammarParser.java"><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7901"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TABLES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7902"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COLUMNS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7903"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COLUMN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7904"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PARTITIONS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7905"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FUNCTIONS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7906"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FUNCTION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7907"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SESSION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7908"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRUCT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7909"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MAP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7910"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ARRAY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7911"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PARTITION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7912"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="INTEGER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7913"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7914"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TIME" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7915"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TIMESTAMP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7916"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="INTERVAL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7917"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ZONE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7918"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="YEAR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7919"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MONTH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7920"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DAY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7921"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="HOUR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7922"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUTE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7923"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SECOND" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7924"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXPLAIN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7925"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ANALYZE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7926"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TYPE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7927"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TYPES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7928"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SET" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7929"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="RESET" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7930"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7931"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SOURCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7932"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SINK" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7933"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PRIMARY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7934"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KEY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7935"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EMIT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7936"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CHANGES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7937"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FINAL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7938"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ESCAPE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7939"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="REPLACE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7940"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7941"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ALTER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7942"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ADD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7943"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7945"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="7947"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7950"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7954"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="233" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="48" covered="2"/><counter type="COMPLEXITY" missed="48" covered="1"/><counter type="METHOD" missed="46" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$WhenClauseContext" sourcefilename="KsqlGrammarParser.java"><method name="WHEN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="THEN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Ljava/util/List;" line="7115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="(I)Lksql/KsqlGrammarParser$ExpressionContext;" line="7118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="7123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7130"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BooleanLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="booleanValue" desc="()Lksql/KsqlGrammarParser$BooleanValueContext;" line="7820"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$LiteralContext;)V" line="7822"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7825"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7829"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$InsertValuesContext" sourcefilename="KsqlGrammarParser.java"><method name="INSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1096"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="INTO" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1097"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="1099"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="VALUES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Lksql/KsqlGrammarParser$ValuesContext;" line="1103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columns" desc="()Lksql/KsqlGrammarParser$ColumnsContext;" line="1106"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1108"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1115"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$WindowUnitContext" sourcefilename="KsqlGrammarParser.java"><method name="DAY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3780"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="HOUR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3781"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUTE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3782"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SECOND" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3783"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MILLISECOND" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3784"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DAYS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3785"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="HOURS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3786"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUTES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3787"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SECONDS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3788"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MILLISECONDS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3789"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3791"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3793"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3796"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3800"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$CastContext" sourcefilename="KsqlGrammarParser.java"><method name="CAST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6006"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="6008"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6010"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lksql/KsqlGrammarParser$TypeContext;" line="6012"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6014"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6017"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6021"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SubscriptContext" sourcefilename="KsqlGrammarParser.java"><method name="primaryExpression" desc="()Lksql/KsqlGrammarParser$PrimaryExpressionContext;" line="5926"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5929"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5931"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5934"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5938"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SingleStatementContext" sourcefilename="KsqlGrammarParser.java"><method name="statement" desc="()Lksql/KsqlGrammarParser$StatementContext;" line="354"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="357"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="359"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="362"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="366"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="11"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$DefineVariableContext" sourcefilename="KsqlGrammarParser.java"><method name="DEFINE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="466"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableName" desc="()Lksql/KsqlGrammarParser$VariableNameContext;" line="468"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="470"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableValue" desc="()Lksql/KsqlGrammarParser$VariableValueContext;" line="472"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="474"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="477"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="481"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TypeParameterContext" sourcefilename="KsqlGrammarParser.java"><method name="INTEGER_VALUE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7023"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7025"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="7027"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7030"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7034"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListConnectorPluginsContext" sourcefilename="KsqlGrammarParser.java"><method name="CONNECTOR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="895"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUGINS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="896"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="897"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="898"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="899"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="902"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="906"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BooleanDefaultContext" sourcefilename="KsqlGrammarParser.java"><method name="predicated" desc="()Lksql/KsqlGrammarParser$PredicatedContext;" line="5026"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$BooleanExpressionContext;)V" line="5028"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5031"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5035"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$IdentifierContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="7166"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="7168"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$IdentifierContext;)V" line="7170"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$SessionWindowExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="SESSION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3697"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="3699"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="3702"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retentionClause" desc="()Lksql/KsqlGrammarParser$RetentionClauseContext;" line="3705"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gracePeriodClause" desc="()Lksql/KsqlGrammarParser$GracePeriodClauseContext;" line="3708"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3711"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3713"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3716"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3720"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LambdaContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Ljava/util/List;" line="7370"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="(I)Lksql/KsqlGrammarParser$IdentifierContext;" line="7373"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LAMBDA_EXPRESSION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7375"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="7377"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$LambdaFunctionContext;)V" line="7379"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7382"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7386"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$IntervalClauseContext" sourcefilename="KsqlGrammarParser.java"><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="3233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="INTERVAL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SAMPLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3238"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3240"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3243"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3247"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListVariablesContext" sourcefilename="KsqlGrammarParser.java"><method name="VARIABLES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="807"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="808"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="809"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="810"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="813"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="817"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$PredicateContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5279"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;ILorg/antlr/v4/runtime/ParserRuleContext;)V" line="5281"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5284"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5286"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5288"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SearchedCaseContext" sourcefilename="KsqlGrammarParser.java"><method name="CASE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="END" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenClause" desc="()Ljava/util/List;" line="6115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenClause" desc="(I)Lksql/KsqlGrammarParser$WhenClauseContext;" line="6118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ELSE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="6122"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6127"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6131"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DropStreamContext" sourcefilename="KsqlGrammarParser.java"><method name="DROP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="638"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STREAM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="639"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="641"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="643"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="644"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DELETE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="645"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TOPIC" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="646"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="647"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="650"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="654"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="1"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$ConcatenationContext" sourcefilename="KsqlGrammarParser.java"><method name="CONCAT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5613"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Ljava/util/List;" line="5615"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5618"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;)V" line="5620"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5623"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5627"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LimitClauseContext" sourcefilename="KsqlGrammarParser.java"><method name="LIMIT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3285"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="3287"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3292"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3295"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3299"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$FunctionCallContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="6084"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASTERISK" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6086"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="functionArgument" desc="()Ljava/util/List;" line="6088"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="functionArgument" desc="(I)Lksql/KsqlGrammarParser$FunctionArgumentContext;" line="6091"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambdaFunction" desc="()Ljava/util/List;" line="6094"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambdaFunction" desc="(I)Lksql/KsqlGrammarParser$LambdaFunctionContext;" line="6097"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6099"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6102"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6106"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser" sourcefilename="KsqlGrammarParser.java"><method name="makeRuleNames" desc="()[Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="247"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLiteralNames" desc="()[Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="647"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSymbolicNames" desc="()[Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="707"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenNames" desc="()[Ljava/lang/String;" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVocabulary" desc="()Lorg/antlr/v4/runtime/Vocabulary;" line="175"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGrammarFileName" desc="()Ljava/lang/String;" line="179"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleNames" desc="()[Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializedATN" desc="()Ljava/lang/String;" line="185"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getATN" desc="()Lorg/antlr/v4/runtime/atn/ATN;" line="188"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/TokenStream;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="statements" desc="()Lksql/KsqlGrammarParser$StatementsContext;" line="219"><counter type="INSTRUCTION" missed="14" covered="78"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testStatement" desc="()Lksql/KsqlGrammarParser$TestStatementContext;" line="281"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleStatement" desc="()Lksql/KsqlGrammarParser$SingleStatementContext;" line="371"><counter type="INSTRUCTION" missed="14" covered="34"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleExpression" desc="()Lksql/KsqlGrammarParser$SingleExpressionContext;" line="414"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="statement" desc="()Lksql/KsqlGrammarParser$StatementContext;" line="1135"><counter type="INSTRUCTION" missed="1950" covered="582"/><counter type="BRANCH" missed="165" covered="28"/><counter type="LINE" missed="509" covered="147"/><counter type="COMPLEXITY" missed="110" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertStatement" desc="()Lksql/KsqlGrammarParser$AssertStatementContext;" line="2286"><counter type="INSTRUCTION" missed="340" covered="0"/><counter type="BRANCH" missed="17" covered="0"/><counter type="LINE" missed="95" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runScript" desc="()Lksql/KsqlGrammarParser$RunScriptContext;" line="2448"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lksql/KsqlGrammarParser$QueryContext;" line="2534"><counter type="INSTRUCTION" missed="310" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="86" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultMaterialization" desc="()Lksql/KsqlGrammarParser$ResultMaterializationContext;" line="2682"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alterOption" desc="()Lksql/KsqlGrammarParser$AlterOptionContext;" line="2736"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableElements" desc="()Lksql/KsqlGrammarParser$TableElementsContext;" line="2793"><counter type="INSTRUCTION" missed="14" covered="82"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tableElement" desc="()Lksql/KsqlGrammarParser$TableElementContext;" line="2860"><counter type="INSTRUCTION" missed="14" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="columnConstraints" desc="()Lksql/KsqlGrammarParser$ColumnConstraintsContext;" line="2915"><counter type="INSTRUCTION" missed="64" covered="63"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="19" covered="17"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="3000"><counter type="INSTRUCTION" missed="14" covered="82"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tableProperty" desc="()Lksql/KsqlGrammarParser$TablePropertyContext;" line="3066"><counter type="INSTRUCTION" missed="27" covered="53"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printClause" desc="()Lksql/KsqlGrammarParser$PrintClauseContext;" line="3179"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intervalClause" desc="()Lksql/KsqlGrammarParser$IntervalClauseContext;" line="3252"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="limitClause" desc="()Lksql/KsqlGrammarParser$LimitClauseContext;" line="3304"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retentionClause" desc="()Lksql/KsqlGrammarParser$RetentionClauseContext;" line="3350"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gracePeriodClause" desc="()Lksql/KsqlGrammarParser$GracePeriodClauseContext;" line="3399"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowExpression" desc="()Lksql/KsqlGrammarParser$WindowExpressionContext;" line="3452"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tumblingWindowExpression" desc="()Lksql/KsqlGrammarParser$TumblingWindowExpressionContext;" line="3536"><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hoppingWindowExpression" desc="()Lksql/KsqlGrammarParser$HoppingWindowExpressionContext;" line="3630"><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sessionWindowExpression" desc="()Lksql/KsqlGrammarParser$SessionWindowExpressionContext;" line="3725"><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="3805"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="groupBy" desc="()Lksql/KsqlGrammarParser$GroupByContext;" line="3857"><counter type="INSTRUCTION" missed="224" covered="0"/><counter type="BRANCH" missed="19" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="partitionBy" desc="()Lksql/KsqlGrammarParser$PartitionByContext;" line="3958"><counter type="INSTRUCTION" missed="224" covered="0"/><counter type="BRANCH" missed="19" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Lksql/KsqlGrammarParser$ValuesContext;" line="4059"><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectItem" desc="()Lksql/KsqlGrammarParser$SelectItemContext;" line="4157"><counter type="INSTRUCTION" missed="194" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="relation" desc="()Lksql/KsqlGrammarParser$RelationContext;" line="4276"><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinedSource" desc="()Lksql/KsqlGrammarParser$JoinedSourceContext;" line="4356"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinType" desc="()Lksql/KsqlGrammarParser$JoinTypeContext;" line="4448"><counter type="INSTRUCTION" missed="158" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinWindow" desc="()Lksql/KsqlGrammarParser$JoinWindowContext;" line="4544"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withinExpression" desc="()Lksql/KsqlGrammarParser$WithinExpressionContext;" line="4619"><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinWindowSize" desc="()Lksql/KsqlGrammarParser$JoinWindowSizeContext;" line="4711"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinCriteria" desc="()Lksql/KsqlGrammarParser$JoinCriteriaContext;" line="4754"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aliasedRelation" desc="()Lksql/KsqlGrammarParser$AliasedRelationContext;" line="4800"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columns" desc="()Lksql/KsqlGrammarParser$ColumnsContext;" line="4864"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="relationPrimary" desc="()Lksql/KsqlGrammarParser$RelationPrimaryContext;" line="4934"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="4975"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="()Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="5063"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="(I)Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="5067"><counter type="INSTRUCTION" missed="282" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="64" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicated" desc="()Lksql/KsqlGrammarParser$PredicatedContext;" line="5246"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicate" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;)Lksql/KsqlGrammarParser$PredicateContext;" line="5412"><counter type="INSTRUCTION" missed="426" covered="0"/><counter type="BRANCH" missed="21" covered="0"/><counter type="LINE" missed="112" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5695"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5699"><counter type="INSTRUCTION" missed="495" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="99" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryExpression" desc="()Lksql/KsqlGrammarParser$PrimaryExpressionContext;" line="6151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryExpression" desc="(I)Lksql/KsqlGrammarParser$PrimaryExpressionContext;" line="6155"><counter type="INSTRUCTION" missed="1280" covered="0"/><counter type="BRANCH" missed="99" covered="0"/><counter type="LINE" missed="306" covered="0"/><counter type="COMPLEXITY" missed="57" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="functionArgument" desc="()Lksql/KsqlGrammarParser$FunctionArgumentContext;" line="6609"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="3" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeZoneSpecifier" desc="()Lksql/KsqlGrammarParser$TimeZoneSpecifierContext;" line="6671"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="comparisonOperator" desc="()Lksql/KsqlGrammarParser$ComparisonOperatorContext;" line="6719"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanValue" desc="()Lksql/KsqlGrammarParser$BooleanValueContext;" line="6767"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lksql/KsqlGrammarParser$TypeContext;" line="6846"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="(I)Lksql/KsqlGrammarParser$TypeContext;" line="6850"><counter type="INSTRUCTION" missed="390" covered="99"/><counter type="BRANCH" missed="31" covered="3"/><counter type="LINE" missed="96" covered="22"/><counter type="COMPLEXITY" missed="19" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeParameter" desc="()Lksql/KsqlGrammarParser$TypeParameterContext;" line="7039"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="baseType" desc="()Lksql/KsqlGrammarParser$BaseTypeContext;" line="7088"><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whenClause" desc="()Lksql/KsqlGrammarParser$WhenClauseContext;" line="7135"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="7243"><counter type="INSTRUCTION" missed="87" covered="62"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="25" covered="17"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambdaFunction" desc="()Lksql/KsqlGrammarParser$LambdaFunctionContext;" line="7391"><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableName" desc="()Lksql/KsqlGrammarParser$VariableNameContext;" line="7523"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableValue" desc="()Lksql/KsqlGrammarParser$VariableValueContext;" line="7561"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="7601"><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="7677"><counter type="INSTRUCTION" missed="99" covered="65"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="28" covered="15"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literal" desc="()Lksql/KsqlGrammarParser$LiteralContext;" line="7834"><counter type="INSTRUCTION" missed="69" covered="62"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="20" covered="17"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonReserved" desc="()Lksql/KsqlGrammarParser$NonReservedContext;" line="7959"><counter type="INSTRUCTION" missed="37" covered="62"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sempred" desc="(Lorg/antlr/v4/runtime/RuleContext;II)Z" line="7989"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression_sempred" desc="(Lksql/KsqlGrammarParser$BooleanExpressionContext;I)Z" line="8002"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="3" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression_sempred" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;I)Z" line="8011"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryExpression_sempred" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;I)Z" line="8024"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="3" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type_sempred" desc="(Lksql/KsqlGrammarParser$TypeContext;I)Z" line="8033"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9843" covered="3147"/><counter type="BRANCH" missed="644" covered="64"/><counter type="LINE" missed="2467" covered="385"/><counter type="COMPLEXITY" missed="450" covered="37"/><counter type="METHOD" missed="60" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$RegisterTypeContext" sourcefilename="KsqlGrammarParser.java"><method name="CREATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="581"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TYPE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="582"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="584"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="586"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lksql/KsqlGrammarParser$TypeContext;" line="588"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="590"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="591"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="592"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="593"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="596"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="600"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ColumnConstraintsContext" sourcefilename="KsqlGrammarParser.java"><method name="KEY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2895"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PRIMARY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2896"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="HEADERS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2897"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="HEADER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2898"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2899"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2901"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2903"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2906"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2910"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="8" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$AssertTombstoneContext" sourcefilename="KsqlGrammarParser.java"><method name="ASSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2213"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NULL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="VALUES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2215"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="2217"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KEY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Lksql/KsqlGrammarParser$ValuesContext;" line="2221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columns" desc="()Lksql/KsqlGrammarParser$ColumnsContext;" line="2224"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$AssertStatementContext;)V" line="2226"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2229"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2233"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TerminateQueryContext" sourcefilename="KsqlGrammarParser.java"><method name="TERMINATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1063"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="1065"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ALL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1067"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1068"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1071"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1075"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ComparisonContext" sourcefilename="KsqlGrammarParser.java"><method name="comparisonOperator" desc="()Lksql/KsqlGrammarParser$ComparisonOperatorContext;" line="5296"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5299"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5301"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5304"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5308"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListStreamsContext" sourcefilename="KsqlGrammarParser.java"><method name="STREAMS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="822"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="823"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="824"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXTENDED" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="825"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="826"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="829"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="833"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$AliasedRelationContext" sourcefilename="KsqlGrammarParser.java"><method name="relationPrimary" desc="()Lksql/KsqlGrammarParser$RelationPrimaryContext;" line="4779"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="4782"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4784"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4786"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4788"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4791"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4795"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SetPropertyContext" sourcefilename="KsqlGrammarParser.java"><method name="SET" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1045"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Ljava/util/List;" line="1046"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1048"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1050"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1051"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1054"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1058"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BetweenContext" sourcefilename="KsqlGrammarParser.java"><method name="BETWEEN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5391"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AND" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5392"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Ljava/util/List;" line="5394"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5397"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5399"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5400"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5403"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5407"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$IntegerLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="INTEGER_VALUE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7663"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7664"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$NumberContext;)V" line="7665"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7668"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7672"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$ListPropertiesContext" sourcefilename="KsqlGrammarParser.java"><method name="PROPERTIES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1011"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1012"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1013"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1014"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1017"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1021"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$JoinRelationContext" sourcefilename="KsqlGrammarParser.java"><method name="aliasedRelation" desc="()Lksql/KsqlGrammarParser$AliasedRelationContext;" line="4256"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinedSource" desc="()Ljava/util/List;" line="4259"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinedSource" desc="(I)Lksql/KsqlGrammarParser$JoinedSourceContext;" line="4262"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$RelationContext;)V" line="4264"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4267"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4271"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$CreateStreamContext" sourcefilename="KsqlGrammarParser.java"><method name="CREATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="760"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STREAM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="761"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="763"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="765"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="REPLACE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="766"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SOURCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="767"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="768"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="769"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="770"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableElements" desc="()Lksql/KsqlGrammarParser$TableElementsContext;" line="772"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="774"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="776"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="778"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="781"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="785"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="1"/><counter type="COMPLEXITY" missed="16" covered="1"/><counter type="METHOD" missed="14" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$AssertValuesContext" sourcefilename="KsqlGrammarParser.java"><method name="ASSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="VALUES" desc="()Ljava/util/List;" line="2188"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="VALUES" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="2193"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Lksql/KsqlGrammarParser$ValuesContext;" line="2196"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columns" desc="()Lksql/KsqlGrammarParser$ColumnsContext;" line="2199"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$AssertStatementContext;)V" line="2201"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2204"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2208"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$CreateStreamAsContext" sourcefilename="KsqlGrammarParser.java"><method name="CREATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="674"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STREAM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="675"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="677"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="679"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lksql/KsqlGrammarParser$QueryContext;" line="681"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="683"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="REPLACE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="684"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="685"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="686"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="687"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="688"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="690"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="692"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="695"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="699"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DescribeConnectorContext" sourcefilename="KsqlGrammarParser.java"><method name="DESCRIBE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="926"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CONNECTOR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="927"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="929"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="931"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="934"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="938"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DescribeFunctionContext" sourcefilename="KsqlGrammarParser.java"><method name="DESCRIBE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="564"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FUNCTION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="565"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="567"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="569"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="572"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="576"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ComparisonOperatorContext" sourcefilename="KsqlGrammarParser.java"><method name="EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6698"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NEQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6699"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6700"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LTE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6701"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6702"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GTE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6703"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="6705"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="6707"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6710"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6714"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarBaseListener" sourcefilename="KsqlGrammarBaseListener.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterStatements" desc="(Lksql/KsqlGrammarParser$StatementsContext;)V" line="20"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitStatements" desc="(Lksql/KsqlGrammarParser$StatementsContext;)V" line="26"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTestStatement" desc="(Lksql/KsqlGrammarParser$TestStatementContext;)V" line="32"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTestStatement" desc="(Lksql/KsqlGrammarParser$TestStatementContext;)V" line="38"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSingleStatement" desc="(Lksql/KsqlGrammarParser$SingleStatementContext;)V" line="44"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSingleStatement" desc="(Lksql/KsqlGrammarParser$SingleStatementContext;)V" line="50"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSingleExpression" desc="(Lksql/KsqlGrammarParser$SingleExpressionContext;)V" line="56"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSingleExpression" desc="(Lksql/KsqlGrammarParser$SingleExpressionContext;)V" line="62"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterQueryStatement" desc="(Lksql/KsqlGrammarParser$QueryStatementContext;)V" line="68"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitQueryStatement" desc="(Lksql/KsqlGrammarParser$QueryStatementContext;)V" line="74"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListProperties" desc="(Lksql/KsqlGrammarParser$ListPropertiesContext;)V" line="80"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListProperties" desc="(Lksql/KsqlGrammarParser$ListPropertiesContext;)V" line="86"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListTopics" desc="(Lksql/KsqlGrammarParser$ListTopicsContext;)V" line="92"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListTopics" desc="(Lksql/KsqlGrammarParser$ListTopicsContext;)V" line="98"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListStreams" desc="(Lksql/KsqlGrammarParser$ListStreamsContext;)V" line="104"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListStreams" desc="(Lksql/KsqlGrammarParser$ListStreamsContext;)V" line="110"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListTables" desc="(Lksql/KsqlGrammarParser$ListTablesContext;)V" line="116"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListTables" desc="(Lksql/KsqlGrammarParser$ListTablesContext;)V" line="122"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListFunctions" desc="(Lksql/KsqlGrammarParser$ListFunctionsContext;)V" line="128"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListFunctions" desc="(Lksql/KsqlGrammarParser$ListFunctionsContext;)V" line="134"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListConnectors" desc="(Lksql/KsqlGrammarParser$ListConnectorsContext;)V" line="140"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListConnectors" desc="(Lksql/KsqlGrammarParser$ListConnectorsContext;)V" line="146"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListConnectorPlugins" desc="(Lksql/KsqlGrammarParser$ListConnectorPluginsContext;)V" line="152"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListConnectorPlugins" desc="(Lksql/KsqlGrammarParser$ListConnectorPluginsContext;)V" line="158"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListTypes" desc="(Lksql/KsqlGrammarParser$ListTypesContext;)V" line="164"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListTypes" desc="(Lksql/KsqlGrammarParser$ListTypesContext;)V" line="170"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListVariables" desc="(Lksql/KsqlGrammarParser$ListVariablesContext;)V" line="176"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListVariables" desc="(Lksql/KsqlGrammarParser$ListVariablesContext;)V" line="182"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterShowColumns" desc="(Lksql/KsqlGrammarParser$ShowColumnsContext;)V" line="188"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitShowColumns" desc="(Lksql/KsqlGrammarParser$ShowColumnsContext;)V" line="194"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDescribeStreams" desc="(Lksql/KsqlGrammarParser$DescribeStreamsContext;)V" line="200"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDescribeStreams" desc="(Lksql/KsqlGrammarParser$DescribeStreamsContext;)V" line="206"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDescribeFunction" desc="(Lksql/KsqlGrammarParser$DescribeFunctionContext;)V" line="212"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDescribeFunction" desc="(Lksql/KsqlGrammarParser$DescribeFunctionContext;)V" line="218"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDescribeConnector" desc="(Lksql/KsqlGrammarParser$DescribeConnectorContext;)V" line="224"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDescribeConnector" desc="(Lksql/KsqlGrammarParser$DescribeConnectorContext;)V" line="230"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterPrintTopic" desc="(Lksql/KsqlGrammarParser$PrintTopicContext;)V" line="236"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitPrintTopic" desc="(Lksql/KsqlGrammarParser$PrintTopicContext;)V" line="242"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterListQueries" desc="(Lksql/KsqlGrammarParser$ListQueriesContext;)V" line="248"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitListQueries" desc="(Lksql/KsqlGrammarParser$ListQueriesContext;)V" line="254"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTerminateQuery" desc="(Lksql/KsqlGrammarParser$TerminateQueryContext;)V" line="260"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTerminateQuery" desc="(Lksql/KsqlGrammarParser$TerminateQueryContext;)V" line="266"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSetProperty" desc="(Lksql/KsqlGrammarParser$SetPropertyContext;)V" line="272"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSetProperty" desc="(Lksql/KsqlGrammarParser$SetPropertyContext;)V" line="278"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterUnsetProperty" desc="(Lksql/KsqlGrammarParser$UnsetPropertyContext;)V" line="284"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitUnsetProperty" desc="(Lksql/KsqlGrammarParser$UnsetPropertyContext;)V" line="290"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDefineVariable" desc="(Lksql/KsqlGrammarParser$DefineVariableContext;)V" line="296"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDefineVariable" desc="(Lksql/KsqlGrammarParser$DefineVariableContext;)V" line="302"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterUndefineVariable" desc="(Lksql/KsqlGrammarParser$UndefineVariableContext;)V" line="308"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitUndefineVariable" desc="(Lksql/KsqlGrammarParser$UndefineVariableContext;)V" line="314"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterCreateStream" desc="(Lksql/KsqlGrammarParser$CreateStreamContext;)V" line="320"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCreateStream" desc="(Lksql/KsqlGrammarParser$CreateStreamContext;)V" line="326"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterCreateStreamAs" desc="(Lksql/KsqlGrammarParser$CreateStreamAsContext;)V" line="332"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCreateStreamAs" desc="(Lksql/KsqlGrammarParser$CreateStreamAsContext;)V" line="338"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterCreateTable" desc="(Lksql/KsqlGrammarParser$CreateTableContext;)V" line="344"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCreateTable" desc="(Lksql/KsqlGrammarParser$CreateTableContext;)V" line="350"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterCreateTableAs" desc="(Lksql/KsqlGrammarParser$CreateTableAsContext;)V" line="356"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCreateTableAs" desc="(Lksql/KsqlGrammarParser$CreateTableAsContext;)V" line="362"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterCreateConnector" desc="(Lksql/KsqlGrammarParser$CreateConnectorContext;)V" line="368"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCreateConnector" desc="(Lksql/KsqlGrammarParser$CreateConnectorContext;)V" line="374"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterInsertInto" desc="(Lksql/KsqlGrammarParser$InsertIntoContext;)V" line="380"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitInsertInto" desc="(Lksql/KsqlGrammarParser$InsertIntoContext;)V" line="386"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterInsertValues" desc="(Lksql/KsqlGrammarParser$InsertValuesContext;)V" line="392"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitInsertValues" desc="(Lksql/KsqlGrammarParser$InsertValuesContext;)V" line="398"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDropStream" desc="(Lksql/KsqlGrammarParser$DropStreamContext;)V" line="404"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDropStream" desc="(Lksql/KsqlGrammarParser$DropStreamContext;)V" line="410"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDropTable" desc="(Lksql/KsqlGrammarParser$DropTableContext;)V" line="416"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDropTable" desc="(Lksql/KsqlGrammarParser$DropTableContext;)V" line="422"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDropConnector" desc="(Lksql/KsqlGrammarParser$DropConnectorContext;)V" line="428"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDropConnector" desc="(Lksql/KsqlGrammarParser$DropConnectorContext;)V" line="434"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterExplain" desc="(Lksql/KsqlGrammarParser$ExplainContext;)V" line="440"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitExplain" desc="(Lksql/KsqlGrammarParser$ExplainContext;)V" line="446"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRegisterType" desc="(Lksql/KsqlGrammarParser$RegisterTypeContext;)V" line="452"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRegisterType" desc="(Lksql/KsqlGrammarParser$RegisterTypeContext;)V" line="458"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDropType" desc="(Lksql/KsqlGrammarParser$DropTypeContext;)V" line="464"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDropType" desc="(Lksql/KsqlGrammarParser$DropTypeContext;)V" line="470"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAlterSource" desc="(Lksql/KsqlGrammarParser$AlterSourceContext;)V" line="476"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAlterSource" desc="(Lksql/KsqlGrammarParser$AlterSourceContext;)V" line="482"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAssertValues" desc="(Lksql/KsqlGrammarParser$AssertValuesContext;)V" line="488"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAssertValues" desc="(Lksql/KsqlGrammarParser$AssertValuesContext;)V" line="494"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAssertTombstone" desc="(Lksql/KsqlGrammarParser$AssertTombstoneContext;)V" line="500"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAssertTombstone" desc="(Lksql/KsqlGrammarParser$AssertTombstoneContext;)V" line="506"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAssertStream" desc="(Lksql/KsqlGrammarParser$AssertStreamContext;)V" line="512"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAssertStream" desc="(Lksql/KsqlGrammarParser$AssertStreamContext;)V" line="518"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAssertTable" desc="(Lksql/KsqlGrammarParser$AssertTableContext;)V" line="524"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAssertTable" desc="(Lksql/KsqlGrammarParser$AssertTableContext;)V" line="530"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRunScript" desc="(Lksql/KsqlGrammarParser$RunScriptContext;)V" line="536"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRunScript" desc="(Lksql/KsqlGrammarParser$RunScriptContext;)V" line="542"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterQuery" desc="(Lksql/KsqlGrammarParser$QueryContext;)V" line="548"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitQuery" desc="(Lksql/KsqlGrammarParser$QueryContext;)V" line="554"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterResultMaterialization" desc="(Lksql/KsqlGrammarParser$ResultMaterializationContext;)V" line="560"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitResultMaterialization" desc="(Lksql/KsqlGrammarParser$ResultMaterializationContext;)V" line="566"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAlterOption" desc="(Lksql/KsqlGrammarParser$AlterOptionContext;)V" line="572"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAlterOption" desc="(Lksql/KsqlGrammarParser$AlterOptionContext;)V" line="578"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTableElements" desc="(Lksql/KsqlGrammarParser$TableElementsContext;)V" line="584"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTableElements" desc="(Lksql/KsqlGrammarParser$TableElementsContext;)V" line="590"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTableElement" desc="(Lksql/KsqlGrammarParser$TableElementContext;)V" line="596"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTableElement" desc="(Lksql/KsqlGrammarParser$TableElementContext;)V" line="602"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterColumnConstraints" desc="(Lksql/KsqlGrammarParser$ColumnConstraintsContext;)V" line="608"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitColumnConstraints" desc="(Lksql/KsqlGrammarParser$ColumnConstraintsContext;)V" line="614"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTableProperties" desc="(Lksql/KsqlGrammarParser$TablePropertiesContext;)V" line="620"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTableProperties" desc="(Lksql/KsqlGrammarParser$TablePropertiesContext;)V" line="626"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTableProperty" desc="(Lksql/KsqlGrammarParser$TablePropertyContext;)V" line="632"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTableProperty" desc="(Lksql/KsqlGrammarParser$TablePropertyContext;)V" line="638"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterPrintClause" desc="(Lksql/KsqlGrammarParser$PrintClauseContext;)V" line="644"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitPrintClause" desc="(Lksql/KsqlGrammarParser$PrintClauseContext;)V" line="650"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterIntervalClause" desc="(Lksql/KsqlGrammarParser$IntervalClauseContext;)V" line="656"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitIntervalClause" desc="(Lksql/KsqlGrammarParser$IntervalClauseContext;)V" line="662"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLimitClause" desc="(Lksql/KsqlGrammarParser$LimitClauseContext;)V" line="668"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLimitClause" desc="(Lksql/KsqlGrammarParser$LimitClauseContext;)V" line="674"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRetentionClause" desc="(Lksql/KsqlGrammarParser$RetentionClauseContext;)V" line="680"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRetentionClause" desc="(Lksql/KsqlGrammarParser$RetentionClauseContext;)V" line="686"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterGracePeriodClause" desc="(Lksql/KsqlGrammarParser$GracePeriodClauseContext;)V" line="692"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitGracePeriodClause" desc="(Lksql/KsqlGrammarParser$GracePeriodClauseContext;)V" line="698"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterWindowExpression" desc="(Lksql/KsqlGrammarParser$WindowExpressionContext;)V" line="704"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWindowExpression" desc="(Lksql/KsqlGrammarParser$WindowExpressionContext;)V" line="710"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTumblingWindowExpression" desc="(Lksql/KsqlGrammarParser$TumblingWindowExpressionContext;)V" line="716"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTumblingWindowExpression" desc="(Lksql/KsqlGrammarParser$TumblingWindowExpressionContext;)V" line="722"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterHoppingWindowExpression" desc="(Lksql/KsqlGrammarParser$HoppingWindowExpressionContext;)V" line="728"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitHoppingWindowExpression" desc="(Lksql/KsqlGrammarParser$HoppingWindowExpressionContext;)V" line="734"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSessionWindowExpression" desc="(Lksql/KsqlGrammarParser$SessionWindowExpressionContext;)V" line="740"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSessionWindowExpression" desc="(Lksql/KsqlGrammarParser$SessionWindowExpressionContext;)V" line="746"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterWindowUnit" desc="(Lksql/KsqlGrammarParser$WindowUnitContext;)V" line="752"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWindowUnit" desc="(Lksql/KsqlGrammarParser$WindowUnitContext;)V" line="758"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterGroupBy" desc="(Lksql/KsqlGrammarParser$GroupByContext;)V" line="764"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitGroupBy" desc="(Lksql/KsqlGrammarParser$GroupByContext;)V" line="770"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterPartitionBy" desc="(Lksql/KsqlGrammarParser$PartitionByContext;)V" line="776"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitPartitionBy" desc="(Lksql/KsqlGrammarParser$PartitionByContext;)V" line="782"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterValues" desc="(Lksql/KsqlGrammarParser$ValuesContext;)V" line="788"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitValues" desc="(Lksql/KsqlGrammarParser$ValuesContext;)V" line="794"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSelectSingle" desc="(Lksql/KsqlGrammarParser$SelectSingleContext;)V" line="800"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSelectSingle" desc="(Lksql/KsqlGrammarParser$SelectSingleContext;)V" line="806"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSelectAll" desc="(Lksql/KsqlGrammarParser$SelectAllContext;)V" line="812"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSelectAll" desc="(Lksql/KsqlGrammarParser$SelectAllContext;)V" line="818"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterJoinRelation" desc="(Lksql/KsqlGrammarParser$JoinRelationContext;)V" line="824"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitJoinRelation" desc="(Lksql/KsqlGrammarParser$JoinRelationContext;)V" line="830"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRelationDefault" desc="(Lksql/KsqlGrammarParser$RelationDefaultContext;)V" line="836"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRelationDefault" desc="(Lksql/KsqlGrammarParser$RelationDefaultContext;)V" line="842"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterJoinedSource" desc="(Lksql/KsqlGrammarParser$JoinedSourceContext;)V" line="848"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitJoinedSource" desc="(Lksql/KsqlGrammarParser$JoinedSourceContext;)V" line="854"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterInnerJoin" desc="(Lksql/KsqlGrammarParser$InnerJoinContext;)V" line="860"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitInnerJoin" desc="(Lksql/KsqlGrammarParser$InnerJoinContext;)V" line="866"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterOuterJoin" desc="(Lksql/KsqlGrammarParser$OuterJoinContext;)V" line="872"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitOuterJoin" desc="(Lksql/KsqlGrammarParser$OuterJoinContext;)V" line="878"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLeftJoin" desc="(Lksql/KsqlGrammarParser$LeftJoinContext;)V" line="884"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLeftJoin" desc="(Lksql/KsqlGrammarParser$LeftJoinContext;)V" line="890"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterJoinWindow" desc="(Lksql/KsqlGrammarParser$JoinWindowContext;)V" line="896"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitJoinWindow" desc="(Lksql/KsqlGrammarParser$JoinWindowContext;)V" line="902"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterJoinWindowWithBeforeAndAfter" desc="(Lksql/KsqlGrammarParser$JoinWindowWithBeforeAndAfterContext;)V" line="908"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitJoinWindowWithBeforeAndAfter" desc="(Lksql/KsqlGrammarParser$JoinWindowWithBeforeAndAfterContext;)V" line="914"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSingleJoinWindow" desc="(Lksql/KsqlGrammarParser$SingleJoinWindowContext;)V" line="920"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSingleJoinWindow" desc="(Lksql/KsqlGrammarParser$SingleJoinWindowContext;)V" line="926"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterJoinWindowSize" desc="(Lksql/KsqlGrammarParser$JoinWindowSizeContext;)V" line="932"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitJoinWindowSize" desc="(Lksql/KsqlGrammarParser$JoinWindowSizeContext;)V" line="938"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterJoinCriteria" desc="(Lksql/KsqlGrammarParser$JoinCriteriaContext;)V" line="944"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitJoinCriteria" desc="(Lksql/KsqlGrammarParser$JoinCriteriaContext;)V" line="950"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAliasedRelation" desc="(Lksql/KsqlGrammarParser$AliasedRelationContext;)V" line="956"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAliasedRelation" desc="(Lksql/KsqlGrammarParser$AliasedRelationContext;)V" line="962"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterColumns" desc="(Lksql/KsqlGrammarParser$ColumnsContext;)V" line="968"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitColumns" desc="(Lksql/KsqlGrammarParser$ColumnsContext;)V" line="974"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTableName" desc="(Lksql/KsqlGrammarParser$TableNameContext;)V" line="980"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTableName" desc="(Lksql/KsqlGrammarParser$TableNameContext;)V" line="986"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterExpression" desc="(Lksql/KsqlGrammarParser$ExpressionContext;)V" line="992"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitExpression" desc="(Lksql/KsqlGrammarParser$ExpressionContext;)V" line="998"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLogicalNot" desc="(Lksql/KsqlGrammarParser$LogicalNotContext;)V" line="1004"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLogicalNot" desc="(Lksql/KsqlGrammarParser$LogicalNotContext;)V" line="1010"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterBooleanDefault" desc="(Lksql/KsqlGrammarParser$BooleanDefaultContext;)V" line="1016"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBooleanDefault" desc="(Lksql/KsqlGrammarParser$BooleanDefaultContext;)V" line="1022"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLogicalBinary" desc="(Lksql/KsqlGrammarParser$LogicalBinaryContext;)V" line="1028"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLogicalBinary" desc="(Lksql/KsqlGrammarParser$LogicalBinaryContext;)V" line="1034"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterPredicated" desc="(Lksql/KsqlGrammarParser$PredicatedContext;)V" line="1040"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitPredicated" desc="(Lksql/KsqlGrammarParser$PredicatedContext;)V" line="1046"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterComparison" desc="(Lksql/KsqlGrammarParser$ComparisonContext;)V" line="1052"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitComparison" desc="(Lksql/KsqlGrammarParser$ComparisonContext;)V" line="1058"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterBetween" desc="(Lksql/KsqlGrammarParser$BetweenContext;)V" line="1064"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBetween" desc="(Lksql/KsqlGrammarParser$BetweenContext;)V" line="1070"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterInList" desc="(Lksql/KsqlGrammarParser$InListContext;)V" line="1076"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitInList" desc="(Lksql/KsqlGrammarParser$InListContext;)V" line="1082"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLike" desc="(Lksql/KsqlGrammarParser$LikeContext;)V" line="1088"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLike" desc="(Lksql/KsqlGrammarParser$LikeContext;)V" line="1094"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterNullPredicate" desc="(Lksql/KsqlGrammarParser$NullPredicateContext;)V" line="1100"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitNullPredicate" desc="(Lksql/KsqlGrammarParser$NullPredicateContext;)V" line="1106"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDistinctFrom" desc="(Lksql/KsqlGrammarParser$DistinctFromContext;)V" line="1112"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDistinctFrom" desc="(Lksql/KsqlGrammarParser$DistinctFromContext;)V" line="1118"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterValueExpressionDefault" desc="(Lksql/KsqlGrammarParser$ValueExpressionDefaultContext;)V" line="1124"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitValueExpressionDefault" desc="(Lksql/KsqlGrammarParser$ValueExpressionDefaultContext;)V" line="1130"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterConcatenation" desc="(Lksql/KsqlGrammarParser$ConcatenationContext;)V" line="1136"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitConcatenation" desc="(Lksql/KsqlGrammarParser$ConcatenationContext;)V" line="1142"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterArithmeticBinary" desc="(Lksql/KsqlGrammarParser$ArithmeticBinaryContext;)V" line="1148"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitArithmeticBinary" desc="(Lksql/KsqlGrammarParser$ArithmeticBinaryContext;)V" line="1154"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterArithmeticUnary" desc="(Lksql/KsqlGrammarParser$ArithmeticUnaryContext;)V" line="1160"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitArithmeticUnary" desc="(Lksql/KsqlGrammarParser$ArithmeticUnaryContext;)V" line="1166"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterAtTimeZone" desc="(Lksql/KsqlGrammarParser$AtTimeZoneContext;)V" line="1172"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitAtTimeZone" desc="(Lksql/KsqlGrammarParser$AtTimeZoneContext;)V" line="1178"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDereference" desc="(Lksql/KsqlGrammarParser$DereferenceContext;)V" line="1184"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDereference" desc="(Lksql/KsqlGrammarParser$DereferenceContext;)V" line="1190"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSimpleCase" desc="(Lksql/KsqlGrammarParser$SimpleCaseContext;)V" line="1196"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSimpleCase" desc="(Lksql/KsqlGrammarParser$SimpleCaseContext;)V" line="1202"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterColumnReference" desc="(Lksql/KsqlGrammarParser$ColumnReferenceContext;)V" line="1208"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitColumnReference" desc="(Lksql/KsqlGrammarParser$ColumnReferenceContext;)V" line="1214"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSubscript" desc="(Lksql/KsqlGrammarParser$SubscriptContext;)V" line="1220"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSubscript" desc="(Lksql/KsqlGrammarParser$SubscriptContext;)V" line="1226"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterStructConstructor" desc="(Lksql/KsqlGrammarParser$StructConstructorContext;)V" line="1232"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitStructConstructor" desc="(Lksql/KsqlGrammarParser$StructConstructorContext;)V" line="1238"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTypeConstructor" desc="(Lksql/KsqlGrammarParser$TypeConstructorContext;)V" line="1244"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTypeConstructor" desc="(Lksql/KsqlGrammarParser$TypeConstructorContext;)V" line="1250"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterQualifiedColumnReference" desc="(Lksql/KsqlGrammarParser$QualifiedColumnReferenceContext;)V" line="1256"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitQualifiedColumnReference" desc="(Lksql/KsqlGrammarParser$QualifiedColumnReferenceContext;)V" line="1262"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterCast" desc="(Lksql/KsqlGrammarParser$CastContext;)V" line="1268"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCast" desc="(Lksql/KsqlGrammarParser$CastContext;)V" line="1274"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterParenthesizedExpression" desc="(Lksql/KsqlGrammarParser$ParenthesizedExpressionContext;)V" line="1280"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitParenthesizedExpression" desc="(Lksql/KsqlGrammarParser$ParenthesizedExpressionContext;)V" line="1286"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterArrayConstructor" desc="(Lksql/KsqlGrammarParser$ArrayConstructorContext;)V" line="1292"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitArrayConstructor" desc="(Lksql/KsqlGrammarParser$ArrayConstructorContext;)V" line="1298"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterMapConstructor" desc="(Lksql/KsqlGrammarParser$MapConstructorContext;)V" line="1304"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitMapConstructor" desc="(Lksql/KsqlGrammarParser$MapConstructorContext;)V" line="1310"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterFunctionCall" desc="(Lksql/KsqlGrammarParser$FunctionCallContext;)V" line="1316"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitFunctionCall" desc="(Lksql/KsqlGrammarParser$FunctionCallContext;)V" line="1322"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSearchedCase" desc="(Lksql/KsqlGrammarParser$SearchedCaseContext;)V" line="1328"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSearchedCase" desc="(Lksql/KsqlGrammarParser$SearchedCaseContext;)V" line="1334"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLiteralExpression" desc="(Lksql/KsqlGrammarParser$LiteralExpressionContext;)V" line="1340"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLiteralExpression" desc="(Lksql/KsqlGrammarParser$LiteralExpressionContext;)V" line="1346"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterFunctionArgument" desc="(Lksql/KsqlGrammarParser$FunctionArgumentContext;)V" line="1352"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitFunctionArgument" desc="(Lksql/KsqlGrammarParser$FunctionArgumentContext;)V" line="1358"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTimeZoneString" desc="(Lksql/KsqlGrammarParser$TimeZoneStringContext;)V" line="1364"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTimeZoneString" desc="(Lksql/KsqlGrammarParser$TimeZoneStringContext;)V" line="1370"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterComparisonOperator" desc="(Lksql/KsqlGrammarParser$ComparisonOperatorContext;)V" line="1376"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitComparisonOperator" desc="(Lksql/KsqlGrammarParser$ComparisonOperatorContext;)V" line="1382"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterBooleanValue" desc="(Lksql/KsqlGrammarParser$BooleanValueContext;)V" line="1388"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBooleanValue" desc="(Lksql/KsqlGrammarParser$BooleanValueContext;)V" line="1394"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterType" desc="(Lksql/KsqlGrammarParser$TypeContext;)V" line="1400"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitType" desc="(Lksql/KsqlGrammarParser$TypeContext;)V" line="1406"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTypeParameter" desc="(Lksql/KsqlGrammarParser$TypeParameterContext;)V" line="1412"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTypeParameter" desc="(Lksql/KsqlGrammarParser$TypeParameterContext;)V" line="1418"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterBaseType" desc="(Lksql/KsqlGrammarParser$BaseTypeContext;)V" line="1424"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBaseType" desc="(Lksql/KsqlGrammarParser$BaseTypeContext;)V" line="1430"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterWhenClause" desc="(Lksql/KsqlGrammarParser$WhenClauseContext;)V" line="1436"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWhenClause" desc="(Lksql/KsqlGrammarParser$WhenClauseContext;)V" line="1442"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterVariableIdentifier" desc="(Lksql/KsqlGrammarParser$VariableIdentifierContext;)V" line="1448"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitVariableIdentifier" desc="(Lksql/KsqlGrammarParser$VariableIdentifierContext;)V" line="1454"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterUnquotedIdentifier" desc="(Lksql/KsqlGrammarParser$UnquotedIdentifierContext;)V" line="1460"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitUnquotedIdentifier" desc="(Lksql/KsqlGrammarParser$UnquotedIdentifierContext;)V" line="1466"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterQuotedIdentifierAlternative" desc="(Lksql/KsqlGrammarParser$QuotedIdentifierAlternativeContext;)V" line="1472"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitQuotedIdentifierAlternative" desc="(Lksql/KsqlGrammarParser$QuotedIdentifierAlternativeContext;)V" line="1478"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterBackQuotedIdentifier" desc="(Lksql/KsqlGrammarParser$BackQuotedIdentifierContext;)V" line="1484"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBackQuotedIdentifier" desc="(Lksql/KsqlGrammarParser$BackQuotedIdentifierContext;)V" line="1490"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDigitIdentifier" desc="(Lksql/KsqlGrammarParser$DigitIdentifierContext;)V" line="1496"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDigitIdentifier" desc="(Lksql/KsqlGrammarParser$DigitIdentifierContext;)V" line="1502"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterLambda" desc="(Lksql/KsqlGrammarParser$LambdaContext;)V" line="1508"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitLambda" desc="(Lksql/KsqlGrammarParser$LambdaContext;)V" line="1514"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterVariableName" desc="(Lksql/KsqlGrammarParser$VariableNameContext;)V" line="1520"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitVariableName" desc="(Lksql/KsqlGrammarParser$VariableNameContext;)V" line="1526"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterVariableValue" desc="(Lksql/KsqlGrammarParser$VariableValueContext;)V" line="1532"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitVariableValue" desc="(Lksql/KsqlGrammarParser$VariableValueContext;)V" line="1538"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterSourceName" desc="(Lksql/KsqlGrammarParser$SourceNameContext;)V" line="1544"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitSourceName" desc="(Lksql/KsqlGrammarParser$SourceNameContext;)V" line="1550"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterDecimalLiteral" desc="(Lksql/KsqlGrammarParser$DecimalLiteralContext;)V" line="1556"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitDecimalLiteral" desc="(Lksql/KsqlGrammarParser$DecimalLiteralContext;)V" line="1562"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterFloatLiteral" desc="(Lksql/KsqlGrammarParser$FloatLiteralContext;)V" line="1568"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitFloatLiteral" desc="(Lksql/KsqlGrammarParser$FloatLiteralContext;)V" line="1574"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterIntegerLiteral" desc="(Lksql/KsqlGrammarParser$IntegerLiteralContext;)V" line="1580"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitIntegerLiteral" desc="(Lksql/KsqlGrammarParser$IntegerLiteralContext;)V" line="1586"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterNullLiteral" desc="(Lksql/KsqlGrammarParser$NullLiteralContext;)V" line="1592"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitNullLiteral" desc="(Lksql/KsqlGrammarParser$NullLiteralContext;)V" line="1598"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterNumericLiteral" desc="(Lksql/KsqlGrammarParser$NumericLiteralContext;)V" line="1604"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitNumericLiteral" desc="(Lksql/KsqlGrammarParser$NumericLiteralContext;)V" line="1610"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterBooleanLiteral" desc="(Lksql/KsqlGrammarParser$BooleanLiteralContext;)V" line="1616"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBooleanLiteral" desc="(Lksql/KsqlGrammarParser$BooleanLiteralContext;)V" line="1622"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterStringLiteral" desc="(Lksql/KsqlGrammarParser$StringLiteralContext;)V" line="1628"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitStringLiteral" desc="(Lksql/KsqlGrammarParser$StringLiteralContext;)V" line="1634"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterVariableLiteral" desc="(Lksql/KsqlGrammarParser$VariableLiteralContext;)V" line="1640"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitVariableLiteral" desc="(Lksql/KsqlGrammarParser$VariableLiteralContext;)V" line="1646"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterNonReserved" desc="(Lksql/KsqlGrammarParser$NonReservedContext;)V" line="1652"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitNonReserved" desc="(Lksql/KsqlGrammarParser$NonReservedContext;)V" line="1658"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterEveryRule" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;)V" line="1665"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitEveryRule" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;)V" line="1671"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitTerminal" desc="(Lorg/antlr/v4/runtime/tree/TerminalNode;)V" line="1677"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitErrorNode" desc="(Lorg/antlr/v4/runtime/tree/ErrorNode;)V" line="1683"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="281" covered="0"/><counter type="LINE" missed="279" covered="0"/><counter type="COMPLEXITY" missed="279" covered="0"/><counter type="METHOD" missed="279" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TableElementContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="2837"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lksql/KsqlGrammarParser$TypeContext;" line="2840"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columnConstraints" desc="()Lksql/KsqlGrammarParser$ColumnConstraintsContext;" line="2843"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2846"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2848"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2851"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2855"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$ArrayConstructorContext" sourcefilename="KsqlGrammarParser.java"><method name="ARRAY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6041"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Ljava/util/List;" line="6043"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="(I)Lksql/KsqlGrammarParser$ExpressionContext;" line="6046"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6048"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6051"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6055"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$StructConstructorContext" sourcefilename="KsqlGrammarParser.java"><method name="STRUCT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5943"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Ljava/util/List;" line="5945"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="(I)Lksql/KsqlGrammarParser$IdentifierContext;" line="5948"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASSIGN" desc="()Ljava/util/List;" line="5950"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASSIGN" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5952"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Ljava/util/List;" line="5955"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="(I)Lksql/KsqlGrammarParser$ExpressionContext;" line="5958"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5960"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5963"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5967"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$WithinExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4569"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4571"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="4573"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$WithinExpressionContext;)V" line="4575"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ColumnReferenceContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="5909"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5911"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5914"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5918"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListFunctionsContext" sourcefilename="KsqlGrammarParser.java"><method name="FUNCTIONS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="911"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="912"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="913"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="914"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="917"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="921"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TypeConstructorContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="5973"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5975"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5976"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5979"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5983"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LogicalBinaryContext" sourcefilename="KsqlGrammarParser.java"><method name="booleanExpression" desc="()Ljava/util/List;" line="5044"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="(I)Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="5047"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AND" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5049"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5050"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$BooleanExpressionContext;)V" line="5051"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5054"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5058"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BooleanValueContext" sourcefilename="KsqlGrammarParser.java"><method name="TRUE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6750"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FALSE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6751"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="6753"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="6755"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6758"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6762"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$JoinWindowSizeContext" sourcefilename="KsqlGrammarParser.java"><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="4691"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="4694"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4697"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4699"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4702"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4706"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$QueryStatementContext" sourcefilename="KsqlGrammarParser.java"><method name="query" desc="()Lksql/KsqlGrammarParser$QueryContext;" line="660"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="662"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="665"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="669"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarLexer" sourcefilename="KsqlGrammarLexer.java"><method name="makeRuleNames" desc="()[Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="711"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLiteralNames" desc="()[Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="647"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSymbolicNames" desc="()[Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="703"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenNames" desc="()[Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVocabulary" desc="()Lorg/antlr/v4/runtime/Vocabulary;" line="174"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/CharStream;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGrammarFileName" desc="()Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleNames" desc="()[Ljava/lang/String;" line="192"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializedATN" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChannelNames" desc="()[Ljava/lang/String;" line="198"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModeNames" desc="()[Ljava/lang/String;" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getATN" desc="()Lorg/antlr/v4/runtime/atn/ATN;" line="204"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="2177"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="8" covered="27"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$TablePropertiesContext" sourcefilename="KsqlGrammarParser.java"><method name="tableProperty" desc="()Ljava/util/List;" line="2980"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperty" desc="(I)Lksql/KsqlGrammarParser$TablePropertyContext;" line="2983"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2986"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2988"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2991"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2995"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$LambdaFunctionContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7358"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="7360"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="7362"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$LambdaFunctionContext;)V" line="7364"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$AtTimeZoneContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5677"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5679"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeZoneSpecifier" desc="()Lksql/KsqlGrammarParser$TimeZoneSpecifierContext;" line="5681"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;)V" line="5683"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5686"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5690"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$PrimaryExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5848"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5850"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5852"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5854"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$InnerJoinContext" sourcefilename="KsqlGrammarParser.java"><method name="INNER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4407"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$JoinTypeContext;)V" line="4408"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4411"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4415"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$VariableLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="VARIABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7791"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$LiteralContext;)V" line="7792"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7795"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7799"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$VariableIdentifierContext" sourcefilename="KsqlGrammarParser.java"><method name="VARIABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7175"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$IdentifierContext;)V" line="7176"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7179"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7183"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListQueriesContext" sourcefilename="KsqlGrammarParser.java"><method name="QUERIES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="622"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="623"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="624"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXTENDED" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="625"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="626"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="629"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="633"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$WindowExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="tumblingWindowExpression" desc="()Lksql/KsqlGrammarParser$TumblingWindowExpressionContext;" line="3428"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hoppingWindowExpression" desc="()Lksql/KsqlGrammarParser$HoppingWindowExpressionContext;" line="3431"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sessionWindowExpression" desc="()Lksql/KsqlGrammarParser$SessionWindowExpressionContext;" line="3434"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IDENTIFIER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3436"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3438"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3440"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3443"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3447"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TestStatementContext" sourcefilename="KsqlGrammarParser.java"><method name="singleStatement" desc="()Lksql/KsqlGrammarParser$SingleStatementContext;" line="257"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertStatement" desc="()Lksql/KsqlGrammarParser$AssertStatementContext;" line="260"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runScript" desc="()Lksql/KsqlGrammarParser$RunScriptContext;" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EOF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="265"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="267"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="272"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="276"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$AssertTableContext" sourcefilename="KsqlGrammarParser.java"><method name="ASSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2238"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2239"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="2241"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableElements" desc="()Lksql/KsqlGrammarParser$TableElementsContext;" line="2244"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2246"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="2248"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$AssertStatementContext;)V" line="2250"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2253"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2257"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$GroupByContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Ljava/util/List;" line="3837"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="3840"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3843"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3845"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3848"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3852"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$InsertIntoContext" sourcefilename="KsqlGrammarParser.java"><method name="INSERT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="943"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="INTO" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="944"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="946"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lksql/KsqlGrammarParser$QueryContext;" line="949"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="951"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="953"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="955"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="958"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="962"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DereferenceContext" sourcefilename="KsqlGrammarParser.java"><method name="STRUCT_FIELD_REF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5861"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryExpression" desc="()Lksql/KsqlGrammarParser$PrimaryExpressionContext;" line="5863"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="5866"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5868"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5871"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5875"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$JoinWindowContext" sourcefilename="KsqlGrammarParser.java"><method name="WITHIN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4525"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withinExpression" desc="()Lksql/KsqlGrammarParser$WithinExpressionContext;" line="4527"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4530"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4532"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4535"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4539"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$UndefineVariableContext" sourcefilename="KsqlGrammarParser.java"><method name="UNDEFINE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1080"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableName" desc="()Lksql/KsqlGrammarParser$VariableNameContext;" line="1082"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1084"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1087"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1091"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ValuesContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Ljava/util/List;" line="4039"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="4042"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4045"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4047"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4050"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4054"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$NullPredicateContext" sourcefilename="KsqlGrammarParser.java"><method name="IS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5374"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NULL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5375"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5376"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5377"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5380"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5384"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DropTableContext" sourcefilename="KsqlGrammarParser.java"><method name="DROP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="855"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="856"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="858"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="860"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="861"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DELETE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="862"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TOPIC" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="863"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="864"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="867"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="871"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="1"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$AssertStatementContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2176"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="2180"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$AssertStatementContext;)V" line="2182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$MapConstructorContext" sourcefilename="KsqlGrammarParser.java"><method name="MAP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6060"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Ljava/util/List;" line="6062"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="(I)Lksql/KsqlGrammarParser$ExpressionContext;" line="6065"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASSIGN" desc="()Ljava/util/List;" line="6067"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASSIGN" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6069"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6071"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6074"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6078"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$RelationContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4228"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4230"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="4232"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$RelationContext;)V" line="4234"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$CreateTableAsContext" sourcefilename="KsqlGrammarParser.java"><method name="CREATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="704"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="705"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="707"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="709"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Lksql/KsqlGrammarParser$QueryContext;" line="711"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="713"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="REPLACE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="714"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="715"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="716"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="717"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="718"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="720"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="722"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="725"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="729"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DistinctFromContext" sourcefilename="KsqlGrammarParser.java"><method name="IS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5335"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DISTINCT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FROM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5337"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5339"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5341"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5342"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5345"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5349"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ValueExpressionDefaultContext" sourcefilename="KsqlGrammarParser.java"><method name="primaryExpression" desc="()Lksql/KsqlGrammarParser$PrimaryExpressionContext;" line="5597"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;)V" line="5599"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5602"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5606"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DropTypeContext" sourcefilename="KsqlGrammarParser.java"><method name="DROP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1026"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TYPE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1027"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="1029"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1031"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1032"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1033"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1036"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1040"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ColumnsContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Ljava/util/List;" line="4844"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="(I)Lksql/KsqlGrammarParser$IdentifierContext;" line="4847"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4850"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4852"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4855"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4859"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$RelationPrimaryContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4908"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4910"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="4912"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$RelationPrimaryContext;)V" line="4914"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LeftJoinContext" sourcefilename="KsqlGrammarParser.java"><method name="LEFT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4420"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OUTER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4421"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$JoinTypeContext;)V" line="4422"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4425"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4429"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BackQuotedIdentifierContext" sourcefilename="KsqlGrammarParser.java"><method name="BACKQUOTED_IDENTIFIER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$IdentifierContext;)V" line="7189"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7192"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7196"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$JoinWindowWithBeforeAndAfterContext" sourcefilename="KsqlGrammarParser.java"><method name="joinWindowSize" desc="()Ljava/util/List;" line="4599"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinWindowSize" desc="(I)Lksql/KsqlGrammarParser$JoinWindowSizeContext;" line="4602"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gracePeriodClause" desc="()Lksql/KsqlGrammarParser$GracePeriodClauseContext;" line="4605"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$WithinExpressionContext;)V" line="4607"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4610"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4614"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LogicalNotContext" sourcefilename="KsqlGrammarParser.java"><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5009"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="()Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="5011"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$BooleanExpressionContext;)V" line="5013"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5016"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5020"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BaseTypeContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="7071"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7074"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="7076"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7079"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7083"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$SelectSingleContext" sourcefilename="KsqlGrammarParser.java"><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="4139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="4142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4144"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$SelectItemContext;)V" line="4145"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4148"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4152"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$FunctionArgumentContext" sourcefilename="KsqlGrammarParser.java"><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="6589"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="6592"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="6595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="6597"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6600"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6604"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ArithmeticUnaryContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5660"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5662"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5663"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;)V" line="5664"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5667"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5671"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SourceNameContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="7584"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7587"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="7589"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7592"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7596"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$SelectAllContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="4123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASTERISK" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$SelectItemContext;)V" line="4126"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4129"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$CreateConnectorContext" sourcefilename="KsqlGrammarParser.java"><method name="CREATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="734"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CONNECTOR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="735"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="737"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="739"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="741"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SINK" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="743"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SOURCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="744"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="745"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="746"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="747"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="748"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="751"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="755"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$GracePeriodClauseContext" sourcefilename="KsqlGrammarParser.java"><method name="GRACE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3376"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PERIOD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3377"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="3379"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="3382"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3385"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3387"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3390"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3394"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$UnsetPropertyContext" sourcefilename="KsqlGrammarParser.java"><method name="UNSET" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="535"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="536"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="537"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="540"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="544"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$AlterOptionContext" sourcefilename="KsqlGrammarParser.java"><method name="ADD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2713"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="2715"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lksql/KsqlGrammarParser$TypeContext;" line="2718"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COLUMN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2720"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2722"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2724"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2727"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2731"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListTopicsContext" sourcefilename="KsqlGrammarParser.java"><method name="TOPICS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="605"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="606"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="607"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ALL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="608"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXTENDED" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="609"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="610"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="613"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="617"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$StatementsContext" sourcefilename="KsqlGrammarParser.java"><method name="EOF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="197"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleStatement" desc="()Ljava/util/List;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleStatement" desc="(I)Lksql/KsqlGrammarParser$SingleStatementContext;" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="205"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="207"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="210"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="214"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="9"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$StringLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7778"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$LiteralContext;)V" line="7779"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7782"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7786"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$JoinCriteriaContext" sourcefilename="KsqlGrammarParser.java"><method name="ON" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4735"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="()Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="4737"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4740"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4742"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4745"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4749"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ExplainContext" sourcefilename="KsqlGrammarParser.java"><method name="EXPLAIN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="statement" desc="()Lksql/KsqlGrammarParser$StatementContext;" line="488"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="491"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="493"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="496"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="500"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TimeZoneSpecifierContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="6645"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="6647"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="6649"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$TimeZoneSpecifierContext;)V" line="6651"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TableNameContext" sourcefilename="KsqlGrammarParser.java"><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="4920"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$RelationPrimaryContext;)V" line="4922"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4925"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4929"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DecimalLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="DECIMAL_VALUE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7635"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7636"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$NumberContext;)V" line="7637"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7640"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7644"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TumblingWindowExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="TUMBLING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3507"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SIZE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3508"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="3510"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="3513"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retentionClause" desc="()Lksql/KsqlGrammarParser$RetentionClauseContext;" line="3516"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gracePeriodClause" desc="()Lksql/KsqlGrammarParser$GracePeriodClauseContext;" line="3519"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3522"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3524"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3527"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3531"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$PartitionByContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Ljava/util/List;" line="3938"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="3941"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3944"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3946"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3949"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3953"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DropConnectorContext" sourcefilename="KsqlGrammarParser.java"><method name="DROP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="876"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CONNECTOR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="877"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="879"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="881"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="882"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="883"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="886"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="890"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ParenthesizedExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="6027"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6029"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6032"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6036"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SimpleCaseContext" sourcefilename="KsqlGrammarParser.java"><method name="CASE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5881"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5883"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="END" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5885"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenClause" desc="()Ljava/util/List;" line="5887"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenClause" desc="(I)Lksql/KsqlGrammarParser$WhenClauseContext;" line="5890"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ELSE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5892"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="5894"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5896"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5899"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5903"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$UnquotedIdentifierContext" sourcefilename="KsqlGrammarParser.java"><method name="IDENTIFIER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7227"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nonReserved" desc="()Lksql/KsqlGrammarParser$NonReservedContext;" line="7229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$IdentifierContext;)V" line="7231"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7234"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7238"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$LikeContext" sourcefilename="KsqlGrammarParser.java"><method name="LIKE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5315"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5317"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5319"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ESCAPE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5320"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5321"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5322"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5325"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5329"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="booleanExpression" desc="()Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="4958"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4961"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4963"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4966"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4970"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TypeContext" sourcefilename="KsqlGrammarParser.java"><method name="ARRAY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6798"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6799"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Ljava/util/List;" line="6801"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="(I)Lksql/KsqlGrammarParser$TypeContext;" line="6804"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6806"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MAP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6807"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRUCT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6808"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Ljava/util/List;" line="6810"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="(I)Lksql/KsqlGrammarParser$IdentifierContext;" line="6813"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DECIMAL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6815"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Ljava/util/List;" line="6817"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="(I)Lksql/KsqlGrammarParser$NumberContext;" line="6820"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="baseType" desc="()Lksql/KsqlGrammarParser$BaseTypeContext;" line="6823"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeParameter" desc="()Ljava/util/List;" line="6826"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeParameter" desc="(I)Lksql/KsqlGrammarParser$TypeParameterContext;" line="6829"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="6832"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="6834"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6837"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6841"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="20" covered="2"/><counter type="COMPLEXITY" missed="20" covered="1"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$ShowColumnsContext" sourcefilename="KsqlGrammarParser.java"><method name="DESCRIBE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="838"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="840"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXTENDED" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="842"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="843"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="846"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="850"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DigitIdentifierContext" sourcefilename="KsqlGrammarParser.java"><method name="DIGIT_IDENTIFIER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$IdentifierContext;)V" line="7215"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7218"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7222"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$QuotedIdentifierAlternativeContext" sourcefilename="KsqlGrammarParser.java"><method name="QUOTED_IDENTIFIER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7201"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$IdentifierContext;)V" line="7202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7205"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7209"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$BooleanExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4998"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5000"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5002"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$BooleanExpressionContext;)V" line="5004"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$DescribeStreamsContext" sourcefilename="KsqlGrammarParser.java"><method name="DESCRIBE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STREAMS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXTENDED" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="1123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1130"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7754"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="7756"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="7758"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$LiteralContext;)V" line="7760"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$RetentionClauseContext" sourcefilename="KsqlGrammarParser.java"><method name="RETENTION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Lksql/KsqlGrammarParser$NumberContext;" line="3330"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Lksql/KsqlGrammarParser$WindowUnitContext;" line="3333"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3338"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3341"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3345"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$QualifiedColumnReferenceContext" sourcefilename="KsqlGrammarParser.java"><method name="identifier" desc="()Ljava/util/List;" line="5989"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="(I)Lksql/KsqlGrammarParser$IdentifierContext;" line="5992"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="5994"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5997"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6001"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$OuterJoinContext" sourcefilename="KsqlGrammarParser.java"><method name="FULL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4434"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OUTER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4435"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$JoinTypeContext;)V" line="4436"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4439"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4443"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$StatementContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="439"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="441"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="443"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="445"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$FloatLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="FLOATING_POINT_VALUE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7649"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7650"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$NumberContext;)V" line="7651"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7654"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7658"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$RunScriptContext" sourcefilename="KsqlGrammarParser.java"><method name="RUN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2430"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SCRIPT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2431"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2432"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2434"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2436"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2439"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2443"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$VariableValueContext" sourcefilename="KsqlGrammarParser.java"><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7545"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7547"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="7549"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7552"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7556"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$HoppingWindowExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="HOPPING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3593"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SIZE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3594"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="()Ljava/util/List;" line="3596"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="number" desc="(I)Lksql/KsqlGrammarParser$NumberContext;" line="3599"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="()Ljava/util/List;" line="3602"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowUnit" desc="(I)Lksql/KsqlGrammarParser$WindowUnitContext;" line="3605"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ADVANCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3607"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BY" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3608"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retentionClause" desc="()Lksql/KsqlGrammarParser$RetentionClauseContext;" line="3610"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gracePeriodClause" desc="()Lksql/KsqlGrammarParser$GracePeriodClauseContext;" line="3613"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3616"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="3618"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3621"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3625"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListTablesContext" sourcefilename="KsqlGrammarParser.java"><method name="TABLES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="450"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="451"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="452"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXTENDED" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="453"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="454"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="457"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="461"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$JoinTypeContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4396"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4398"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="4400"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$JoinTypeContext;)V" line="4402"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SingleJoinWindowContext" sourcefilename="KsqlGrammarParser.java"><method name="joinWindowSize" desc="()Lksql/KsqlGrammarParser$JoinWindowSizeContext;" line="4581"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gracePeriodClause" desc="()Lksql/KsqlGrammarParser$GracePeriodClauseContext;" line="4584"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$WithinExpressionContext;)V" line="4586"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4589"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4593"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$SingleExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="expression" desc="()Lksql/KsqlGrammarParser$ExpressionContext;" line="396"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EOF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="398"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="400"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="402"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="405"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="409"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$PredicatedContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5226"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicate" desc="()Lksql/KsqlGrammarParser$PredicateContext;" line="5229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5232"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5234"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5237"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5241"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$RelationDefaultContext" sourcefilename="KsqlGrammarParser.java"><method name="aliasedRelation" desc="()Lksql/KsqlGrammarParser$AliasedRelationContext;" line="4240"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$RelationContext;)V" line="4242"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4245"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4249"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$QueryContext" sourcefilename="KsqlGrammarParser.java"><method name="SELECT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2477"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectItem" desc="()Ljava/util/List;" line="2479"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectItem" desc="(I)Lksql/KsqlGrammarParser$SelectItemContext;" line="2482"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FROM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2484"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="relation" desc="()Lksql/KsqlGrammarParser$RelationContext;" line="2486"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WINDOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2488"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowExpression" desc="()Lksql/KsqlGrammarParser$WindowExpressionContext;" line="2490"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WHERE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2492"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GROUP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2493"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BY" desc="()Ljava/util/List;" line="2494"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BY" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2496"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="groupBy" desc="()Lksql/KsqlGrammarParser$GroupByContext;" line="2499"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PARTITION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2501"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="partitionBy" desc="()Lksql/KsqlGrammarParser$PartitionByContext;" line="2503"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="HAVING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2505"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EMIT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2506"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultMaterialization" desc="()Lksql/KsqlGrammarParser$ResultMaterializationContext;" line="2508"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="limitClause" desc="()Lksql/KsqlGrammarParser$LimitClauseContext;" line="2511"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="()Ljava/util/List;" line="2514"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="booleanExpression" desc="(I)Lksql/KsqlGrammarParser$BooleanExpressionContext;" line="2517"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2520"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2522"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2525"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2529"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$InListContext" sourcefilename="KsqlGrammarParser.java"><method name="IN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5354"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()Ljava/util/List;" line="5356"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="(I)Lksql/KsqlGrammarParser$ExpressionContext;" line="5359"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5361"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PredicateContext;)V" line="5362"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5365"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5369"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$NullLiteralContext" sourcefilename="KsqlGrammarParser.java"><method name="NULL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7765"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$LiteralContext;)V" line="7766"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7769"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7773"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$CreateTableContext" sourcefilename="KsqlGrammarParser.java"><method name="CREATE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="505"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="506"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="508"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="OR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="510"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="REPLACE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="511"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SOURCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="512"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="IF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="513"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NOT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="514"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EXISTS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="515"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableElements" desc="()Lksql/KsqlGrammarParser$TableElementsContext;" line="517"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="WITH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="519"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableProperties" desc="()Lksql/KsqlGrammarParser$TablePropertiesContext;" line="521"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="523"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="526"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="530"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="1"/><counter type="COMPLEXITY" missed="16" covered="1"/><counter type="METHOD" missed="14" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$ListConnectorsContext" sourcefilename="KsqlGrammarParser.java"><method name="CONNECTORS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="790"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="791"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="792"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SOURCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="793"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SINK" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="795"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="798"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="802"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$VariableNameContext" sourcefilename="KsqlGrammarParser.java"><method name="IDENTIFIER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="7507"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7509"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="7511"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7514"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="7518"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ListTypesContext" sourcefilename="KsqlGrammarParser.java"><method name="TYPES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="549"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LIST" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="550"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SHOW" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="551"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="552"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="555"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="559"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$JoinedSourceContext" sourcefilename="KsqlGrammarParser.java"><method name="joinType" desc="()Lksql/KsqlGrammarParser$JoinTypeContext;" line="4329"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="JOIN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4331"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aliasedRelation" desc="()Lksql/KsqlGrammarParser$AliasedRelationContext;" line="4333"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinCriteria" desc="()Lksql/KsqlGrammarParser$JoinCriteriaContext;" line="4336"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinWindow" desc="()Lksql/KsqlGrammarParser$JoinWindowContext;" line="4339"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4344"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4347"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4351"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$TableElementsContext" sourcefilename="KsqlGrammarParser.java"><method name="tableElement" desc="()Ljava/util/List;" line="2773"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableElement" desc="(I)Lksql/KsqlGrammarParser$TableElementContext;" line="2776"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2779"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2781"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2784"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2788"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$NumberContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="7624"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="7626"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="7628"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$NumberContext;)V" line="7630"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ksql/KsqlGrammarParser$TimeZoneStringContext" sourcefilename="KsqlGrammarParser.java"><method name="TIME" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6656"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ZONE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6657"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="6658"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$TimeZoneSpecifierContext;)V" line="6659"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6662"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6666"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$PrintTopicContext" sourcefilename="KsqlGrammarParser.java"><method name="PRINT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="991"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printClause" desc="()Lksql/KsqlGrammarParser$PrintClauseContext;" line="993"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identifier" desc="()Lksql/KsqlGrammarParser$IdentifierContext;" line="996"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STRING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="998"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="999"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1002"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1006"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ArithmeticBinaryContext" sourcefilename="KsqlGrammarParser.java"><method name="valueExpression" desc="()Ljava/util/List;" line="5636"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueExpression" desc="(I)Lksql/KsqlGrammarParser$ValueExpressionContext;" line="5639"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ASTERISK" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5641"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SLASH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5642"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PERCENT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5643"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5644"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5645"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;)V" line="5646"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5649"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5653"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ResultMaterializationContext" sourcefilename="KsqlGrammarParser.java"><method name="CHANGES" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2665"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FINAL" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2666"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2668"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2670"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2673"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2677"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$LiteralExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="literal" desc="()Lksql/KsqlGrammarParser$LiteralContext;" line="6137"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$PrimaryExpressionContext;)V" line="6139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6142"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="6146"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$ValueExpressionContext" sourcefilename="KsqlGrammarParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5585"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5587"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5589"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lksql/KsqlGrammarParser$ValueExpressionContext;)V" line="5591"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ksql/KsqlGrammarParser$AlterSourceContext" sourcefilename="KsqlGrammarParser.java"><method name="ALTER" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="967"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceName" desc="()Lksql/KsqlGrammarParser$SourceNameContext;" line="969"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alterOption" desc="()Ljava/util/List;" line="972"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alterOption" desc="(I)Lksql/KsqlGrammarParser$AlterOptionContext;" line="975"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STREAM" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="977"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TABLE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="978"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lksql/KsqlGrammarParser$StatementContext;)V" line="979"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="982"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="986"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="KsqlGrammarLexer.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="711" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="647" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="703" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="2"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="9" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="1119" mi="0" ci="4" mb="0" cb="0"/><line nr="1120" mi="0" ci="3" mb="0" cb="0"/><line nr="1122" mi="0" ci="4" mb="0" cb="0"/><line nr="1123" mi="0" ci="8" mb="0" cb="2"/><line nr="1124" mi="0" ci="10" mb="0" cb="0"/><line nr="1126" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="2177"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="8" covered="27"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KsqlGrammarParser.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="247" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="647" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="707" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="2"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="7" ci="0" mb="2" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="2" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="19" mb="2" cb="4"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="2" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="2" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="8" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="4" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="10" ci="0" mb="2" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="6" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="362" mi="7" ci="0" mb="2" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="2" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="8" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="1" ci="0" mb="0" cb="0"/><line nr="383" mi="3" ci="0" mb="0" cb="0"/><line nr="384" mi="5" ci="0" mb="0" cb="0"/><line nr="385" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="5" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="1" ci="0" mb="0" cb="0"/><line nr="409" mi="7" ci="0" mb="2" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="414" mi="8" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="5" ci="0" mb="0" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="2" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="451" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="5" ci="0" mb="0" cb="0"/><line nr="454" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="7" ci="0" mb="2" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="7" ci="0" mb="2" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="5" ci="0" mb="0" cb="0"/><line nr="472" mi="6" ci="0" mb="0" cb="0"/><line nr="474" mi="6" ci="0" mb="0" cb="0"/><line nr="477" mi="7" ci="0" mb="2" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="481" mi="7" ci="0" mb="2" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="6" ci="0" mb="0" cb="0"/><line nr="491" mi="6" ci="0" mb="0" cb="0"/><line nr="493" mi="6" ci="0" mb="0" cb="0"/><line nr="496" mi="7" ci="0" mb="2" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="500" mi="7" ci="0" mb="2" cb="0"/><line nr="501" mi="1" ci="0" mb="0" cb="0"/><line nr="505" mi="5" ci="0" mb="0" cb="0"/><line nr="506" mi="5" ci="0" mb="0" cb="0"/><line nr="508" mi="6" ci="0" mb="0" cb="0"/><line nr="510" mi="5" ci="0" mb="0" cb="0"/><line nr="511" mi="5" ci="0" mb="0" cb="0"/><line nr="512" mi="5" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="515" mi="5" ci="0" mb="0" cb="0"/><line nr="517" mi="6" ci="0" mb="0" cb="0"/><line nr="519" mi="5" ci="0" mb="0" cb="0"/><line nr="521" mi="6" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="6" mb="0" cb="0"/><line nr="526" mi="7" ci="0" mb="2" cb="0"/><line nr="527" mi="1" ci="0" mb="0" cb="0"/><line nr="530" mi="7" ci="0" mb="2" cb="0"/><line nr="531" mi="1" ci="0" mb="0" cb="0"/><line nr="535" mi="5" ci="0" mb="0" cb="0"/><line nr="536" mi="5" ci="0" mb="0" cb="0"/><line nr="537" mi="6" ci="0" mb="0" cb="0"/><line nr="540" mi="7" ci="0" mb="2" cb="0"/><line nr="541" mi="1" ci="0" mb="0" cb="0"/><line nr="544" mi="7" ci="0" mb="2" cb="0"/><line nr="545" mi="1" ci="0" mb="0" cb="0"/><line nr="549" mi="5" ci="0" mb="0" cb="0"/><line nr="550" mi="5" ci="0" mb="0" cb="0"/><line nr="551" mi="5" ci="0" mb="0" cb="0"/><line nr="552" mi="6" ci="0" mb="0" cb="0"/><line nr="555" mi="7" ci="0" mb="2" cb="0"/><line nr="556" mi="1" ci="0" mb="0" cb="0"/><line nr="559" mi="7" ci="0" mb="2" cb="0"/><line nr="560" mi="1" ci="0" mb="0" cb="0"/><line nr="564" mi="5" ci="0" mb="0" cb="0"/><line nr="565" mi="5" ci="0" mb="0" cb="0"/><line nr="567" mi="6" ci="0" mb="0" cb="0"/><line nr="569" mi="6" ci="0" mb="0" cb="0"/><line nr="572" mi="7" ci="0" mb="2" cb="0"/><line nr="573" mi="1" ci="0" mb="0" cb="0"/><line nr="576" mi="7" ci="0" mb="2" cb="0"/><line nr="577" mi="1" ci="0" mb="0" cb="0"/><line nr="581" mi="5" ci="0" mb="0" cb="0"/><line nr="582" mi="5" ci="0" mb="0" cb="0"/><line nr="584" mi="6" ci="0" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="588" mi="6" ci="0" mb="0" cb="0"/><line nr="590" mi="5" ci="0" mb="0" cb="0"/><line nr="591" mi="5" ci="0" mb="0" cb="0"/><line nr="592" mi="5" ci="0" mb="0" cb="0"/><line nr="593" mi="6" ci="0" mb="0" cb="0"/><line nr="596" mi="7" ci="0" mb="2" cb="0"/><line nr="597" mi="1" ci="0" mb="0" cb="0"/><line nr="600" mi="7" ci="0" mb="2" cb="0"/><line nr="601" mi="1" ci="0" mb="0" cb="0"/><line nr="605" mi="5" ci="0" mb="0" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="607" mi="5" ci="0" mb="0" cb="0"/><line nr="608" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="6" ci="0" mb="0" cb="0"/><line nr="613" mi="7" ci="0" mb="2" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="617" mi="7" ci="0" mb="2" cb="0"/><line nr="618" mi="1" ci="0" mb="0" cb="0"/><line nr="622" mi="5" ci="0" mb="0" cb="0"/><line nr="623" mi="5" ci="0" mb="0" cb="0"/><line nr="624" mi="5" ci="0" mb="0" cb="0"/><line nr="625" mi="5" ci="0" mb="0" cb="0"/><line nr="626" mi="6" ci="0" mb="0" cb="0"/><line nr="629" mi="7" ci="0" mb="2" cb="0"/><line nr="630" mi="1" ci="0" mb="0" cb="0"/><line nr="633" mi="7" ci="0" mb="2" cb="0"/><line nr="634" mi="1" ci="0" mb="0" cb="0"/><line nr="638" mi="5" ci="0" mb="0" cb="0"/><line nr="639" mi="5" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="643" mi="5" ci="0" mb="0" cb="0"/><line nr="644" mi="5" ci="0" mb="0" cb="0"/><line nr="645" mi="5" ci="0" mb="0" cb="0"/><line nr="646" mi="5" ci="0" mb="0" cb="0"/><line nr="647" mi="0" ci="6" mb="0" cb="0"/><line nr="650" mi="7" ci="0" mb="2" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="654" mi="7" ci="0" mb="2" cb="0"/><line nr="655" mi="1" ci="0" mb="0" cb="0"/><line nr="660" mi="6" ci="0" mb="0" cb="0"/><line nr="662" mi="6" ci="0" mb="0" cb="0"/><line nr="665" mi="7" ci="0" mb="2" cb="0"/><line nr="666" mi="1" ci="0" mb="0" cb="0"/><line nr="669" mi="7" ci="0" mb="2" cb="0"/><line nr="670" mi="1" ci="0" mb="0" cb="0"/><line nr="674" mi="5" ci="0" mb="0" cb="0"/><line nr="675" mi="5" ci="0" mb="0" cb="0"/><line nr="677" mi="6" ci="0" mb="0" cb="0"/><line nr="679" mi="5" ci="0" mb="0" cb="0"/><line nr="681" mi="6" ci="0" mb="0" cb="0"/><line nr="683" mi="5" ci="0" mb="0" cb="0"/><line nr="684" mi="5" ci="0" mb="0" cb="0"/><line nr="685" mi="5" ci="0" mb="0" cb="0"/><line nr="686" mi="5" ci="0" mb="0" cb="0"/><line nr="687" mi="5" ci="0" mb="0" cb="0"/><line nr="688" mi="5" ci="0" mb="0" cb="0"/><line nr="690" mi="6" ci="0" mb="0" cb="0"/><line nr="692" mi="6" ci="0" mb="0" cb="0"/><line nr="695" mi="7" ci="0" mb="2" cb="0"/><line nr="696" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="7" ci="0" mb="2" cb="0"/><line nr="700" mi="1" ci="0" mb="0" cb="0"/><line nr="704" mi="5" ci="0" mb="0" cb="0"/><line nr="705" mi="5" ci="0" mb="0" cb="0"/><line nr="707" mi="6" ci="0" mb="0" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="711" mi="6" ci="0" mb="0" cb="0"/><line nr="713" mi="5" ci="0" mb="0" cb="0"/><line nr="714" mi="5" ci="0" mb="0" cb="0"/><line nr="715" mi="5" ci="0" mb="0" cb="0"/><line nr="716" mi="5" ci="0" mb="0" cb="0"/><line nr="717" mi="5" ci="0" mb="0" cb="0"/><line nr="718" mi="5" ci="0" mb="0" cb="0"/><line nr="720" mi="6" ci="0" mb="0" cb="0"/><line nr="722" mi="6" ci="0" mb="0" cb="0"/><line nr="725" mi="7" ci="0" mb="2" cb="0"/><line nr="726" mi="1" ci="0" mb="0" cb="0"/><line nr="729" mi="7" ci="0" mb="2" cb="0"/><line nr="730" mi="1" ci="0" mb="0" cb="0"/><line nr="734" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="5" ci="0" mb="0" cb="0"/><line nr="737" mi="6" ci="0" mb="0" cb="0"/><line nr="739" mi="5" ci="0" mb="0" cb="0"/><line nr="741" mi="6" ci="0" mb="0" cb="0"/><line nr="743" mi="5" ci="0" mb="0" cb="0"/><line nr="744" mi="5" ci="0" mb="0" cb="0"/><line nr="745" mi="5" ci="0" mb="0" cb="0"/><line nr="746" mi="5" ci="0" mb="0" cb="0"/><line nr="747" mi="5" ci="0" mb="0" cb="0"/><line nr="748" mi="6" ci="0" mb="0" cb="0"/><line nr="751" mi="7" ci="0" mb="2" cb="0"/><line nr="752" mi="1" ci="0" mb="0" cb="0"/><line nr="755" mi="7" ci="0" mb="2" cb="0"/><line nr="756" mi="1" ci="0" mb="0" cb="0"/><line nr="760" mi="5" ci="0" mb="0" cb="0"/><line nr="761" mi="5" ci="0" mb="0" cb="0"/><line nr="763" mi="6" ci="0" mb="0" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="5" ci="0" mb="0" cb="0"/><line nr="767" mi="5" ci="0" mb="0" cb="0"/><line nr="768" mi="5" ci="0" mb="0" cb="0"/><line nr="769" mi="5" ci="0" mb="0" cb="0"/><line nr="770" mi="5" ci="0" mb="0" cb="0"/><line nr="772" mi="6" ci="0" mb="0" cb="0"/><line nr="774" mi="5" ci="0" mb="0" cb="0"/><line nr="776" mi="6" ci="0" mb="0" cb="0"/><line nr="778" mi="0" ci="6" mb="0" cb="0"/><line nr="781" mi="7" ci="0" mb="2" cb="0"/><line nr="782" mi="1" ci="0" mb="0" cb="0"/><line nr="785" mi="7" ci="0" mb="2" cb="0"/><line nr="786" mi="1" ci="0" mb="0" cb="0"/><line nr="790" mi="5" ci="0" mb="0" cb="0"/><line nr="791" mi="5" ci="0" mb="0" cb="0"/><line nr="792" mi="5" ci="0" mb="0" cb="0"/><line nr="793" mi="5" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="795" mi="6" ci="0" mb="0" cb="0"/><line nr="798" mi="7" ci="0" mb="2" cb="0"/><line nr="799" mi="1" ci="0" mb="0" cb="0"/><line nr="802" mi="7" ci="0" mb="2" cb="0"/><line nr="803" mi="1" ci="0" mb="0" cb="0"/><line nr="807" mi="5" ci="0" mb="0" cb="0"/><line nr="808" mi="5" ci="0" mb="0" cb="0"/><line nr="809" mi="5" ci="0" mb="0" cb="0"/><line nr="810" mi="6" ci="0" mb="0" cb="0"/><line nr="813" mi="7" ci="0" mb="2" cb="0"/><line nr="814" mi="1" ci="0" mb="0" cb="0"/><line nr="817" mi="7" ci="0" mb="2" cb="0"/><line nr="818" mi="1" ci="0" mb="0" cb="0"/><line nr="822" mi="5" ci="0" mb="0" cb="0"/><line nr="823" mi="5" ci="0" mb="0" cb="0"/><line nr="824" mi="5" ci="0" mb="0" cb="0"/><line nr="825" mi="5" ci="0" mb="0" cb="0"/><line nr="826" mi="0" ci="6" mb="0" cb="0"/><line nr="829" mi="7" ci="0" mb="2" cb="0"/><line nr="830" mi="1" ci="0" mb="0" cb="0"/><line nr="833" mi="7" ci="0" mb="2" cb="0"/><line nr="834" mi="1" ci="0" mb="0" cb="0"/><line nr="838" mi="5" ci="0" mb="0" cb="0"/><line nr="840" mi="6" ci="0" mb="0" cb="0"/><line nr="842" mi="5" ci="0" mb="0" cb="0"/><line nr="843" mi="6" ci="0" mb="0" cb="0"/><line nr="846" mi="7" ci="0" mb="2" cb="0"/><line nr="847" mi="1" ci="0" mb="0" cb="0"/><line nr="850" mi="7" ci="0" mb="2" cb="0"/><line nr="851" mi="1" ci="0" mb="0" cb="0"/><line nr="855" mi="5" ci="0" mb="0" cb="0"/><line nr="856" mi="5" ci="0" mb="0" cb="0"/><line nr="858" mi="6" ci="0" mb="0" cb="0"/><line nr="860" mi="5" ci="0" mb="0" cb="0"/><line nr="861" mi="5" ci="0" mb="0" cb="0"/><line nr="862" mi="5" ci="0" mb="0" cb="0"/><line nr="863" mi="5" ci="0" mb="0" cb="0"/><line nr="864" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="7" ci="0" mb="2" cb="0"/><line nr="868" mi="1" ci="0" mb="0" cb="0"/><line nr="871" mi="7" ci="0" mb="2" cb="0"/><line nr="872" mi="1" ci="0" mb="0" cb="0"/><line nr="876" mi="5" ci="0" mb="0" cb="0"/><line nr="877" mi="5" ci="0" mb="0" cb="0"/><line nr="879" mi="6" ci="0" mb="0" cb="0"/><line nr="881" mi="5" ci="0" mb="0" cb="0"/><line nr="882" mi="5" ci="0" mb="0" cb="0"/><line nr="883" mi="6" ci="0" mb="0" cb="0"/><line nr="886" mi="7" ci="0" mb="2" cb="0"/><line nr="887" mi="1" ci="0" mb="0" cb="0"/><line nr="890" mi="7" ci="0" mb="2" cb="0"/><line nr="891" mi="1" ci="0" mb="0" cb="0"/><line nr="895" mi="5" ci="0" mb="0" cb="0"/><line nr="896" mi="5" ci="0" mb="0" cb="0"/><line nr="897" mi="5" ci="0" mb="0" cb="0"/><line nr="898" mi="5" ci="0" mb="0" cb="0"/><line nr="899" mi="6" ci="0" mb="0" cb="0"/><line nr="902" mi="7" ci="0" mb="2" cb="0"/><line nr="903" mi="1" ci="0" mb="0" cb="0"/><line nr="906" mi="7" ci="0" mb="2" cb="0"/><line nr="907" mi="1" ci="0" mb="0" cb="0"/><line nr="911" mi="5" ci="0" mb="0" cb="0"/><line nr="912" mi="5" ci="0" mb="0" cb="0"/><line nr="913" mi="5" ci="0" mb="0" cb="0"/><line nr="914" mi="6" ci="0" mb="0" cb="0"/><line nr="917" mi="7" ci="0" mb="2" cb="0"/><line nr="918" mi="1" ci="0" mb="0" cb="0"/><line nr="921" mi="7" ci="0" mb="2" cb="0"/><line nr="922" mi="1" ci="0" mb="0" cb="0"/><line nr="926" mi="5" ci="0" mb="0" cb="0"/><line nr="927" mi="5" ci="0" mb="0" cb="0"/><line nr="929" mi="6" ci="0" mb="0" cb="0"/><line nr="931" mi="6" ci="0" mb="0" cb="0"/><line nr="934" mi="7" ci="0" mb="2" cb="0"/><line nr="935" mi="1" ci="0" mb="0" cb="0"/><line nr="938" mi="7" ci="0" mb="2" cb="0"/><line nr="939" mi="1" ci="0" mb="0" cb="0"/><line nr="943" mi="5" ci="0" mb="0" cb="0"/><line nr="944" mi="5" ci="0" mb="0" cb="0"/><line nr="946" mi="6" ci="0" mb="0" cb="0"/><line nr="949" mi="6" ci="0" mb="0" cb="0"/><line nr="951" mi="5" ci="0" mb="0" cb="0"/><line nr="953" mi="6" ci="0" mb="0" cb="0"/><line nr="955" mi="6" ci="0" mb="0" cb="0"/><line nr="958" mi="7" ci="0" mb="2" cb="0"/><line nr="959" mi="1" ci="0" mb="0" cb="0"/><line nr="962" mi="7" ci="0" mb="2" cb="0"/><line nr="963" mi="1" ci="0" mb="0" cb="0"/><line nr="967" mi="5" ci="0" mb="0" cb="0"/><line nr="969" mi="6" ci="0" mb="0" cb="0"/><line nr="972" mi="4" ci="0" mb="0" cb="0"/><line nr="975" mi="6" ci="0" mb="0" cb="0"/><line nr="977" mi="5" ci="0" mb="0" cb="0"/><line nr="978" mi="5" ci="0" mb="0" cb="0"/><line nr="979" mi="6" ci="0" mb="0" cb="0"/><line nr="982" mi="7" ci="0" mb="2" cb="0"/><line nr="983" mi="1" ci="0" mb="0" cb="0"/><line nr="986" mi="7" ci="0" mb="2" cb="0"/><line nr="987" mi="1" ci="0" mb="0" cb="0"/><line nr="991" mi="5" ci="0" mb="0" cb="0"/><line nr="993" mi="6" ci="0" mb="0" cb="0"/><line nr="996" mi="6" ci="0" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="999" mi="6" ci="0" mb="0" cb="0"/><line nr="1002" mi="7" ci="0" mb="2" cb="0"/><line nr="1003" mi="1" ci="0" mb="0" cb="0"/><line nr="1006" mi="7" ci="0" mb="2" cb="0"/><line nr="1007" mi="1" ci="0" mb="0" cb="0"/><line nr="1011" mi="5" ci="0" mb="0" cb="0"/><line nr="1012" mi="5" ci="0" mb="0" cb="0"/><line nr="1013" mi="5" ci="0" mb="0" cb="0"/><line nr="1014" mi="6" ci="0" mb="0" cb="0"/><line nr="1017" mi="7" ci="0" mb="2" cb="0"/><line nr="1018" mi="1" ci="0" mb="0" cb="0"/><line nr="1021" mi="7" ci="0" mb="2" cb="0"/><line nr="1022" mi="1" ci="0" mb="0" cb="0"/><line nr="1026" mi="5" ci="0" mb="0" cb="0"/><line nr="1027" mi="5" ci="0" mb="0" cb="0"/><line nr="1029" mi="6" ci="0" mb="0" cb="0"/><line nr="1031" mi="5" ci="0" mb="0" cb="0"/><line nr="1032" mi="5" ci="0" mb="0" cb="0"/><line nr="1033" mi="6" ci="0" mb="0" cb="0"/><line nr="1036" mi="7" ci="0" mb="2" cb="0"/><line nr="1037" mi="1" ci="0" mb="0" cb="0"/><line nr="1040" mi="7" ci="0" mb="2" cb="0"/><line nr="1041" mi="1" ci="0" mb="0" cb="0"/><line nr="1045" mi="5" ci="0" mb="0" cb="0"/><line nr="1046" mi="4" ci="0" mb="0" cb="0"/><line nr="1048" mi="5" ci="0" mb="0" cb="0"/><line nr="1050" mi="5" ci="0" mb="0" cb="0"/><line nr="1051" mi="6" ci="0" mb="0" cb="0"/><line nr="1054" mi="7" ci="0" mb="2" cb="0"/><line nr="1055" mi="1" ci="0" mb="0" cb="0"/><line nr="1058" mi="7" ci="0" mb="2" cb="0"/><line nr="1059" mi="1" ci="0" mb="0" cb="0"/><line nr="1063" mi="5" ci="0" mb="0" cb="0"/><line nr="1065" mi="6" ci="0" mb="0" cb="0"/><line nr="1067" mi="5" ci="0" mb="0" cb="0"/><line nr="1068" mi="6" ci="0" mb="0" cb="0"/><line nr="1071" mi="7" ci="0" mb="2" cb="0"/><line nr="1072" mi="1" ci="0" mb="0" cb="0"/><line nr="1075" mi="7" ci="0" mb="2" cb="0"/><line nr="1076" mi="1" ci="0" mb="0" cb="0"/><line nr="1080" mi="5" ci="0" mb="0" cb="0"/><line nr="1082" mi="6" ci="0" mb="0" cb="0"/><line nr="1084" mi="6" ci="0" mb="0" cb="0"/><line nr="1087" mi="7" ci="0" mb="2" cb="0"/><line nr="1088" mi="1" ci="0" mb="0" cb="0"/><line nr="1091" mi="7" ci="0" mb="2" cb="0"/><line nr="1092" mi="1" ci="0" mb="0" cb="0"/><line nr="1096" mi="5" ci="0" mb="0" cb="0"/><line nr="1097" mi="5" ci="0" mb="0" cb="0"/><line nr="1099" mi="6" ci="0" mb="0" cb="0"/><line nr="1101" mi="5" ci="0" mb="0" cb="0"/><line nr="1103" mi="6" ci="0" mb="0" cb="0"/><line nr="1106" mi="6" ci="0" mb="0" cb="0"/><line nr="1108" mi="6" ci="0" mb="0" cb="0"/><line nr="1111" mi="7" ci="0" mb="2" cb="0"/><line nr="1112" mi="1" ci="0" mb="0" cb="0"/><line nr="1115" mi="7" ci="0" mb="2" cb="0"/><line nr="1116" mi="1" ci="0" mb="0" cb="0"/><line nr="1120" mi="5" ci="0" mb="0" cb="0"/><line nr="1121" mi="5" ci="0" mb="0" cb="0"/><line nr="1122" mi="5" ci="0" mb="0" cb="0"/><line nr="1123" mi="6" ci="0" mb="0" cb="0"/><line nr="1126" mi="7" ci="0" mb="2" cb="0"/><line nr="1127" mi="1" ci="0" mb="0" cb="0"/><line nr="1130" mi="7" ci="0" mb="2" cb="0"/><line nr="1131" mi="1" ci="0" mb="0" cb="0"/><line nr="1135" mi="0" ci="8" mb="0" cb="0"/><line nr="1136" mi="0" ci="5" mb="0" cb="0"/><line nr="1139" mi="0" ci="3" mb="0" cb="0"/><line nr="1140" mi="0" ci="4" mb="0" cb="0"/><line nr="1141" mi="0" ci="10" mb="31" cb="6"/><line nr="1143" mi="5" ci="0" mb="0" cb="0"/><line nr="1144" mi="4" ci="0" mb="0" cb="0"/><line nr="1146" mi="3" ci="0" mb="0" cb="0"/><line nr="1147" mi="3" ci="0" mb="0" cb="0"/><line nr="1149" mi="1" ci="0" mb="0" cb="0"/><line nr="1151" mi="5" ci="0" mb="0" cb="0"/><line nr="1152" mi="4" ci="0" mb="0" cb="0"/><line nr="1154" mi="3" ci="0" mb="0" cb="0"/><line nr="1155" mi="5" ci="0" mb="0" cb="0"/><line nr="1156" mi="6" ci="0" mb="4" cb="0"/><line nr="1157" mi="6" ci="0" mb="0" cb="0"/><line nr="1160" mi="9" ci="0" mb="2" cb="0"/><line nr="1161" mi="4" ci="0" mb="0" cb="0"/><line nr="1162" mi="3" ci="0" mb="0" cb="0"/><line nr="1164" mi="3" ci="0" mb="0" cb="0"/><line nr="1165" mi="4" ci="0" mb="0" cb="0"/><line nr="1167" mi="1" ci="0" mb="0" cb="0"/><line nr="1169" mi="5" ci="0" mb="0" cb="0"/><line nr="1170" mi="4" ci="0" mb="0" cb="0"/><line nr="1172" mi="3" ci="0" mb="0" cb="0"/><line nr="1173" mi="5" ci="0" mb="0" cb="0"/><line nr="1174" mi="6" ci="0" mb="4" cb="0"/><line nr="1175" mi="6" ci="0" mb="0" cb="0"/><line nr="1178" mi="9" ci="0" mb="2" cb="0"/><line nr="1179" mi="4" ci="0" mb="0" cb="0"/><line nr="1180" mi="3" ci="0" mb="0" cb="0"/><line nr="1182" mi="3" ci="0" mb="0" cb="0"/><line nr="1183" mi="4" ci="0" mb="0" cb="0"/><line nr="1184" mi="5" ci="0" mb="0" cb="0"/><line nr="1185" mi="3" ci="0" mb="2" cb="0"/><line nr="1187" mi="3" ci="0" mb="0" cb="0"/><line nr="1188" mi="4" ci="0" mb="0" cb="0"/><line nr="1192" mi="3" ci="0" mb="0" cb="0"/><line nr="1193" mi="4" ci="0" mb="0" cb="0"/><line nr="1194" mi="3" ci="0" mb="0" cb="0"/><line nr="1195" mi="4" ci="0" mb="0" cb="0"/><line nr="1196" mi="5" ci="0" mb="0" cb="0"/><line nr="1197" mi="3" ci="0" mb="2" cb="0"/><line nr="1199" mi="3" ci="0" mb="0" cb="0"/><line nr="1200" mi="5" ci="0" mb="0" cb="0"/><line nr="1207" mi="0" ci="5" mb="0" cb="0"/><line nr="1208" mi="0" ci="4" mb="0" cb="0"/><line nr="1210" mi="0" ci="3" mb="0" cb="0"/><line nr="1211" mi="0" ci="5" mb="0" cb="0"/><line nr="1212" mi="0" ci="6" mb="2" cb="2"/><line nr="1213" mi="6" ci="0" mb="0" cb="0"/><line nr="1216" mi="3" ci="6" mb="1" cb="1"/><line nr="1217" mi="0" ci="4" mb="0" cb="0"/><line nr="1218" mi="0" ci="3" mb="0" cb="0"/><line nr="1220" mi="0" ci="3" mb="0" cb="0"/><line nr="1221" mi="0" ci="4" mb="0" cb="0"/><line nr="1222" mi="0" ci="3" mb="0" cb="0"/><line nr="1223" mi="0" ci="4" mb="0" cb="0"/><line nr="1224" mi="0" ci="5" mb="0" cb="0"/><line nr="1225" mi="0" ci="3" mb="1" cb="1"/><line nr="1227" mi="3" ci="0" mb="0" cb="0"/><line nr="1228" mi="5" ci="0" mb="0" cb="0"/><line nr="1235" mi="0" ci="5" mb="0" cb="0"/><line nr="1236" mi="0" ci="4" mb="0" cb="0"/><line nr="1238" mi="0" ci="3" mb="0" cb="0"/><line nr="1239" mi="0" ci="5" mb="0" cb="0"/><line nr="1240" mi="0" ci="6" mb="2" cb="2"/><line nr="1241" mi="6" ci="0" mb="0" cb="0"/><line nr="1244" mi="3" ci="6" mb="1" cb="1"/><line nr="1245" mi="0" ci="4" mb="0" cb="0"/><line nr="1246" mi="0" ci="3" mb="0" cb="0"/><line nr="1248" mi="0" ci="3" mb="0" cb="0"/><line nr="1249" mi="0" ci="4" mb="0" cb="0"/><line nr="1250" mi="0" ci="3" mb="0" cb="0"/><line nr="1251" mi="0" ci="4" mb="0" cb="0"/><line nr="1252" mi="0" ci="5" mb="0" cb="0"/><line nr="1253" mi="0" ci="3" mb="1" cb="1"/><line nr="1255" mi="3" ci="0" mb="0" cb="0"/><line nr="1256" mi="5" ci="0" mb="0" cb="0"/><line nr="1263" mi="5" ci="0" mb="0" cb="0"/><line nr="1264" mi="4" ci="0" mb="0" cb="0"/><line nr="1266" mi="3" ci="0" mb="0" cb="0"/><line nr="1267" mi="5" ci="0" mb="0" cb="0"/><line nr="1268" mi="6" ci="0" mb="4" cb="0"/><line nr="1269" mi="6" ci="0" mb="0" cb="0"/><line nr="1272" mi="9" ci="0" mb="2" cb="0"/><line nr="1273" mi="4" ci="0" mb="0" cb="0"/><line nr="1274" mi="3" ci="0" mb="0" cb="0"/><line nr="1276" mi="3" ci="0" mb="0" cb="0"/><line nr="1277" mi="4" ci="0" mb="0" cb="0"/><line nr="1279" mi="1" ci="0" mb="0" cb="0"/><line nr="1281" mi="5" ci="0" mb="0" cb="0"/><line nr="1282" mi="4" ci="0" mb="0" cb="0"/><line nr="1284" mi="3" ci="0" mb="0" cb="0"/><line nr="1285" mi="5" ci="0" mb="0" cb="0"/><line nr="1286" mi="6" ci="0" mb="4" cb="0"/><line nr="1287" mi="6" ci="0" mb="0" cb="0"/><line nr="1290" mi="9" ci="0" mb="2" cb="0"/><line nr="1291" mi="4" ci="0" mb="0" cb="0"/><line nr="1292" mi="3" ci="0" mb="0" cb="0"/><line nr="1294" mi="3" ci="0" mb="0" cb="0"/><line nr="1295" mi="4" ci="0" mb="0" cb="0"/><line nr="1296" mi="5" ci="0" mb="0" cb="0"/><line nr="1297" mi="6" ci="0" mb="4" cb="0"/><line nr="1299" mi="3" ci="0" mb="0" cb="0"/><line nr="1300" mi="5" ci="0" mb="0" cb="0"/><line nr="1301" mi="6" ci="0" mb="4" cb="0"/><line nr="1302" mi="6" ci="0" mb="0" cb="0"/><line nr="1305" mi="9" ci="0" mb="2" cb="0"/><line nr="1306" mi="4" ci="0" mb="0" cb="0"/><line nr="1307" mi="3" ci="0" mb="0" cb="0"/><line nr="1312" mi="3" ci="0" mb="0" cb="0"/><line nr="1313" mi="4" ci="0" mb="0" cb="0"/><line nr="1315" mi="1" ci="0" mb="0" cb="0"/><line nr="1317" mi="5" ci="0" mb="0" cb="0"/><line nr="1318" mi="4" ci="0" mb="0" cb="0"/><line nr="1320" mi="3" ci="0" mb="0" cb="0"/><line nr="1321" mi="5" ci="0" mb="0" cb="0"/><line nr="1322" mi="6" ci="0" mb="4" cb="0"/><line nr="1323" mi="6" ci="0" mb="0" cb="0"/><line nr="1326" mi="9" ci="0" mb="2" cb="0"/><line nr="1327" mi="4" ci="0" mb="0" cb="0"/><line nr="1328" mi="3" ci="0" mb="0" cb="0"/><line nr="1330" mi="3" ci="0" mb="0" cb="0"/><line nr="1331" mi="4" ci="0" mb="0" cb="0"/><line nr="1332" mi="3" ci="0" mb="0" cb="0"/><line nr="1333" mi="4" ci="0" mb="0" cb="0"/><line nr="1335" mi="1" ci="0" mb="0" cb="0"/><line nr="1337" mi="5" ci="0" mb="0" cb="0"/><line nr="1338" mi="4" ci="0" mb="0" cb="0"/><line nr="1340" mi="3" ci="0" mb="0" cb="0"/><line nr="1341" mi="5" ci="0" mb="0" cb="0"/><line nr="1342" mi="6" ci="0" mb="4" cb="0"/><line nr="1343" mi="6" ci="0" mb="0" cb="0"/><line nr="1346" mi="9" ci="0" mb="2" cb="0"/><line nr="1347" mi="4" ci="0" mb="0" cb="0"/><line nr="1348" mi="3" ci="0" mb="0" cb="0"/><line nr="1350" mi="3" ci="0" mb="0" cb="0"/><line nr="1351" mi="4" ci="0" mb="0" cb="0"/><line nr="1353" mi="1" ci="0" mb="0" cb="0"/><line nr="1355" mi="5" ci="0" mb="0" cb="0"/><line nr="1356" mi="4" ci="0" mb="0" cb="0"/><line nr="1358" mi="3" ci="0" mb="0" cb="0"/><line nr="1359" mi="5" ci="0" mb="0" cb="0"/><line nr="1360" mi="6" ci="0" mb="4" cb="0"/><line nr="1361" mi="6" ci="0" mb="0" cb="0"/><line nr="1364" mi="9" ci="0" mb="2" cb="0"/><line nr="1365" mi="4" ci="0" mb="0" cb="0"/><line nr="1366" mi="3" ci="0" mb="0" cb="0"/><line nr="1368" mi="3" ci="0" mb="0" cb="0"/><line nr="1369" mi="4" ci="0" mb="0" cb="0"/><line nr="1371" mi="1" ci="0" mb="0" cb="0"/><line nr="1373" mi="5" ci="0" mb="0" cb="0"/><line nr="1374" mi="4" ci="0" mb="0" cb="0"/><line nr="1376" mi="3" ci="0" mb="0" cb="0"/><line nr="1377" mi="4" ci="0" mb="0" cb="0"/><line nr="1378" mi="3" ci="0" mb="0" cb="0"/><line nr="1379" mi="3" ci="0" mb="0" cb="0"/><line nr="1380" mi="3" ci="0" mb="0" cb="0"/><line nr="1381" mi="4" ci="0" mb="0" cb="0"/><line nr="1382" mi="5" ci="0" mb="0" cb="0"/><line nr="1383" mi="3" ci="0" mb="2" cb="0"/><line nr="1385" mi="3" ci="0" mb="0" cb="0"/><line nr="1386" mi="5" ci="0" mb="0" cb="0"/><line nr="1393" mi="5" ci="0" mb="0" cb="0"/><line nr="1394" mi="4" ci="0" mb="0" cb="0"/><line nr="1396" mi="3" ci="0" mb="0" cb="0"/><line nr="1397" mi="4" ci="0" mb="0" cb="0"/><line nr="1398" mi="3" ci="0" mb="0" cb="0"/><line nr="1399" mi="4" ci="0" mb="0" cb="0"/><line nr="1400" mi="3" ci="0" mb="0" cb="0"/><line nr="1401" mi="4" ci="0" mb="0" cb="0"/><line nr="1402" mi="5" ci="0" mb="0" cb="0"/><line nr="1403" mi="3" ci="0" mb="2" cb="0"/><line nr="1405" mi="3" ci="0" mb="0" cb="0"/><line nr="1406" mi="5" ci="0" mb="0" cb="0"/><line nr="1413" mi="5" ci="0" mb="0" cb="0"/><line nr="1414" mi="4" ci="0" mb="0" cb="0"/><line nr="1416" mi="3" ci="0" mb="0" cb="0"/><line nr="1417" mi="4" ci="0" mb="0" cb="0"/><line nr="1418" mi="3" ci="0" mb="0" cb="0"/><line nr="1419" mi="4" ci="0" mb="0" cb="0"/><line nr="1420" mi="3" ci="0" mb="0" cb="0"/><line nr="1421" mi="3" ci="0" mb="0" cb="0"/><line nr="1423" mi="1" ci="0" mb="0" cb="0"/><line nr="1425" mi="5" ci="0" mb="0" cb="0"/><line nr="1426" mi="4" ci="0" mb="0" cb="0"/><line nr="1428" mi="3" ci="0" mb="0" cb="0"/><line nr="1429" mi="4" ci="0" mb="0" cb="0"/><line nr="1430" mi="3" ci="0" mb="0" cb="0"/><line nr="1431" mi="4" ci="0" mb="0" cb="0"/><line nr="1432" mi="3" ci="0" mb="0" cb="0"/><line nr="1433" mi="3" ci="0" mb="0" cb="0"/><line nr="1435" mi="1" ci="0" mb="0" cb="0"/><line nr="1437" mi="5" ci="0" mb="0" cb="0"/><line nr="1438" mi="4" ci="0" mb="0" cb="0"/><line nr="1440" mi="3" ci="0" mb="0" cb="0"/><line nr="1441" mi="4" ci="0" mb="0" cb="0"/><line nr="1442" mi="3" ci="0" mb="0" cb="0"/><line nr="1443" mi="4" ci="0" mb="0" cb="0"/><line nr="1444" mi="5" ci="0" mb="3" cb="0"/><line nr="1495" mi="3" ci="0" mb="0" cb="0"/><line nr="1496" mi="3" ci="0" mb="0" cb="0"/><line nr="1498" mi="1" ci="0" mb="0" cb="0"/><line nr="1501" mi="3" ci="0" mb="0" cb="0"/><line nr="1502" mi="4" ci="0" mb="0" cb="0"/><line nr="1504" mi="1" ci="0" mb="0" cb="0"/><line nr="1506" mi="5" ci="0" mb="0" cb="0"/><line nr="1508" mi="3" ci="0" mb="0" cb="0"/><line nr="1509" mi="3" ci="0" mb="0" cb="0"/><line nr="1511" mi="1" ci="0" mb="0" cb="0"/><line nr="1513" mi="5" ci="0" mb="0" cb="0"/><line nr="1514" mi="4" ci="0" mb="0" cb="0"/><line nr="1516" mi="3" ci="0" mb="0" cb="0"/><line nr="1517" mi="5" ci="0" mb="0" cb="0"/><line nr="1518" mi="6" ci="0" mb="4" cb="0"/><line nr="1519" mi="6" ci="0" mb="0" cb="0"/><line nr="1522" mi="9" ci="0" mb="2" cb="0"/><line nr="1523" mi="4" ci="0" mb="0" cb="0"/><line nr="1524" mi="3" ci="0" mb="0" cb="0"/><line nr="1526" mi="3" ci="0" mb="0" cb="0"/><line nr="1527" mi="4" ci="0" mb="0" cb="0"/><line nr="1528" mi="3" ci="0" mb="0" cb="0"/><line nr="1529" mi="4" ci="0" mb="0" cb="0"/><line nr="1530" mi="5" ci="0" mb="0" cb="0"/><line nr="1531" mi="3" ci="0" mb="2" cb="0"/><line nr="1533" mi="3" ci="0" mb="0" cb="0"/><line nr="1534" mi="5" ci="0" mb="0" cb="0"/><line nr="1541" mi="5" ci="0" mb="0" cb="0"/><line nr="1542" mi="4" ci="0" mb="0" cb="0"/><line nr="1544" mi="3" ci="0" mb="0" cb="0"/><line nr="1545" mi="4" ci="0" mb="0" cb="0"/><line nr="1546" mi="3" ci="0" mb="0" cb="0"/><line nr="1547" mi="3" ci="0" mb="0" cb="0"/><line nr="1549" mi="1" ci="0" mb="0" cb="0"/><line nr="1551" mi="5" ci="0" mb="0" cb="0"/><line nr="1552" mi="4" ci="0" mb="0" cb="0"/><line nr="1554" mi="3" ci="0" mb="0" cb="0"/><line nr="1555" mi="4" ci="0" mb="0" cb="0"/><line nr="1556" mi="3" ci="0" mb="0" cb="0"/><line nr="1557" mi="4" ci="0" mb="0" cb="0"/><line nr="1559" mi="1" ci="0" mb="0" cb="0"/><line nr="1561" mi="5" ci="0" mb="0" cb="0"/><line nr="1562" mi="4" ci="0" mb="0" cb="0"/><line nr="1564" mi="3" ci="0" mb="0" cb="0"/><line nr="1565" mi="4" ci="0" mb="0" cb="0"/><line nr="1566" mi="3" ci="0" mb="0" cb="0"/><line nr="1567" mi="4" ci="0" mb="0" cb="0"/><line nr="1568" mi="3" ci="0" mb="0" cb="0"/><line nr="1569" mi="4" ci="0" mb="0" cb="0"/><line nr="1570" mi="3" ci="0" mb="0" cb="0"/><line nr="1571" mi="4" ci="0" mb="0" cb="0"/><line nr="1573" mi="1" ci="0" mb="0" cb="0"/><line nr="1575" mi="5" ci="0" mb="0" cb="0"/><line nr="1576" mi="4" ci="0" mb="0" cb="0"/><line nr="1578" mi="3" ci="0" mb="0" cb="0"/><line nr="1579" mi="4" ci="0" mb="0" cb="0"/><line nr="1580" mi="3" ci="0" mb="0" cb="0"/><line nr="1581" mi="4" ci="0" mb="0" cb="0"/><line nr="1583" mi="1" ci="0" mb="0" cb="0"/><line nr="1585" mi="5" ci="0" mb="0" cb="0"/><line nr="1586" mi="4" ci="0" mb="0" cb="0"/><line nr="1588" mi="3" ci="0" mb="0" cb="0"/><line nr="1589" mi="4" ci="0" mb="0" cb="0"/><line nr="1590" mi="3" ci="0" mb="0" cb="0"/><line nr="1591" mi="3" ci="0" mb="0" cb="0"/><line nr="1592" mi="3" ci="0" mb="0" cb="0"/><line nr="1593" mi="4" ci="0" mb="0" cb="0"/><line nr="1594" mi="3" ci="0" mb="0" cb="0"/><line nr="1595" mi="3" ci="0" mb="0" cb="0"/><line nr="1597" mi="1" ci="0" mb="0" cb="0"/><line nr="1599" mi="5" ci="0" mb="0" cb="0"/><line nr="1600" mi="4" ci="0" mb="0" cb="0"/><line nr="1602" mi="3" ci="0" mb="0" cb="0"/><line nr="1603" mi="4" ci="0" mb="0" cb="0"/><line nr="1604" mi="3" ci="0" mb="0" cb="0"/><line nr="1605" mi="3" ci="0" mb="0" cb="0"/><line nr="1607" mi="1" ci="0" mb="0" cb="0"/><line nr="1609" mi="0" ci="5" mb="0" cb="0"/><line nr="1610" mi="0" ci="4" mb="0" cb="0"/><line nr="1612" mi="0" ci="3" mb="0" cb="0"/><line nr="1613" mi="0" ci="4" mb="0" cb="0"/><line nr="1614" mi="0" ci="3" mb="0" cb="0"/><line nr="1615" mi="0" ci="4" mb="0" cb="0"/><line nr="1616" mi="0" ci="5" mb="0" cb="0"/><line nr="1617" mi="0" ci="3" mb="1" cb="1"/><line nr="1619" mi="3" ci="0" mb="0" cb="0"/><line nr="1620" mi="4" ci="0" mb="0" cb="0"/><line nr="1621" mi="3" ci="0" mb="0" cb="0"/><line nr="1622" mi="4" ci="0" mb="0" cb="0"/><line nr="1626" mi="0" ci="3" mb="0" cb="0"/><line nr="1627" mi="0" ci="4" mb="0" cb="0"/><line nr="1628" mi="0" ci="5" mb="0" cb="0"/><line nr="1629" mi="0" ci="3" mb="1" cb="1"/><line nr="1631" mi="3" ci="0" mb="0" cb="0"/><line nr="1632" mi="4" ci="0" mb="0" cb="0"/><line nr="1636" mi="0" ci="3" mb="0" cb="0"/><line nr="1637" mi="0" ci="4" mb="0" cb="0"/><line nr="1638" mi="0" ci="3" mb="0" cb="0"/><line nr="1639" mi="0" ci="4" mb="0" cb="0"/><line nr="1640" mi="0" ci="10" mb="1" cb="1"/><line nr="1643" mi="3" ci="0" mb="0" cb="0"/><line nr="1644" mi="4" ci="0" mb="0" cb="0"/><line nr="1645" mi="3" ci="0" mb="0" cb="0"/><line nr="1646" mi="4" ci="0" mb="0" cb="0"/><line nr="1647" mi="3" ci="0" mb="0" cb="0"/><line nr="1648" mi="4" ci="0" mb="0" cb="0"/><line nr="1652" mi="0" ci="3" mb="0" cb="0"/><line nr="1653" mi="0" ci="3" mb="0" cb="0"/><line nr="1654" mi="0" ci="3" mb="0" cb="0"/><line nr="1655" mi="0" ci="4" mb="0" cb="0"/><line nr="1656" mi="0" ci="5" mb="0" cb="0"/><line nr="1657" mi="0" ci="3" mb="1" cb="1"/><line nr="1659" mi="0" ci="3" mb="0" cb="0"/><line nr="1660" mi="0" ci="3" mb="0" cb="0"/><line nr="1664" mi="0" ci="3" mb="0" cb="0"/><line nr="1665" mi="0" ci="4" mb="0" cb="0"/><line nr="1666" mi="0" ci="5" mb="0" cb="0"/><line nr="1667" mi="0" ci="3" mb="1" cb="1"/><line nr="1669" mi="0" ci="3" mb="0" cb="0"/><line nr="1670" mi="0" ci="4" mb="0" cb="0"/><line nr="1671" mi="0" ci="3" mb="0" cb="0"/><line nr="1672" mi="0" ci="4" mb="0" cb="0"/><line nr="1679" mi="5" ci="0" mb="0" cb="0"/><line nr="1680" mi="4" ci="0" mb="0" cb="0"/><line nr="1682" mi="3" ci="0" mb="0" cb="0"/><line nr="1683" mi="4" ci="0" mb="0" cb="0"/><line nr="1684" mi="3" ci="0" mb="0" cb="0"/><line nr="1685" mi="4" ci="0" mb="0" cb="0"/><line nr="1686" mi="5" ci="0" mb="0" cb="0"/><line nr="1687" mi="3" ci="0" mb="2" cb="0"/><line nr="1689" mi="3" ci="0" mb="0" cb="0"/><line nr="1690" mi="4" ci="0" mb="0" cb="0"/><line nr="1691" mi="3" ci="0" mb="0" cb="0"/><line nr="1692" mi="4" ci="0" mb="0" cb="0"/><line nr="1696" mi="3" ci="0" mb="0" cb="0"/><line nr="1697" mi="4" ci="0" mb="0" cb="0"/><line nr="1698" mi="3" ci="0" mb="0" cb="0"/><line nr="1699" mi="4" ci="0" mb="0" cb="0"/><line nr="1700" mi="10" ci="0" mb="2" cb="0"/><line nr="1703" mi="3" ci="0" mb="0" cb="0"/><line nr="1704" mi="4" ci="0" mb="0" cb="0"/><line nr="1705" mi="3" ci="0" mb="0" cb="0"/><line nr="1706" mi="4" ci="0" mb="0" cb="0"/><line nr="1707" mi="3" ci="0" mb="0" cb="0"/><line nr="1708" mi="4" ci="0" mb="0" cb="0"/><line nr="1712" mi="3" ci="0" mb="0" cb="0"/><line nr="1713" mi="3" ci="0" mb="0" cb="0"/><line nr="1714" mi="3" ci="0" mb="0" cb="0"/><line nr="1715" mi="4" ci="0" mb="0" cb="0"/><line nr="1716" mi="5" ci="0" mb="0" cb="0"/><line nr="1717" mi="3" ci="0" mb="2" cb="0"/><line nr="1719" mi="3" ci="0" mb="0" cb="0"/><line nr="1720" mi="4" ci="0" mb="0" cb="0"/><line nr="1721" mi="3" ci="0" mb="0" cb="0"/><line nr="1722" mi="3" ci="0" mb="0" cb="0"/><line nr="1726" mi="3" ci="0" mb="0" cb="0"/><line nr="1727" mi="4" ci="0" mb="0" cb="0"/><line nr="1728" mi="3" ci="0" mb="0" cb="0"/><line nr="1729" mi="3" ci="0" mb="0" cb="0"/><line nr="1731" mi="1" ci="0" mb="0" cb="0"/><line nr="1733" mi="0" ci="5" mb="0" cb="0"/><line nr="1734" mi="0" ci="4" mb="0" cb="0"/><line nr="1736" mi="0" ci="3" mb="0" cb="0"/><line nr="1737" mi="0" ci="4" mb="0" cb="0"/><line nr="1738" mi="0" ci="3" mb="0" cb="0"/><line nr="1739" mi="0" ci="4" mb="0" cb="0"/><line nr="1740" mi="0" ci="5" mb="0" cb="0"/><line nr="1741" mi="0" ci="3" mb="1" cb="1"/><line nr="1743" mi="3" ci="0" mb="0" cb="0"/><line nr="1744" mi="4" ci="0" mb="0" cb="0"/><line nr="1745" mi="3" ci="0" mb="0" cb="0"/><line nr="1746" mi="4" ci="0" mb="0" cb="0"/><line nr="1750" mi="0" ci="3" mb="0" cb="0"/><line nr="1751" mi="0" ci="4" mb="0" cb="0"/><line nr="1752" mi="0" ci="5" mb="0" cb="0"/><line nr="1753" mi="0" ci="3" mb="1" cb="1"/><line nr="1755" mi="3" ci="0" mb="0" cb="0"/><line nr="1756" mi="4" ci="0" mb="0" cb="0"/><line nr="1760" mi="0" ci="3" mb="0" cb="0"/><line nr="1761" mi="0" ci="4" mb="0" cb="0"/><line nr="1762" mi="0" ci="3" mb="0" cb="0"/><line nr="1763" mi="0" ci="4" mb="0" cb="0"/><line nr="1764" mi="0" ci="10" mb="1" cb="1"/><line nr="1767" mi="3" ci="0" mb="0" cb="0"/><line nr="1768" mi="4" ci="0" mb="0" cb="0"/><line nr="1769" mi="3" ci="0" mb="0" cb="0"/><line nr="1770" mi="4" ci="0" mb="0" cb="0"/><line nr="1771" mi="3" ci="0" mb="0" cb="0"/><line nr="1772" mi="4" ci="0" mb="0" cb="0"/><line nr="1776" mi="0" ci="3" mb="0" cb="0"/><line nr="1777" mi="0" ci="3" mb="0" cb="0"/><line nr="1778" mi="0" ci="3" mb="0" cb="0"/><line nr="1779" mi="0" ci="4" mb="0" cb="0"/><line nr="1780" mi="0" ci="5" mb="0" cb="0"/><line nr="1781" mi="0" ci="3" mb="1" cb="1"/><line nr="1783" mi="0" ci="3" mb="0" cb="0"/><line nr="1784" mi="0" ci="3" mb="0" cb="0"/><line nr="1788" mi="0" ci="3" mb="0" cb="0"/><line nr="1789" mi="0" ci="4" mb="0" cb="0"/><line nr="1790" mi="0" ci="5" mb="0" cb="0"/><line nr="1791" mi="0" ci="3" mb="1" cb="1"/><line nr="1793" mi="0" ci="3" mb="0" cb="0"/><line nr="1794" mi="0" ci="4" mb="0" cb="0"/><line nr="1795" mi="0" ci="3" mb="0" cb="0"/><line nr="1796" mi="0" ci="4" mb="0" cb="0"/><line nr="1803" mi="5" ci="0" mb="0" cb="0"/><line nr="1804" mi="4" ci="0" mb="0" cb="0"/><line nr="1806" mi="3" ci="0" mb="0" cb="0"/><line nr="1807" mi="4" ci="0" mb="0" cb="0"/><line nr="1808" mi="3" ci="0" mb="0" cb="0"/><line nr="1809" mi="4" ci="0" mb="0" cb="0"/><line nr="1810" mi="5" ci="0" mb="0" cb="0"/><line nr="1811" mi="3" ci="0" mb="2" cb="0"/><line nr="1813" mi="3" ci="0" mb="0" cb="0"/><line nr="1814" mi="4" ci="0" mb="0" cb="0"/><line nr="1815" mi="3" ci="0" mb="0" cb="0"/><line nr="1816" mi="4" ci="0" mb="0" cb="0"/><line nr="1820" mi="3" ci="0" mb="0" cb="0"/><line nr="1821" mi="4" ci="0" mb="0" cb="0"/><line nr="1822" mi="3" ci="0" mb="0" cb="0"/><line nr="1823" mi="4" ci="0" mb="0" cb="0"/><line nr="1824" mi="10" ci="0" mb="2" cb="0"/><line nr="1827" mi="3" ci="0" mb="0" cb="0"/><line nr="1828" mi="4" ci="0" mb="0" cb="0"/><line nr="1829" mi="3" ci="0" mb="0" cb="0"/><line nr="1830" mi="4" ci="0" mb="0" cb="0"/><line nr="1831" mi="3" ci="0" mb="0" cb="0"/><line nr="1832" mi="4" ci="0" mb="0" cb="0"/><line nr="1836" mi="3" ci="0" mb="0" cb="0"/><line nr="1837" mi="3" ci="0" mb="0" cb="0"/><line nr="1838" mi="3" ci="0" mb="0" cb="0"/><line nr="1839" mi="4" ci="0" mb="0" cb="0"/><line nr="1840" mi="5" ci="0" mb="0" cb="0"/><line nr="1841" mi="3" ci="0" mb="2" cb="0"/><line nr="1843" mi="3" ci="0" mb="0" cb="0"/><line nr="1844" mi="4" ci="0" mb="0" cb="0"/><line nr="1845" mi="3" ci="0" mb="0" cb="0"/><line nr="1846" mi="3" ci="0" mb="0" cb="0"/><line nr="1850" mi="3" ci="0" mb="0" cb="0"/><line nr="1851" mi="4" ci="0" mb="0" cb="0"/><line nr="1852" mi="3" ci="0" mb="0" cb="0"/><line nr="1853" mi="3" ci="0" mb="0" cb="0"/><line nr="1855" mi="1" ci="0" mb="0" cb="0"/><line nr="1857" mi="5" ci="0" mb="0" cb="0"/><line nr="1858" mi="4" ci="0" mb="0" cb="0"/><line nr="1860" mi="3" ci="0" mb="0" cb="0"/><line nr="1861" mi="4" ci="0" mb="0" cb="0"/><line nr="1862" mi="3" ci="0" mb="0" cb="0"/><line nr="1863" mi="5" ci="0" mb="0" cb="0"/><line nr="1864" mi="6" ci="0" mb="4" cb="0"/><line nr="1865" mi="6" ci="0" mb="0" cb="0"/><line nr="1868" mi="9" ci="0" mb="2" cb="0"/><line nr="1869" mi="4" ci="0" mb="0" cb="0"/><line nr="1870" mi="3" ci="0" mb="0" cb="0"/><line nr="1872" mi="3" ci="0" mb="0" cb="0"/><line nr="1873" mi="4" ci="0" mb="0" cb="0"/><line nr="1874" mi="3" ci="0" mb="0" cb="0"/><line nr="1875" mi="4" ci="0" mb="0" cb="0"/><line nr="1876" mi="10" ci="0" mb="2" cb="0"/><line nr="1879" mi="3" ci="0" mb="0" cb="0"/><line nr="1880" mi="4" ci="0" mb="0" cb="0"/><line nr="1881" mi="3" ci="0" mb="0" cb="0"/><line nr="1882" mi="4" ci="0" mb="0" cb="0"/><line nr="1883" mi="3" ci="0" mb="0" cb="0"/><line nr="1884" mi="4" ci="0" mb="0" cb="0"/><line nr="1888" mi="3" ci="0" mb="0" cb="0"/><line nr="1889" mi="3" ci="0" mb="0" cb="0"/><line nr="1890" mi="3" ci="0" mb="0" cb="0"/><line nr="1891" mi="4" ci="0" mb="0" cb="0"/><line nr="1892" mi="3" ci="0" mb="0" cb="0"/><line nr="1893" mi="3" ci="0" mb="0" cb="0"/><line nr="1895" mi="1" ci="0" mb="0" cb="0"/><line nr="1897" mi="5" ci="0" mb="0" cb="0"/><line nr="1898" mi="4" ci="0" mb="0" cb="0"/><line nr="1900" mi="3" ci="0" mb="0" cb="0"/><line nr="1901" mi="4" ci="0" mb="0" cb="0"/><line nr="1902" mi="3" ci="0" mb="0" cb="0"/><line nr="1903" mi="4" ci="0" mb="0" cb="0"/><line nr="1904" mi="3" ci="0" mb="0" cb="0"/><line nr="1905" mi="3" ci="0" mb="0" cb="0"/><line nr="1906" mi="3" ci="0" mb="0" cb="0"/><line nr="1907" mi="4" ci="0" mb="0" cb="0"/><line nr="1908" mi="5" ci="0" mb="0" cb="0"/><line nr="1909" mi="3" ci="0" mb="2" cb="0"/><line nr="1911" mi="3" ci="0" mb="0" cb="0"/><line nr="1912" mi="4" ci="0" mb="0" cb="0"/><line nr="1913" mi="3" ci="0" mb="0" cb="0"/><line nr="1914" mi="3" ci="0" mb="0" cb="0"/><line nr="1918" mi="3" ci="0" mb="0" cb="0"/><line nr="1919" mi="3" ci="0" mb="0" cb="0"/><line nr="1921" mi="1" ci="0" mb="0" cb="0"/><line nr="1923" mi="5" ci="0" mb="0" cb="0"/><line nr="1924" mi="4" ci="0" mb="0" cb="0"/><line nr="1926" mi="3" ci="0" mb="0" cb="0"/><line nr="1927" mi="4" ci="0" mb="0" cb="0"/><line nr="1928" mi="3" ci="0" mb="0" cb="0"/><line nr="1929" mi="4" ci="0" mb="0" cb="0"/><line nr="1930" mi="3" ci="0" mb="0" cb="0"/><line nr="1931" mi="3" ci="0" mb="0" cb="0"/><line nr="1932" mi="3" ci="0" mb="0" cb="0"/><line nr="1933" mi="4" ci="0" mb="0" cb="0"/><line nr="1934" mi="5" ci="0" mb="0" cb="0"/><line nr="1935" mi="3" ci="0" mb="2" cb="0"/><line nr="1937" mi="3" ci="0" mb="0" cb="0"/><line nr="1938" mi="3" ci="0" mb="0" cb="0"/><line nr="1942" mi="3" ci="0" mb="0" cb="0"/><line nr="1943" mi="4" ci="0" mb="0" cb="0"/><line nr="1944" mi="3" ci="0" mb="0" cb="0"/><line nr="1945" mi="3" ci="0" mb="0" cb="0"/><line nr="1947" mi="1" ci="0" mb="0" cb="0"/><line nr="1949" mi="0" ci="5" mb="0" cb="0"/><line nr="1950" mi="0" ci="4" mb="0" cb="0"/><line nr="1952" mi="0" ci="3" mb="0" cb="0"/><line nr="1953" mi="0" ci="4" mb="0" cb="0"/><line nr="1954" mi="0" ci="3" mb="0" cb="0"/><line nr="1955" mi="0" ci="4" mb="0" cb="0"/><line nr="1956" mi="0" ci="3" mb="0" cb="0"/><line nr="1957" mi="0" ci="4" mb="0" cb="0"/><line nr="1958" mi="0" ci="10" mb="1" cb="1"/><line nr="1961" mi="0" ci="3" mb="0" cb="0"/><line nr="1962" mi="0" ci="4" mb="0" cb="0"/><line nr="1963" mi="0" ci="3" mb="0" cb="0"/><line nr="1964" mi="0" ci="4" mb="0" cb="0"/><line nr="1968" mi="0" ci="3" mb="0" cb="0"/><line nr="1969" mi="0" ci="3" mb="0" cb="0"/><line nr="1970" mi="0" ci="3" mb="0" cb="0"/><line nr="1971" mi="0" ci="4" mb="0" cb="0"/><line nr="1972" mi="0" ci="5" mb="0" cb="0"/><line nr="1973" mi="0" ci="3" mb="1" cb="1"/><line nr="1975" mi="0" ci="3" mb="0" cb="0"/><line nr="1976" mi="0" ci="4" mb="0" cb="0"/><line nr="1977" mi="0" ci="3" mb="0" cb="0"/><line nr="1978" mi="0" ci="5" mb="0" cb="0"/><line nr="1985" mi="0" ci="5" mb="0" cb="0"/><line nr="1986" mi="0" ci="4" mb="0" cb="0"/><line nr="1988" mi="0" ci="3" mb="0" cb="0"/><line nr="1989" mi="0" ci="4" mb="0" cb="0"/><line nr="1990" mi="0" ci="3" mb="0" cb="0"/><line nr="1991" mi="0" ci="4" mb="0" cb="0"/><line nr="1992" mi="0" ci="3" mb="0" cb="0"/><line nr="1993" mi="0" ci="4" mb="0" cb="0"/><line nr="1994" mi="0" ci="10" mb="1" cb="1"/><line nr="1997" mi="0" ci="3" mb="0" cb="0"/><line nr="1998" mi="0" ci="4" mb="0" cb="0"/><line nr="1999" mi="0" ci="3" mb="0" cb="0"/><line nr="2000" mi="0" ci="4" mb="0" cb="0"/><line nr="2004" mi="0" ci="3" mb="0" cb="0"/><line nr="2005" mi="0" ci="3" mb="0" cb="0"/><line nr="2006" mi="0" ci="3" mb="0" cb="0"/><line nr="2007" mi="0" ci="4" mb="0" cb="0"/><line nr="2008" mi="0" ci="5" mb="0" cb="0"/><line nr="2009" mi="0" ci="3" mb="1" cb="1"/><line nr="2011" mi="0" ci="3" mb="0" cb="0"/><line nr="2012" mi="0" ci="4" mb="0" cb="0"/><line nr="2013" mi="0" ci="3" mb="0" cb="0"/><line nr="2014" mi="0" ci="5" mb="0" cb="0"/><line nr="2021" mi="5" ci="0" mb="0" cb="0"/><line nr="2022" mi="4" ci="0" mb="0" cb="0"/><line nr="2024" mi="3" ci="0" mb="0" cb="0"/><line nr="2025" mi="4" ci="0" mb="0" cb="0"/><line nr="2026" mi="3" ci="0" mb="0" cb="0"/><line nr="2027" mi="4" ci="0" mb="0" cb="0"/><line nr="2028" mi="3" ci="0" mb="0" cb="0"/><line nr="2029" mi="4" ci="0" mb="0" cb="0"/><line nr="2030" mi="10" ci="0" mb="2" cb="0"/><line nr="2033" mi="3" ci="0" mb="0" cb="0"/><line nr="2034" mi="4" ci="0" mb="0" cb="0"/><line nr="2035" mi="3" ci="0" mb="0" cb="0"/><line nr="2036" mi="4" ci="0" mb="0" cb="0"/><line nr="2040" mi="3" ci="0" mb="0" cb="0"/><line nr="2041" mi="3" ci="0" mb="0" cb="0"/><line nr="2043" mi="1" ci="0" mb="0" cb="0"/><line nr="2045" mi="5" ci="0" mb="0" cb="0"/><line nr="2046" mi="4" ci="0" mb="0" cb="0"/><line nr="2048" mi="3" ci="0" mb="0" cb="0"/><line nr="2049" mi="4" ci="0" mb="0" cb="0"/><line nr="2050" mi="3" ci="0" mb="0" cb="0"/><line nr="2051" mi="4" ci="0" mb="0" cb="0"/><line nr="2052" mi="10" ci="0" mb="3" cb="0"/><line nr="2055" mi="3" ci="0" mb="0" cb="0"/><line nr="2056" mi="3" ci="0" mb="0" cb="0"/><line nr="2058" mi="1" ci="0" mb="0" cb="0"/><line nr="2061" mi="3" ci="0" mb="0" cb="0"/><line nr="2062" mi="3" ci="0" mb="0" cb="0"/><line nr="2067" mi="1" ci="0" mb="0" cb="0"/><line nr="2069" mi="5" ci="0" mb="0" cb="0"/><line nr="2070" mi="4" ci="0" mb="0" cb="0"/><line nr="2072" mi="3" ci="0" mb="0" cb="0"/><line nr="2073" mi="4" ci="0" mb="0" cb="0"/><line nr="2074" mi="3" ci="0" mb="0" cb="0"/><line nr="2075" mi="4" ci="0" mb="0" cb="0"/><line nr="2076" mi="3" ci="0" mb="0" cb="0"/><line nr="2077" mi="4" ci="0" mb="0" cb="0"/><line nr="2078" mi="10" ci="0" mb="2" cb="0"/><line nr="2081" mi="3" ci="0" mb="0" cb="0"/><line nr="2082" mi="4" ci="0" mb="0" cb="0"/><line nr="2083" mi="3" ci="0" mb="0" cb="0"/><line nr="2084" mi="4" ci="0" mb="0" cb="0"/><line nr="2085" mi="3" ci="0" mb="0" cb="0"/><line nr="2086" mi="4" ci="0" mb="0" cb="0"/><line nr="2090" mi="3" ci="0" mb="0" cb="0"/><line nr="2091" mi="3" ci="0" mb="0" cb="0"/><line nr="2092" mi="3" ci="0" mb="0" cb="0"/><line nr="2093" mi="4" ci="0" mb="0" cb="0"/><line nr="2094" mi="3" ci="0" mb="0" cb="0"/><line nr="2095" mi="4" ci="0" mb="0" cb="0"/><line nr="2097" mi="1" ci="0" mb="0" cb="0"/><line nr="2099" mi="5" ci="0" mb="0" cb="0"/><line nr="2100" mi="4" ci="0" mb="0" cb="0"/><line nr="2102" mi="3" ci="0" mb="0" cb="0"/><line nr="2103" mi="4" ci="0" mb="0" cb="0"/><line nr="2104" mi="3" ci="0" mb="0" cb="0"/><line nr="2105" mi="4" ci="0" mb="0" cb="0"/><line nr="2106" mi="3" ci="0" mb="0" cb="0"/><line nr="2107" mi="4" ci="0" mb="0" cb="0"/><line nr="2108" mi="10" ci="0" mb="2" cb="0"/><line nr="2111" mi="3" ci="0" mb="0" cb="0"/><line nr="2112" mi="4" ci="0" mb="0" cb="0"/><line nr="2113" mi="3" ci="0" mb="0" cb="0"/><line nr="2114" mi="4" ci="0" mb="0" cb="0"/><line nr="2118" mi="3" ci="0" mb="0" cb="0"/><line nr="2119" mi="3" ci="0" mb="0" cb="0"/><line nr="2121" mi="1" ci="0" mb="0" cb="0"/><line nr="2123" mi="5" ci="0" mb="0" cb="0"/><line nr="2124" mi="4" ci="0" mb="0" cb="0"/><line nr="2126" mi="3" ci="0" mb="0" cb="0"/><line nr="2127" mi="4" ci="0" mb="0" cb="0"/><line nr="2128" mi="3" ci="0" mb="0" cb="0"/><line nr="2129" mi="5" ci="0" mb="0" cb="0"/><line nr="2130" mi="6" ci="0" mb="4" cb="0"/><line nr="2131" mi="6" ci="0" mb="0" cb="0"/><line nr="2134" mi="9" ci="0" mb="2" cb="0"/><line nr="2135" mi="4" ci="0" mb="0" cb="0"/><line nr="2136" mi="3" ci="0" mb="0" cb="0"/><line nr="2138" mi="3" ci="0" mb="0" cb="0"/><line nr="2139" mi="3" ci="0" mb="0" cb="0"/><line nr="2140" mi="3" ci="0" mb="0" cb="0"/><line nr="2141" mi="3" ci="0" mb="0" cb="0"/><line nr="2142" mi="3" ci="0" mb="0" cb="0"/><line nr="2143" mi="4" ci="0" mb="0" cb="0"/><line nr="2144" mi="5" ci="0" mb="0" cb="0"/><line nr="2145" mi="3" ci="0" mb="2" cb="0"/><line nr="2148" mi="3" ci="0" mb="0" cb="0"/><line nr="2149" mi="4" ci="0" mb="0" cb="0"/><line nr="2150" mi="3" ci="0" mb="0" cb="0"/><line nr="2151" mi="3" ci="0" mb="0" cb="0"/><line nr="2154" mi="3" ci="0" mb="0" cb="0"/><line nr="2155" mi="4" ci="0" mb="0" cb="0"/><line nr="2156" mi="6" ci="0" mb="0" cb="0"/><line nr="2162" mi="1" ci="0" mb="0" cb="0"/><line nr="2163" mi="3" ci="0" mb="0" cb="0"/><line nr="2164" mi="5" ci="0" mb="0" cb="0"/><line nr="2165" mi="5" ci="0" mb="0" cb="0"/><line nr="2168" mi="0" ci="2" mb="0" cb="0"/><line nr="2170" mi="0" ci="2" mb="0" cb="0"/><line nr="2176" mi="4" ci="0" mb="0" cb="0"/><line nr="2177" mi="1" ci="0" mb="0" cb="0"/><line nr="2178" mi="2" ci="0" mb="0" cb="0"/><line nr="2180" mi="3" ci="0" mb="0" cb="0"/><line nr="2182" mi="3" ci="0" mb="0" cb="0"/><line nr="2183" mi="1" ci="0" mb="0" cb="0"/><line nr="2187" mi="5" ci="0" mb="0" cb="0"/><line nr="2188" mi="4" ci="0" mb="0" cb="0"/><line nr="2190" mi="5" ci="0" mb="0" cb="0"/><line nr="2193" mi="6" ci="0" mb="0" cb="0"/><line nr="2196" mi="6" ci="0" mb="0" cb="0"/><line nr="2199" mi="6" ci="0" mb="0" cb="0"/><line nr="2201" mi="6" ci="0" mb="0" cb="0"/><line nr="2204" mi="7" ci="0" mb="2" cb="0"/><line nr="2205" mi="1" ci="0" mb="0" cb="0"/><line nr="2208" mi="7" ci="0" mb="2" cb="0"/><line nr="2209" mi="1" ci="0" mb="0" cb="0"/><line nr="2213" mi="5" ci="0" mb="0" cb="0"/><line nr="2214" mi="5" ci="0" mb="0" cb="0"/><line nr="2215" mi="5" ci="0" mb="0" cb="0"/><line nr="2217" mi="6" ci="0" mb="0" cb="0"/><line nr="2219" mi="5" ci="0" mb="0" cb="0"/><line nr="2221" mi="6" ci="0" mb="0" cb="0"/><line nr="2224" mi="6" ci="0" mb="0" cb="0"/><line nr="2226" mi="6" ci="0" mb="0" cb="0"/><line nr="2229" mi="7" ci="0" mb="2" cb="0"/><line nr="2230" mi="1" ci="0" mb="0" cb="0"/><line nr="2233" mi="7" ci="0" mb="2" cb="0"/><line nr="2234" mi="1" ci="0" mb="0" cb="0"/><line nr="2238" mi="5" ci="0" mb="0" cb="0"/><line nr="2239" mi="5" ci="0" mb="0" cb="0"/><line nr="2241" mi="6" ci="0" mb="0" cb="0"/><line nr="2244" mi="6" ci="0" mb="0" cb="0"/><line nr="2246" mi="5" ci="0" mb="0" cb="0"/><line nr="2248" mi="6" ci="0" mb="0" cb="0"/><line nr="2250" mi="6" ci="0" mb="0" cb="0"/><line nr="2253" mi="7" ci="0" mb="2" cb="0"/><line nr="2254" mi="1" ci="0" mb="0" cb="0"/><line nr="2257" mi="7" ci="0" mb="2" cb="0"/><line nr="2258" mi="1" ci="0" mb="0" cb="0"/><line nr="2262" mi="5" ci="0" mb="0" cb="0"/><line nr="2263" mi="5" ci="0" mb="0" cb="0"/><line nr="2265" mi="6" ci="0" mb="0" cb="0"/><line nr="2268" mi="6" ci="0" mb="0" cb="0"/><line nr="2270" mi="5" ci="0" mb="0" cb="0"/><line nr="2272" mi="6" ci="0" mb="0" cb="0"/><line nr="2274" mi="6" ci="0" mb="0" cb="0"/><line nr="2277" mi="7" ci="0" mb="2" cb="0"/><line nr="2278" mi="1" ci="0" mb="0" cb="0"/><line nr="2281" mi="7" ci="0" mb="2" cb="0"/><line nr="2282" mi="1" ci="0" mb="0" cb="0"/><line nr="2286" mi="8" ci="0" mb="0" cb="0"/><line nr="2287" mi="5" ci="0" mb="0" cb="0"/><line nr="2290" mi="3" ci="0" mb="0" cb="0"/><line nr="2291" mi="4" ci="0" mb="0" cb="0"/><line nr="2292" mi="10" ci="0" mb="5" cb="0"/><line nr="2294" mi="5" ci="0" mb="0" cb="0"/><line nr="2295" mi="4" ci="0" mb="0" cb="0"/><line nr="2297" mi="3" ci="0" mb="0" cb="0"/><line nr="2298" mi="4" ci="0" mb="0" cb="0"/><line nr="2299" mi="3" ci="0" mb="0" cb="0"/><line nr="2300" mi="4" ci="0" mb="0" cb="0"/><line nr="2301" mi="3" ci="0" mb="0" cb="0"/><line nr="2302" mi="3" ci="0" mb="0" cb="0"/><line nr="2303" mi="3" ci="0" mb="0" cb="0"/><line nr="2304" mi="4" ci="0" mb="0" cb="0"/><line nr="2305" mi="5" ci="0" mb="0" cb="0"/><line nr="2306" mi="3" ci="0" mb="2" cb="0"/><line nr="2308" mi="3" ci="0" mb="0" cb="0"/><line nr="2309" mi="3" ci="0" mb="0" cb="0"/><line nr="2313" mi="3" ci="0" mb="0" cb="0"/><line nr="2314" mi="4" ci="0" mb="0" cb="0"/><line nr="2315" mi="3" ci="0" mb="0" cb="0"/><line nr="2316" mi="3" ci="0" mb="0" cb="0"/><line nr="2318" mi="1" ci="0" mb="0" cb="0"/><line nr="2320" mi="5" ci="0" mb="0" cb="0"/><line nr="2321" mi="4" ci="0" mb="0" cb="0"/><line nr="2323" mi="3" ci="0" mb="0" cb="0"/><line nr="2324" mi="4" ci="0" mb="0" cb="0"/><line nr="2325" mi="3" ci="0" mb="0" cb="0"/><line nr="2326" mi="4" ci="0" mb="0" cb="0"/><line nr="2327" mi="3" ci="0" mb="0" cb="0"/><line nr="2328" mi="4" ci="0" mb="0" cb="0"/><line nr="2329" mi="3" ci="0" mb="0" cb="0"/><line nr="2330" mi="3" ci="0" mb="0" cb="0"/><line nr="2331" mi="3" ci="0" mb="0" cb="0"/><line nr="2332" mi="4" ci="0" mb="0" cb="0"/><line nr="2333" mi="5" ci="0" mb="0" cb="0"/><line nr="2334" mi="3" ci="0" mb="2" cb="0"/><line nr="2336" mi="3" ci="0" mb="0" cb="0"/><line nr="2337" mi="3" ci="0" mb="0" cb="0"/><line nr="2341" mi="3" ci="0" mb="0" cb="0"/><line nr="2342" mi="4" ci="0" mb="0" cb="0"/><line nr="2343" mi="3" ci="0" mb="0" cb="0"/><line nr="2344" mi="3" ci="0" mb="0" cb="0"/><line nr="2346" mi="1" ci="0" mb="0" cb="0"/><line nr="2348" mi="5" ci="0" mb="0" cb="0"/><line nr="2349" mi="4" ci="0" mb="0" cb="0"/><line nr="2351" mi="3" ci="0" mb="0" cb="0"/><line nr="2352" mi="4" ci="0" mb="0" cb="0"/><line nr="2353" mi="3" ci="0" mb="0" cb="0"/><line nr="2354" mi="4" ci="0" mb="0" cb="0"/><line nr="2355" mi="3" ci="0" mb="0" cb="0"/><line nr="2356" mi="3" ci="0" mb="0" cb="0"/><line nr="2357" mi="3" ci="0" mb="0" cb="0"/><line nr="2358" mi="4" ci="0" mb="0" cb="0"/><line nr="2359" mi="5" ci="0" mb="0" cb="0"/><line nr="2360" mi="3" ci="0" mb="2" cb="0"/><line nr="2362" mi="3" ci="0" mb="0" cb="0"/><line nr="2363" mi="3" ci="0" mb="0" cb="0"/><line nr="2367" mi="3" ci="0" mb="0" cb="0"/><line nr="2368" mi="4" ci="0" mb="0" cb="0"/><line nr="2369" mi="5" ci="0" mb="0" cb="0"/><line nr="2370" mi="3" ci="0" mb="2" cb="0"/><line nr="2372" mi="3" ci="0" mb="0" cb="0"/><line nr="2373" mi="4" ci="0" mb="0" cb="0"/><line nr="2374" mi="3" ci="0" mb="0" cb="0"/><line nr="2375" mi="4" ci="0" mb="0" cb="0"/><line nr="2382" mi="5" ci="0" mb="0" cb="0"/><line nr="2383" mi="4" ci="0" mb="0" cb="0"/><line nr="2385" mi="3" ci="0" mb="0" cb="0"/><line nr="2386" mi="4" ci="0" mb="0" cb="0"/><line nr="2387" mi="3" ci="0" mb="0" cb="0"/><line nr="2388" mi="4" ci="0" mb="0" cb="0"/><line nr="2389" mi="3" ci="0" mb="0" cb="0"/><line nr="2390" mi="3" ci="0" mb="0" cb="0"/><line nr="2391" mi="3" ci="0" mb="0" cb="0"/><line nr="2392" mi="4" ci="0" mb="0" cb="0"/><line nr="2393" mi="5" ci="0" mb="0" cb="0"/><line nr="2394" mi="3" ci="0" mb="2" cb="0"/><line nr="2396" mi="3" ci="0" mb="0" cb="0"/><line nr="2397" mi="3" ci="0" mb="0" cb="0"/><line nr="2401" mi="3" ci="0" mb="0" cb="0"/><line nr="2402" mi="4" ci="0" mb="0" cb="0"/><line nr="2403" mi="5" ci="0" mb="0" cb="0"/><line nr="2404" mi="3" ci="0" mb="2" cb="0"/><line nr="2406" mi="3" ci="0" mb="0" cb="0"/><line nr="2407" mi="4" ci="0" mb="0" cb="0"/><line nr="2408" mi="3" ci="0" mb="0" cb="0"/><line nr="2409" mi="3" ci="0" mb="0" cb="0"/><line nr="2417" mi="1" ci="0" mb="0" cb="0"/><line nr="2418" mi="3" ci="0" mb="0" cb="0"/><line nr="2419" mi="5" ci="0" mb="0" cb="0"/><line nr="2420" mi="5" ci="0" mb="0" cb="0"/><line nr="2423" mi="2" ci="0" mb="0" cb="0"/><line nr="2425" mi="2" ci="0" mb="0" cb="0"/><line nr="2430" mi="5" ci="0" mb="0" cb="0"/><line nr="2431" mi="5" ci="0" mb="0" cb="0"/><line nr="2432" mi="5" ci="0" mb="0" cb="0"/><line nr="2434" mi="4" ci="0" mb="0" cb="0"/><line nr="2435" mi="1" ci="0" mb="0" cb="0"/><line nr="2436" mi="2" ci="0" mb="0" cb="0"/><line nr="2439" mi="7" ci="0" mb="2" cb="0"/><line nr="2440" mi="1" ci="0" mb="0" cb="0"/><line nr="2443" mi="7" ci="0" mb="2" cb="0"/><line nr="2444" mi="1" ci="0" mb="0" cb="0"/><line nr="2448" mi="8" ci="0" mb="0" cb="0"/><line nr="2449" mi="5" ci="0" mb="0" cb="0"/><line nr="2451" mi="4" ci="0" mb="0" cb="0"/><line nr="2453" mi="3" ci="0" mb="0" cb="0"/><line nr="2454" mi="4" ci="0" mb="0" cb="0"/><line nr="2455" mi="3" ci="0" mb="0" cb="0"/><line nr="2456" mi="4" ci="0" mb="0" cb="0"/><line nr="2457" mi="3" ci="0" mb="0" cb="0"/><line nr="2458" mi="4" ci="0" mb="0" cb="0"/><line nr="2461" mi="1" ci="0" mb="0" cb="0"/><line nr="2462" mi="3" ci="0" mb="0" cb="0"/><line nr="2463" mi="5" ci="0" mb="0" cb="0"/><line nr="2464" mi="5" ci="0" mb="0" cb="0"/><line nr="2467" mi="2" ci="0" mb="0" cb="0"/><line nr="2469" mi="2" ci="0" mb="0" cb="0"/><line nr="2477" mi="5" ci="0" mb="0" cb="0"/><line nr="2479" mi="4" ci="0" mb="0" cb="0"/><line nr="2482" mi="6" ci="0" mb="0" cb="0"/><line nr="2484" mi="5" ci="0" mb="0" cb="0"/><line nr="2486" mi="6" ci="0" mb="0" cb="0"/><line nr="2488" mi="5" ci="0" mb="0" cb="0"/><line nr="2490" mi="6" ci="0" mb="0" cb="0"/><line nr="2492" mi="5" ci="0" mb="0" cb="0"/><line nr="2493" mi="5" ci="0" mb="0" cb="0"/><line nr="2494" mi="4" ci="0" mb="0" cb="0"/><line nr="2496" mi="5" ci="0" mb="0" cb="0"/><line nr="2499" mi="6" ci="0" mb="0" cb="0"/><line nr="2501" mi="5" ci="0" mb="0" cb="0"/><line nr="2503" mi="6" ci="0" mb="0" cb="0"/><line nr="2505" mi="5" ci="0" mb="0" cb="0"/><line nr="2506" mi="5" ci="0" mb="0" cb="0"/><line nr="2508" mi="6" ci="0" mb="0" cb="0"/><line nr="2511" mi="6" ci="0" mb="0" cb="0"/><line nr="2514" mi="4" ci="0" mb="0" cb="0"/><line nr="2517" mi="6" ci="0" mb="0" cb="0"/><line nr="2520" mi="4" ci="0" mb="0" cb="0"/><line nr="2521" mi="1" ci="0" mb="0" cb="0"/><line nr="2522" mi="2" ci="0" mb="0" cb="0"/><line nr="2525" mi="7" ci="0" mb="2" cb="0"/><line nr="2526" mi="1" ci="0" mb="0" cb="0"/><line nr="2529" mi="7" ci="0" mb="2" cb="0"/><line nr="2530" mi="1" ci="0" mb="0" cb="0"/><line nr="2534" mi="8" ci="0" mb="0" cb="0"/><line nr="2535" mi="5" ci="0" mb="0" cb="0"/><line nr="2538" mi="4" ci="0" mb="0" cb="0"/><line nr="2540" mi="3" ci="0" mb="0" cb="0"/><line nr="2541" mi="4" ci="0" mb="0" cb="0"/><line nr="2542" mi="3" ci="0" mb="0" cb="0"/><line nr="2543" mi="3" ci="0" mb="0" cb="0"/><line nr="2544" mi="3" ci="0" mb="0" cb="0"/><line nr="2545" mi="4" ci="0" mb="0" cb="0"/><line nr="2546" mi="5" ci="0" mb="0" cb="0"/><line nr="2547" mi="3" ci="0" mb="2" cb="0"/><line nr="2550" mi="3" ci="0" mb="0" cb="0"/><line nr="2551" mi="4" ci="0" mb="0" cb="0"/><line nr="2552" mi="3" ci="0" mb="0" cb="0"/><line nr="2553" mi="3" ci="0" mb="0" cb="0"/><line nr="2556" mi="3" ci="0" mb="0" cb="0"/><line nr="2557" mi="4" ci="0" mb="0" cb="0"/><line nr="2558" mi="6" ci="0" mb="0" cb="0"/><line nr="2560" mi="3" ci="0" mb="0" cb="0"/><line nr="2561" mi="4" ci="0" mb="0" cb="0"/><line nr="2562" mi="3" ci="0" mb="0" cb="0"/><line nr="2563" mi="4" ci="0" mb="0" cb="0"/><line nr="2564" mi="3" ci="0" mb="0" cb="0"/><line nr="2565" mi="4" ci="0" mb="0" cb="0"/><line nr="2566" mi="5" ci="0" mb="0" cb="0"/><line nr="2567" mi="3" ci="0" mb="2" cb="0"/><line nr="2569" mi="3" ci="0" mb="0" cb="0"/><line nr="2570" mi="4" ci="0" mb="0" cb="0"/><line nr="2571" mi="3" ci="0" mb="0" cb="0"/><line nr="2572" mi="3" ci="0" mb="0" cb="0"/><line nr="2576" mi="3" ci="0" mb="0" cb="0"/><line nr="2577" mi="4" ci="0" mb="0" cb="0"/><line nr="2578" mi="5" ci="0" mb="0" cb="0"/><line nr="2579" mi="3" ci="0" mb="2" cb="0"/><line nr="2581" mi="3" ci="0" mb="0" cb="0"/><line nr="2582" mi="4" ci="0" mb="0" cb="0"/><line nr="2583" mi="3" ci="0" mb="0" cb="0"/><line nr="2584" mi="5" ci="0" mb="0" cb="0"/><line nr="2588" mi="3" ci="0" mb="0" cb="0"/><line nr="2589" mi="4" ci="0" mb="0" cb="0"/><line nr="2590" mi="5" ci="0" mb="0" cb="0"/><line nr="2591" mi="3" ci="0" mb="2" cb="0"/><line nr="2593" mi="3" ci="0" mb="0" cb="0"/><line nr="2594" mi="4" ci="0" mb="0" cb="0"/><line nr="2595" mi="3" ci="0" mb="0" cb="0"/><line nr="2596" mi="4" ci="0" mb="0" cb="0"/><line nr="2597" mi="3" ci="0" mb="0" cb="0"/><line nr="2598" mi="3" ci="0" mb="0" cb="0"/><line nr="2602" mi="3" ci="0" mb="0" cb="0"/><line nr="2603" mi="4" ci="0" mb="0" cb="0"/><line nr="2604" mi="5" ci="0" mb="0" cb="0"/><line nr="2605" mi="3" ci="0" mb="2" cb="0"/><line nr="2607" mi="3" ci="0" mb="0" cb="0"/><line nr="2608" mi="4" ci="0" mb="0" cb="0"/><line nr="2609" mi="3" ci="0" mb="0" cb="0"/><line nr="2610" mi="4" ci="0" mb="0" cb="0"/><line nr="2611" mi="3" ci="0" mb="0" cb="0"/><line nr="2612" mi="3" ci="0" mb="0" cb="0"/><line nr="2616" mi="3" ci="0" mb="0" cb="0"/><line nr="2617" mi="4" ci="0" mb="0" cb="0"/><line nr="2618" mi="5" ci="0" mb="0" cb="0"/><line nr="2619" mi="3" ci="0" mb="2" cb="0"/><line nr="2621" mi="3" ci="0" mb="0" cb="0"/><line nr="2622" mi="4" ci="0" mb="0" cb="0"/><line nr="2623" mi="3" ci="0" mb="0" cb="0"/><line nr="2624" mi="5" ci="0" mb="0" cb="0"/><line nr="2628" mi="3" ci="0" mb="0" cb="0"/><line nr="2629" mi="4" ci="0" mb="0" cb="0"/><line nr="2630" mi="5" ci="0" mb="0" cb="0"/><line nr="2631" mi="3" ci="0" mb="2" cb="0"/><line nr="2633" mi="3" ci="0" mb="0" cb="0"/><line nr="2634" mi="4" ci="0" mb="0" cb="0"/><line nr="2635" mi="3" ci="0" mb="0" cb="0"/><line nr="2636" mi="3" ci="0" mb="0" cb="0"/><line nr="2640" mi="3" ci="0" mb="0" cb="0"/><line nr="2641" mi="4" ci="0" mb="0" cb="0"/><line nr="2642" mi="5" ci="0" mb="0" cb="0"/><line nr="2643" mi="3" ci="0" mb="2" cb="0"/><line nr="2645" mi="3" ci="0" mb="0" cb="0"/><line nr="2646" mi="3" ci="0" mb="0" cb="0"/><line nr="2652" mi="1" ci="0" mb="0" cb="0"/><line nr="2653" mi="3" ci="0" mb="0" cb="0"/><line nr="2654" mi="5" ci="0" mb="0" cb="0"/><line nr="2655" mi="5" ci="0" mb="0" cb="0"/><line nr="2658" mi="2" ci="0" mb="0" cb="0"/><line nr="2660" mi="2" ci="0" mb="0" cb="0"/><line nr="2665" mi="5" ci="0" mb="0" cb="0"/><line nr="2666" mi="5" ci="0" mb="0" cb="0"/><line nr="2668" mi="4" ci="0" mb="0" cb="0"/><line nr="2669" mi="1" ci="0" mb="0" cb="0"/><line nr="2670" mi="2" ci="0" mb="0" cb="0"/><line nr="2673" mi="7" ci="0" mb="2" cb="0"/><line nr="2674" mi="1" ci="0" mb="0" cb="0"/><line nr="2677" mi="7" ci="0" mb="2" cb="0"/><line nr="2678" mi="1" ci="0" mb="0" cb="0"/><line nr="2682" mi="8" ci="0" mb="0" cb="0"/><line nr="2683" mi="5" ci="0" mb="0" cb="0"/><line nr="2686" mi="4" ci="0" mb="0" cb="0"/><line nr="2688" mi="3" ci="0" mb="0" cb="0"/><line nr="2689" mi="5" ci="0" mb="0" cb="0"/><line nr="2690" mi="6" ci="0" mb="4" cb="0"/><line nr="2691" mi="6" ci="0" mb="0" cb="0"/><line nr="2694" mi="9" ci="0" mb="2" cb="0"/><line nr="2695" mi="4" ci="0" mb="0" cb="0"/><line nr="2696" mi="3" ci="0" mb="0" cb="0"/><line nr="2700" mi="1" ci="0" mb="0" cb="0"/><line nr="2701" mi="3" ci="0" mb="0" cb="0"/><line nr="2702" mi="5" ci="0" mb="0" cb="0"/><line nr="2703" mi="5" ci="0" mb="0" cb="0"/><line nr="2706" mi="2" ci="0" mb="0" cb="0"/><line nr="2708" mi="2" ci="0" mb="0" cb="0"/><line nr="2713" mi="5" ci="0" mb="0" cb="0"/><line nr="2715" mi="6" ci="0" mb="0" cb="0"/><line nr="2718" mi="6" ci="0" mb="0" cb="0"/><line nr="2720" mi="5" ci="0" mb="0" cb="0"/><line nr="2722" mi="4" ci="0" mb="0" cb="0"/><line nr="2723" mi="1" ci="0" mb="0" cb="0"/><line nr="2724" mi="2" ci="0" mb="0" cb="0"/><line nr="2727" mi="7" ci="0" mb="2" cb="0"/><line nr="2728" mi="1" ci="0" mb="0" cb="0"/><line nr="2731" mi="7" ci="0" mb="2" cb="0"/><line nr="2732" mi="1" ci="0" mb="0" cb="0"/><line nr="2736" mi="8" ci="0" mb="0" cb="0"/><line nr="2737" mi="5" ci="0" mb="0" cb="0"/><line nr="2739" mi="4" ci="0" mb="0" cb="0"/><line nr="2741" mi="3" ci="0" mb="0" cb="0"/><line nr="2742" mi="4" ci="0" mb="0" cb="0"/><line nr="2743" mi="3" ci="0" mb="0" cb="0"/><line nr="2744" mi="4" ci="0" mb="0" cb="0"/><line nr="2745" mi="10" ci="0" mb="2" cb="0"/><line nr="2748" mi="3" ci="0" mb="0" cb="0"/><line nr="2749" mi="4" ci="0" mb="0" cb="0"/><line nr="2753" mi="3" ci="0" mb="0" cb="0"/><line nr="2754" mi="3" ci="0" mb="0" cb="0"/><line nr="2755" mi="3" ci="0" mb="0" cb="0"/><line nr="2756" mi="4" ci="0" mb="0" cb="0"/><line nr="2759" mi="1" ci="0" mb="0" cb="0"/><line nr="2760" mi="3" ci="0" mb="0" cb="0"/><line nr="2761" mi="5" ci="0" mb="0" cb="0"/><line nr="2762" mi="5" ci="0" mb="0" cb="0"/><line nr="2765" mi="2" ci="0" mb="0" cb="0"/><line nr="2767" mi="2" ci="0" mb="0" cb="0"/><line nr="2773" mi="4" ci="0" mb="0" cb="0"/><line nr="2776" mi="6" ci="0" mb="0" cb="0"/><line nr="2779" mi="0" ci="4" mb="0" cb="0"/><line nr="2780" mi="0" ci="1" mb="0" cb="0"/><line nr="2781" mi="2" ci="0" mb="0" cb="0"/><line nr="2784" mi="7" ci="0" mb="2" cb="0"/><line nr="2785" mi="1" ci="0" mb="0" cb="0"/><line nr="2788" mi="7" ci="0" mb="2" cb="0"/><line nr="2789" mi="1" ci="0" mb="0" cb="0"/><line nr="2793" mi="0" ci="8" mb="0" cb="0"/><line nr="2794" mi="0" ci="5" mb="0" cb="0"/><line nr="2797" mi="0" ci="4" mb="0" cb="0"/><line nr="2799" mi="0" ci="3" mb="0" cb="0"/><line nr="2800" mi="0" ci="4" mb="0" cb="0"/><line nr="2801" mi="0" ci="3" mb="0" cb="0"/><line nr="2802" mi="0" ci="3" mb="0" cb="0"/><line nr="2803" mi="0" ci="3" mb="0" cb="0"/><line nr="2804" mi="0" ci="4" mb="0" cb="0"/><line nr="2805" mi="0" ci="5" mb="0" cb="0"/><line nr="2806" mi="0" ci="3" mb="0" cb="2"/><line nr="2809" mi="0" ci="3" mb="0" cb="0"/><line nr="2810" mi="0" ci="4" mb="0" cb="0"/><line nr="2811" mi="0" ci="3" mb="0" cb="0"/><line nr="2812" mi="0" ci="3" mb="0" cb="0"/><line nr="2815" mi="0" ci="3" mb="0" cb="0"/><line nr="2816" mi="0" ci="4" mb="0" cb="0"/><line nr="2817" mi="0" ci="6" mb="0" cb="0"/><line nr="2819" mi="0" ci="3" mb="0" cb="0"/><line nr="2820" mi="0" ci="4" mb="0" cb="0"/><line nr="2823" mi="1" ci="0" mb="0" cb="0"/><line nr="2824" mi="3" ci="0" mb="0" cb="0"/><line nr="2825" mi="5" ci="0" mb="0" cb="0"/><line nr="2826" mi="5" ci="0" mb="0" cb="0"/><line nr="2829" mi="0" ci="2" mb="0" cb="0"/><line nr="2831" mi="0" ci="2" mb="0" cb="0"/><line nr="2837" mi="6" ci="0" mb="0" cb="0"/><line nr="2840" mi="6" ci="0" mb="0" cb="0"/><line nr="2843" mi="6" ci="0" mb="0" cb="0"/><line nr="2846" mi="0" ci="4" mb="0" cb="0"/><line nr="2847" mi="0" ci="1" mb="0" cb="0"/><line nr="2848" mi="2" ci="0" mb="0" cb="0"/><line nr="2851" mi="7" ci="0" mb="2" cb="0"/><line nr="2852" mi="1" ci="0" mb="0" cb="0"/><line nr="2855" mi="7" ci="0" mb="2" cb="0"/><line nr="2856" mi="1" ci="0" mb="0" cb="0"/><line nr="2860" mi="0" ci="8" mb="0" cb="0"/><line nr="2861" mi="0" ci="5" mb="0" cb="0"/><line nr="2864" mi="0" ci="4" mb="0" cb="0"/><line nr="2866" mi="0" ci="3" mb="0" cb="0"/><line nr="2867" mi="0" ci="3" mb="0" cb="0"/><line nr="2868" mi="0" ci="3" mb="0" cb="0"/><line nr="2869" mi="0" ci="4" mb="0" cb="0"/><line nr="2870" mi="0" ci="3" mb="0" cb="0"/><line nr="2871" mi="0" ci="4" mb="0" cb="0"/><line nr="2872" mi="0" ci="5" mb="0" cb="0"/><line nr="2873" mi="0" ci="16" mb="1" cb="3"/><line nr="2875" mi="0" ci="3" mb="0" cb="0"/><line nr="2876" mi="0" ci="3" mb="0" cb="0"/><line nr="2882" mi="1" ci="0" mb="0" cb="0"/><line nr="2883" mi="3" ci="0" mb="0" cb="0"/><line nr="2884" mi="5" ci="0" mb="0" cb="0"/><line nr="2885" mi="5" ci="0" mb="0" cb="0"/><line nr="2888" mi="0" ci="2" mb="0" cb="0"/><line nr="2890" mi="0" ci="2" mb="0" cb="0"/><line nr="2895" mi="5" ci="0" mb="0" cb="0"/><line nr="2896" mi="5" ci="0" mb="0" cb="0"/><line nr="2897" mi="5" ci="0" mb="0" cb="0"/><line nr="2898" mi="5" ci="0" mb="0" cb="0"/><line nr="2899" mi="5" ci="0" mb="0" cb="0"/><line nr="2901" mi="0" ci="4" mb="0" cb="0"/><line nr="2902" mi="0" ci="1" mb="0" cb="0"/><line nr="2903" mi="2" ci="0" mb="0" cb="0"/><line nr="2906" mi="7" ci="0" mb="2" cb="0"/><line nr="2907" mi="1" ci="0" mb="0" cb="0"/><line nr="2910" mi="7" ci="0" mb="2" cb="0"/><line nr="2911" mi="1" ci="0" mb="0" cb="0"/><line nr="2915" mi="0" ci="8" mb="0" cb="0"/><line nr="2916" mi="0" ci="5" mb="0" cb="0"/><line nr="2919" mi="0" ci="3" mb="0" cb="0"/><line nr="2920" mi="0" ci="4" mb="0" cb="0"/><line nr="2921" mi="0" ci="5" mb="3" cb="1"/><line nr="2924" mi="0" ci="4" mb="0" cb="0"/><line nr="2927" mi="0" ci="3" mb="0" cb="0"/><line nr="2928" mi="0" ci="4" mb="0" cb="0"/><line nr="2929" mi="0" ci="5" mb="0" cb="0"/><line nr="2930" mi="0" ci="3" mb="0" cb="2"/><line nr="2932" mi="0" ci="3" mb="0" cb="0"/><line nr="2933" mi="0" ci="4" mb="0" cb="0"/><line nr="2937" mi="0" ci="3" mb="0" cb="0"/><line nr="2938" mi="0" ci="4" mb="0" cb="0"/><line nr="2941" mi="0" ci="1" mb="0" cb="0"/><line nr="2943" mi="4" ci="0" mb="0" cb="0"/><line nr="2945" mi="3" ci="0" mb="0" cb="0"/><line nr="2946" mi="4" ci="0" mb="0" cb="0"/><line nr="2948" mi="1" ci="0" mb="0" cb="0"/><line nr="2950" mi="4" ci="0" mb="0" cb="0"/><line nr="2952" mi="3" ci="0" mb="0" cb="0"/><line nr="2953" mi="4" ci="0" mb="0" cb="0"/><line nr="2954" mi="3" ci="0" mb="0" cb="0"/><line nr="2955" mi="4" ci="0" mb="0" cb="0"/><line nr="2956" mi="3" ci="0" mb="0" cb="0"/><line nr="2957" mi="4" ci="0" mb="0" cb="0"/><line nr="2958" mi="3" ci="0" mb="0" cb="0"/><line nr="2959" mi="4" ci="0" mb="0" cb="0"/><line nr="2961" mi="1" ci="0" mb="0" cb="0"/><line nr="2963" mi="5" ci="0" mb="0" cb="0"/><line nr="2966" mi="1" ci="0" mb="0" cb="0"/><line nr="2967" mi="3" ci="0" mb="0" cb="0"/><line nr="2968" mi="5" ci="0" mb="0" cb="0"/><line nr="2969" mi="5" ci="0" mb="0" cb="0"/><line nr="2972" mi="0" ci="2" mb="0" cb="0"/><line nr="2974" mi="0" ci="2" mb="0" cb="0"/><line nr="2980" mi="4" ci="0" mb="0" cb="0"/><line nr="2983" mi="6" ci="0" mb="0" cb="0"/><line nr="2986" mi="0" ci="4" mb="0" cb="0"/><line nr="2987" mi="0" ci="1" mb="0" cb="0"/><line nr="2988" mi="2" ci="0" mb="0" cb="0"/><line nr="2991" mi="7" ci="0" mb="2" cb="0"/><line nr="2992" mi="1" ci="0" mb="0" cb="0"/><line nr="2995" mi="7" ci="0" mb="2" cb="0"/><line nr="2996" mi="1" ci="0" mb="0" cb="0"/><line nr="3000" mi="0" ci="8" mb="0" cb="0"/><line nr="3001" mi="0" ci="5" mb="0" cb="0"/><line nr="3004" mi="0" ci="4" mb="0" cb="0"/><line nr="3006" mi="0" ci="3" mb="0" cb="0"/><line nr="3007" mi="0" ci="4" mb="0" cb="0"/><line nr="3008" mi="0" ci="3" mb="0" cb="0"/><line nr="3009" mi="0" ci="3" mb="0" cb="0"/><line nr="3010" mi="0" ci="3" mb="0" cb="0"/><line nr="3011" mi="0" ci="4" mb="0" cb="0"/><line nr="3012" mi="0" ci="5" mb="0" cb="0"/><line nr="3013" mi="0" ci="3" mb="0" cb="2"/><line nr="3016" mi="0" ci="3" mb="0" cb="0"/><line nr="3017" mi="0" ci="4" mb="0" cb="0"/><line nr="3018" mi="0" ci="3" mb="0" cb="0"/><line nr="3019" mi="0" ci="3" mb="0" cb="0"/><line nr="3022" mi="0" ci="3" mb="0" cb="0"/><line nr="3023" mi="0" ci="4" mb="0" cb="0"/><line nr="3024" mi="0" ci="6" mb="0" cb="0"/><line nr="3026" mi="0" ci="3" mb="0" cb="0"/><line nr="3027" mi="0" ci="4" mb="0" cb="0"/><line nr="3030" mi="1" ci="0" mb="0" cb="0"/><line nr="3031" mi="3" ci="0" mb="0" cb="0"/><line nr="3032" mi="5" ci="0" mb="0" cb="0"/><line nr="3033" mi="5" ci="0" mb="0" cb="0"/><line nr="3036" mi="0" ci="2" mb="0" cb="0"/><line nr="3038" mi="0" ci="2" mb="0" cb="0"/><line nr="3043" mi="5" ci="0" mb="0" cb="0"/><line nr="3045" mi="6" ci="0" mb="0" cb="0"/><line nr="3048" mi="6" ci="0" mb="0" cb="0"/><line nr="3050" mi="5" ci="0" mb="0" cb="0"/><line nr="3052" mi="0" ci="4" mb="0" cb="0"/><line nr="3053" mi="0" ci="1" mb="0" cb="0"/><line nr="3054" mi="2" ci="0" mb="0" cb="0"/><line nr="3057" mi="7" ci="0" mb="2" cb="0"/><line nr="3058" mi="1" ci="0" mb="0" cb="0"/><line nr="3061" mi="7" ci="0" mb="2" cb="0"/><line nr="3062" mi="1" ci="0" mb="0" cb="0"/><line nr="3066" mi="0" ci="8" mb="0" cb="0"/><line nr="3067" mi="0" ci="5" mb="0" cb="0"/><line nr="3069" mi="0" ci="4" mb="0" cb="0"/><line nr="3071" mi="0" ci="3" mb="0" cb="0"/><line nr="3072" mi="0" ci="4" mb="0" cb="0"/><line nr="3073" mi="0" ci="5" mb="2" cb="1"/><line nr="3124" mi="0" ci="3" mb="0" cb="0"/><line nr="3125" mi="0" ci="3" mb="0" cb="0"/><line nr="3127" mi="0" ci="1" mb="0" cb="0"/><line nr="3130" mi="3" ci="0" mb="0" cb="0"/><line nr="3131" mi="4" ci="0" mb="0" cb="0"/><line nr="3133" mi="1" ci="0" mb="0" cb="0"/><line nr="3135" mi="5" ci="0" mb="0" cb="0"/><line nr="3137" mi="0" ci="3" mb="0" cb="0"/><line nr="3138" mi="0" ci="4" mb="0" cb="0"/><line nr="3139" mi="0" ci="3" mb="0" cb="0"/><line nr="3140" mi="0" ci="3" mb="0" cb="0"/><line nr="3143" mi="1" ci="0" mb="0" cb="0"/><line nr="3144" mi="3" ci="0" mb="0" cb="0"/><line nr="3145" mi="5" ci="0" mb="0" cb="0"/><line nr="3146" mi="5" ci="0" mb="0" cb="0"/><line nr="3149" mi="0" ci="2" mb="0" cb="0"/><line nr="3151" mi="0" ci="2" mb="0" cb="0"/><line nr="3156" mi="5" ci="0" mb="0" cb="0"/><line nr="3157" mi="5" ci="0" mb="0" cb="0"/><line nr="3159" mi="6" ci="0" mb="0" cb="0"/><line nr="3162" mi="6" ci="0" mb="0" cb="0"/><line nr="3165" mi="4" ci="0" mb="0" cb="0"/><line nr="3166" mi="1" ci="0" mb="0" cb="0"/><line nr="3167" mi="2" ci="0" mb="0" cb="0"/><line nr="3170" mi="7" ci="0" mb="2" cb="0"/><line nr="3171" mi="1" ci="0" mb="0" cb="0"/><line nr="3174" mi="7" ci="0" mb="2" cb="0"/><line nr="3175" mi="1" ci="0" mb="0" cb="0"/><line nr="3179" mi="8" ci="0" mb="0" cb="0"/><line nr="3180" mi="5" ci="0" mb="0" cb="0"/><line nr="3183" mi="4" ci="0" mb="0" cb="0"/><line nr="3185" mi="3" ci="0" mb="0" cb="0"/><line nr="3186" mi="4" ci="0" mb="0" cb="0"/><line nr="3187" mi="5" ci="0" mb="0" cb="0"/><line nr="3188" mi="3" ci="0" mb="2" cb="0"/><line nr="3190" mi="3" ci="0" mb="0" cb="0"/><line nr="3191" mi="4" ci="0" mb="0" cb="0"/><line nr="3192" mi="3" ci="0" mb="0" cb="0"/><line nr="3193" mi="4" ci="0" mb="0" cb="0"/><line nr="3197" mi="3" ci="0" mb="0" cb="0"/><line nr="3198" mi="4" ci="0" mb="0" cb="0"/><line nr="3199" mi="5" ci="0" mb="0" cb="0"/><line nr="3200" mi="6" ci="0" mb="4" cb="0"/><line nr="3202" mi="3" ci="0" mb="0" cb="0"/><line nr="3203" mi="3" ci="0" mb="0" cb="0"/><line nr="3207" mi="3" ci="0" mb="0" cb="0"/><line nr="3208" mi="4" ci="0" mb="0" cb="0"/><line nr="3209" mi="5" ci="0" mb="0" cb="0"/><line nr="3210" mi="3" ci="0" mb="2" cb="0"/><line nr="3212" mi="3" ci="0" mb="0" cb="0"/><line nr="3213" mi="3" ci="0" mb="0" cb="0"/><line nr="3219" mi="1" ci="0" mb="0" cb="0"/><line nr="3220" mi="3" ci="0" mb="0" cb="0"/><line nr="3221" mi="5" ci="0" mb="0" cb="0"/><line nr="3222" mi="5" ci="0" mb="0" cb="0"/><line nr="3225" mi="2" ci="0" mb="0" cb="0"/><line nr="3227" mi="2" ci="0" mb="0" cb="0"/><line nr="3233" mi="6" ci="0" mb="0" cb="0"/><line nr="3235" mi="5" ci="0" mb="0" cb="0"/><line nr="3236" mi="5" ci="0" mb="0" cb="0"/><line nr="3238" mi="4" ci="0" mb="0" cb="0"/><line nr="3239" mi="1" ci="0" mb="0" cb="0"/><line nr="3240" mi="2" ci="0" mb="0" cb="0"/><line nr="3243" mi="7" ci="0" mb="2" cb="0"/><line nr="3244" mi="1" ci="0" mb="0" cb="0"/><line nr="3247" mi="7" ci="0" mb="2" cb="0"/><line nr="3248" mi="1" ci="0" mb="0" cb="0"/><line nr="3252" mi="8" ci="0" mb="0" cb="0"/><line nr="3253" mi="5" ci="0" mb="0" cb="0"/><line nr="3256" mi="4" ci="0" mb="0" cb="0"/><line nr="3258" mi="3" ci="0" mb="0" cb="0"/><line nr="3259" mi="5" ci="0" mb="0" cb="0"/><line nr="3260" mi="6" ci="0" mb="4" cb="0"/><line nr="3261" mi="6" ci="0" mb="0" cb="0"/><line nr="3264" mi="9" ci="0" mb="2" cb="0"/><line nr="3265" mi="4" ci="0" mb="0" cb="0"/><line nr="3266" mi="3" ci="0" mb="0" cb="0"/><line nr="3268" mi="3" ci="0" mb="0" cb="0"/><line nr="3269" mi="3" ci="0" mb="0" cb="0"/><line nr="3272" mi="1" ci="0" mb="0" cb="0"/><line nr="3273" mi="3" ci="0" mb="0" cb="0"/><line nr="3274" mi="5" ci="0" mb="0" cb="0"/><line nr="3275" mi="5" ci="0" mb="0" cb="0"/><line nr="3278" mi="2" ci="0" mb="0" cb="0"/><line nr="3280" mi="2" ci="0" mb="0" cb="0"/><line nr="3285" mi="5" ci="0" mb="0" cb="0"/><line nr="3287" mi="6" ci="0" mb="0" cb="0"/><line nr="3290" mi="4" ci="0" mb="0" cb="0"/><line nr="3291" mi="1" ci="0" mb="0" cb="0"/><line nr="3292" mi="2" ci="0" mb="0" cb="0"/><line nr="3295" mi="7" ci="0" mb="2" cb="0"/><line nr="3296" mi="1" ci="0" mb="0" cb="0"/><line nr="3299" mi="7" ci="0" mb="2" cb="0"/><line nr="3300" mi="1" ci="0" mb="0" cb="0"/><line nr="3304" mi="8" ci="0" mb="0" cb="0"/><line nr="3305" mi="5" ci="0" mb="0" cb="0"/><line nr="3307" mi="4" ci="0" mb="0" cb="0"/><line nr="3309" mi="3" ci="0" mb="0" cb="0"/><line nr="3310" mi="4" ci="0" mb="0" cb="0"/><line nr="3311" mi="3" ci="0" mb="0" cb="0"/><line nr="3312" mi="3" ci="0" mb="0" cb="0"/><line nr="3315" mi="1" ci="0" mb="0" cb="0"/><line nr="3316" mi="3" ci="0" mb="0" cb="0"/><line nr="3317" mi="5" ci="0" mb="0" cb="0"/><line nr="3318" mi="5" ci="0" mb="0" cb="0"/><line nr="3321" mi="2" ci="0" mb="0" cb="0"/><line nr="3323" mi="2" ci="0" mb="0" cb="0"/><line nr="3328" mi="5" ci="0" mb="0" cb="0"/><line nr="3330" mi="6" ci="0" mb="0" cb="0"/><line nr="3333" mi="6" ci="0" mb="0" cb="0"/><line nr="3336" mi="4" ci="0" mb="0" cb="0"/><line nr="3337" mi="1" ci="0" mb="0" cb="0"/><line nr="3338" mi="2" ci="0" mb="0" cb="0"/><line nr="3341" mi="7" ci="0" mb="2" cb="0"/><line nr="3342" mi="1" ci="0" mb="0" cb="0"/><line nr="3345" mi="7" ci="0" mb="2" cb="0"/><line nr="3346" mi="1" ci="0" mb="0" cb="0"/><line nr="3350" mi="8" ci="0" mb="0" cb="0"/><line nr="3351" mi="5" ci="0" mb="0" cb="0"/><line nr="3353" mi="4" ci="0" mb="0" cb="0"/><line nr="3355" mi="3" ci="0" mb="0" cb="0"/><line nr="3356" mi="4" ci="0" mb="0" cb="0"/><line nr="3357" mi="3" ci="0" mb="0" cb="0"/><line nr="3358" mi="3" ci="0" mb="0" cb="0"/><line nr="3359" mi="3" ci="0" mb="0" cb="0"/><line nr="3360" mi="3" ci="0" mb="0" cb="0"/><line nr="3363" mi="1" ci="0" mb="0" cb="0"/><line nr="3364" mi="3" ci="0" mb="0" cb="0"/><line nr="3365" mi="5" ci="0" mb="0" cb="0"/><line nr="3366" mi="5" ci="0" mb="0" cb="0"/><line nr="3369" mi="2" ci="0" mb="0" cb="0"/><line nr="3371" mi="2" ci="0" mb="0" cb="0"/><line nr="3376" mi="5" ci="0" mb="0" cb="0"/><line nr="3377" mi="5" ci="0" mb="0" cb="0"/><line nr="3379" mi="6" ci="0" mb="0" cb="0"/><line nr="3382" mi="6" ci="0" mb="0" cb="0"/><line nr="3385" mi="4" ci="0" mb="0" cb="0"/><line nr="3386" mi="1" ci="0" mb="0" cb="0"/><line nr="3387" mi="2" ci="0" mb="0" cb="0"/><line nr="3390" mi="7" ci="0" mb="2" cb="0"/><line nr="3391" mi="1" ci="0" mb="0" cb="0"/><line nr="3394" mi="7" ci="0" mb="2" cb="0"/><line nr="3395" mi="1" ci="0" mb="0" cb="0"/><line nr="3399" mi="8" ci="0" mb="0" cb="0"/><line nr="3400" mi="5" ci="0" mb="0" cb="0"/><line nr="3402" mi="4" ci="0" mb="0" cb="0"/><line nr="3404" mi="3" ci="0" mb="0" cb="0"/><line nr="3405" mi="4" ci="0" mb="0" cb="0"/><line nr="3406" mi="3" ci="0" mb="0" cb="0"/><line nr="3407" mi="4" ci="0" mb="0" cb="0"/><line nr="3408" mi="3" ci="0" mb="0" cb="0"/><line nr="3409" mi="3" ci="0" mb="0" cb="0"/><line nr="3410" mi="3" ci="0" mb="0" cb="0"/><line nr="3411" mi="3" ci="0" mb="0" cb="0"/><line nr="3414" mi="1" ci="0" mb="0" cb="0"/><line nr="3415" mi="3" ci="0" mb="0" cb="0"/><line nr="3416" mi="5" ci="0" mb="0" cb="0"/><line nr="3417" mi="5" ci="0" mb="0" cb="0"/><line nr="3420" mi="2" ci="0" mb="0" cb="0"/><line nr="3422" mi="2" ci="0" mb="0" cb="0"/><line nr="3428" mi="6" ci="0" mb="0" cb="0"/><line nr="3431" mi="6" ci="0" mb="0" cb="0"/><line nr="3434" mi="6" ci="0" mb="0" cb="0"/><line nr="3436" mi="5" ci="0" mb="0" cb="0"/><line nr="3438" mi="4" ci="0" mb="0" cb="0"/><line nr="3439" mi="1" ci="0" mb="0" cb="0"/><line nr="3440" mi="2" ci="0" mb="0" cb="0"/><line nr="3443" mi="7" ci="0" mb="2" cb="0"/><line nr="3444" mi="1" ci="0" mb="0" cb="0"/><line nr="3447" mi="7" ci="0" mb="2" cb="0"/><line nr="3448" mi="1" ci="0" mb="0" cb="0"/><line nr="3452" mi="8" ci="0" mb="0" cb="0"/><line nr="3453" mi="5" ci="0" mb="0" cb="0"/><line nr="3456" mi="4" ci="0" mb="0" cb="0"/><line nr="3458" mi="3" ci="0" mb="0" cb="0"/><line nr="3459" mi="4" ci="0" mb="0" cb="0"/><line nr="3460" mi="5" ci="0" mb="0" cb="0"/><line nr="3461" mi="3" ci="0" mb="2" cb="0"/><line nr="3463" mi="3" ci="0" mb="0" cb="0"/><line nr="3464" mi="4" ci="0" mb="0" cb="0"/><line nr="3468" mi="3" ci="0" mb="0" cb="0"/><line nr="3469" mi="4" ci="0" mb="0" cb="0"/><line nr="3470" mi="5" ci="0" mb="4" cb="0"/><line nr="3473" mi="3" ci="0" mb="0" cb="0"/><line nr="3474" mi="3" ci="0" mb="0" cb="0"/><line nr="3476" mi="1" ci="0" mb="0" cb="0"/><line nr="3479" mi="3" ci="0" mb="0" cb="0"/><line nr="3480" mi="3" ci="0" mb="0" cb="0"/><line nr="3482" mi="1" ci="0" mb="0" cb="0"/><line nr="3485" mi="3" ci="0" mb="0" cb="0"/><line nr="3486" mi="3" ci="0" mb="0" cb="0"/><line nr="3488" mi="1" ci="0" mb="0" cb="0"/><line nr="3490" mi="5" ci="0" mb="0" cb="0"/><line nr="3494" mi="1" ci="0" mb="0" cb="0"/><line nr="3495" mi="3" ci="0" mb="0" cb="0"/><line nr="3496" mi="5" ci="0" mb="0" cb="0"/><line nr="3497" mi="5" ci="0" mb="0" cb="0"/><line nr="3500" mi="2" ci="0" mb="0" cb="0"/><line nr="3502" mi="2" ci="0" mb="0" cb="0"/><line nr="3507" mi="5" ci="0" mb="0" cb="0"/><line nr="3508" mi="5" ci="0" mb="0" cb="0"/><line nr="3510" mi="6" ci="0" mb="0" cb="0"/><line nr="3513" mi="6" ci="0" mb="0" cb="0"/><line nr="3516" mi="6" ci="0" mb="0" cb="0"/><line nr="3519" mi="6" ci="0" mb="0" cb="0"/><line nr="3522" mi="4" ci="0" mb="0" cb="0"/><line nr="3523" mi="1" ci="0" mb="0" cb="0"/><line nr="3524" mi="2" ci="0" mb="0" cb="0"/><line nr="3527" mi="7" ci="0" mb="2" cb="0"/><line nr="3528" mi="1" ci="0" mb="0" cb="0"/><line nr="3531" mi="7" ci="0" mb="2" cb="0"/><line nr="3532" mi="1" ci="0" mb="0" cb="0"/><line nr="3536" mi="8" ci="0" mb="0" cb="0"/><line nr="3537" mi="5" ci="0" mb="0" cb="0"/><line nr="3540" mi="4" ci="0" mb="0" cb="0"/><line nr="3542" mi="3" ci="0" mb="0" cb="0"/><line nr="3543" mi="4" ci="0" mb="0" cb="0"/><line nr="3544" mi="3" ci="0" mb="0" cb="0"/><line nr="3545" mi="4" ci="0" mb="0" cb="0"/><line nr="3546" mi="3" ci="0" mb="0" cb="0"/><line nr="3547" mi="4" ci="0" mb="0" cb="0"/><line nr="3548" mi="3" ci="0" mb="0" cb="0"/><line nr="3549" mi="3" ci="0" mb="0" cb="0"/><line nr="3550" mi="3" ci="0" mb="0" cb="0"/><line nr="3551" mi="3" ci="0" mb="0" cb="0"/><line nr="3552" mi="3" ci="0" mb="0" cb="0"/><line nr="3553" mi="4" ci="0" mb="0" cb="0"/><line nr="3554" mi="10" ci="0" mb="2" cb="0"/><line nr="3557" mi="3" ci="0" mb="0" cb="0"/><line nr="3558" mi="4" ci="0" mb="0" cb="0"/><line nr="3559" mi="3" ci="0" mb="0" cb="0"/><line nr="3560" mi="3" ci="0" mb="0" cb="0"/><line nr="3564" mi="3" ci="0" mb="0" cb="0"/><line nr="3565" mi="4" ci="0" mb="0" cb="0"/><line nr="3566" mi="5" ci="0" mb="0" cb="0"/><line nr="3567" mi="3" ci="0" mb="2" cb="0"/><line nr="3569" mi="3" ci="0" mb="0" cb="0"/><line nr="3570" mi="4" ci="0" mb="0" cb="0"/><line nr="3571" mi="3" ci="0" mb="0" cb="0"/><line nr="3572" mi="3" ci="0" mb="0" cb="0"/><line nr="3576" mi="3" ci="0" mb="0" cb="0"/><line nr="3577" mi="4" ci="0" mb="0" cb="0"/><line nr="3580" mi="1" ci="0" mb="0" cb="0"/><line nr="3581" mi="3" ci="0" mb="0" cb="0"/><line nr="3582" mi="5" ci="0" mb="0" cb="0"/><line nr="3583" mi="5" ci="0" mb="0" cb="0"/><line nr="3586" mi="2" ci="0" mb="0" cb="0"/><line nr="3588" mi="2" ci="0" mb="0" cb="0"/><line nr="3593" mi="5" ci="0" mb="0" cb="0"/><line nr="3594" mi="5" ci="0" mb="0" cb="0"/><line nr="3596" mi="4" ci="0" mb="0" cb="0"/><line nr="3599" mi="6" ci="0" mb="0" cb="0"/><line nr="3602" mi="4" ci="0" mb="0" cb="0"/><line nr="3605" mi="6" ci="0" mb="0" cb="0"/><line nr="3607" mi="5" ci="0" mb="0" cb="0"/><line nr="3608" mi="5" ci="0" mb="0" cb="0"/><line nr="3610" mi="6" ci="0" mb="0" cb="0"/><line nr="3613" mi="6" ci="0" mb="0" cb="0"/><line nr="3616" mi="4" ci="0" mb="0" cb="0"/><line nr="3617" mi="1" ci="0" mb="0" cb="0"/><line nr="3618" mi="2" ci="0" mb="0" cb="0"/><line nr="3621" mi="7" ci="0" mb="2" cb="0"/><line nr="3622" mi="1" ci="0" mb="0" cb="0"/><line nr="3625" mi="7" ci="0" mb="2" cb="0"/><line nr="3626" mi="1" ci="0" mb="0" cb="0"/><line nr="3630" mi="8" ci="0" mb="0" cb="0"/><line nr="3631" mi="5" ci="0" mb="0" cb="0"/><line nr="3634" mi="4" ci="0" mb="0" cb="0"/><line nr="3636" mi="3" ci="0" mb="0" cb="0"/><line nr="3637" mi="4" ci="0" mb="0" cb="0"/><line nr="3638" mi="3" ci="0" mb="0" cb="0"/><line nr="3639" mi="4" ci="0" mb="0" cb="0"/><line nr="3640" mi="3" ci="0" mb="0" cb="0"/><line nr="3641" mi="4" ci="0" mb="0" cb="0"/><line nr="3642" mi="3" ci="0" mb="0" cb="0"/><line nr="3643" mi="3" ci="0" mb="0" cb="0"/><line nr="3644" mi="3" ci="0" mb="0" cb="0"/><line nr="3645" mi="3" ci="0" mb="0" cb="0"/><line nr="3646" mi="3" ci="0" mb="0" cb="0"/><line nr="3647" mi="4" ci="0" mb="0" cb="0"/><line nr="3648" mi="3" ci="0" mb="0" cb="0"/><line nr="3649" mi="4" ci="0" mb="0" cb="0"/><line nr="3650" mi="3" ci="0" mb="0" cb="0"/><line nr="3651" mi="4" ci="0" mb="0" cb="0"/><line nr="3652" mi="3" ci="0" mb="0" cb="0"/><line nr="3653" mi="3" ci="0" mb="0" cb="0"/><line nr="3654" mi="3" ci="0" mb="0" cb="0"/><line nr="3655" mi="3" ci="0" mb="0" cb="0"/><line nr="3656" mi="3" ci="0" mb="0" cb="0"/><line nr="3657" mi="4" ci="0" mb="0" cb="0"/><line nr="3658" mi="10" ci="0" mb="2" cb="0"/><line nr="3661" mi="3" ci="0" mb="0" cb="0"/><line nr="3662" mi="4" ci="0" mb="0" cb="0"/><line nr="3663" mi="3" ci="0" mb="0" cb="0"/><line nr="3664" mi="3" ci="0" mb="0" cb="0"/><line nr="3668" mi="3" ci="0" mb="0" cb="0"/><line nr="3669" mi="4" ci="0" mb="0" cb="0"/><line nr="3670" mi="5" ci="0" mb="0" cb="0"/><line nr="3671" mi="3" ci="0" mb="2" cb="0"/><line nr="3673" mi="3" ci="0" mb="0" cb="0"/><line nr="3674" mi="4" ci="0" mb="0" cb="0"/><line nr="3675" mi="3" ci="0" mb="0" cb="0"/><line nr="3676" mi="3" ci="0" mb="0" cb="0"/><line nr="3680" mi="3" ci="0" mb="0" cb="0"/><line nr="3681" mi="4" ci="0" mb="0" cb="0"/><line nr="3684" mi="1" ci="0" mb="0" cb="0"/><line nr="3685" mi="3" ci="0" mb="0" cb="0"/><line nr="3686" mi="5" ci="0" mb="0" cb="0"/><line nr="3687" mi="5" ci="0" mb="0" cb="0"/><line nr="3690" mi="2" ci="0" mb="0" cb="0"/><line nr="3692" mi="2" ci="0" mb="0" cb="0"/><line nr="3697" mi="5" ci="0" mb="0" cb="0"/><line nr="3699" mi="6" ci="0" mb="0" cb="0"/><line nr="3702" mi="6" ci="0" mb="0" cb="0"/><line nr="3705" mi="6" ci="0" mb="0" cb="0"/><line nr="3708" mi="6" ci="0" mb="0" cb="0"/><line nr="3711" mi="4" ci="0" mb="0" cb="0"/><line nr="3712" mi="1" ci="0" mb="0" cb="0"/><line nr="3713" mi="2" ci="0" mb="0" cb="0"/><line nr="3716" mi="7" ci="0" mb="2" cb="0"/><line nr="3717" mi="1" ci="0" mb="0" cb="0"/><line nr="3720" mi="7" ci="0" mb="2" cb="0"/><line nr="3721" mi="1" ci="0" mb="0" cb="0"/><line nr="3725" mi="8" ci="0" mb="0" cb="0"/><line nr="3726" mi="5" ci="0" mb="0" cb="0"/><line nr="3729" mi="4" ci="0" mb="0" cb="0"/><line nr="3731" mi="3" ci="0" mb="0" cb="0"/><line nr="3732" mi="4" ci="0" mb="0" cb="0"/><line nr="3733" mi="3" ci="0" mb="0" cb="0"/><line nr="3734" mi="4" ci="0" mb="0" cb="0"/><line nr="3735" mi="3" ci="0" mb="0" cb="0"/><line nr="3736" mi="3" ci="0" mb="0" cb="0"/><line nr="3737" mi="3" ci="0" mb="0" cb="0"/><line nr="3738" mi="3" ci="0" mb="0" cb="0"/><line nr="3739" mi="3" ci="0" mb="0" cb="0"/><line nr="3740" mi="4" ci="0" mb="0" cb="0"/><line nr="3741" mi="10" ci="0" mb="2" cb="0"/><line nr="3744" mi="3" ci="0" mb="0" cb="0"/><line nr="3745" mi="4" ci="0" mb="0" cb="0"/><line nr="3746" mi="3" ci="0" mb="0" cb="0"/><line nr="3747" mi="3" ci="0" mb="0" cb="0"/><line nr="3751" mi="3" ci="0" mb="0" cb="0"/><line nr="3752" mi="4" ci="0" mb="0" cb="0"/><line nr="3753" mi="5" ci="0" mb="0" cb="0"/><line nr="3754" mi="3" ci="0" mb="2" cb="0"/><line nr="3756" mi="3" ci="0" mb="0" cb="0"/><line nr="3757" mi="4" ci="0" mb="0" cb="0"/><line nr="3758" mi="3" ci="0" mb="0" cb="0"/><line nr="3759" mi="3" ci="0" mb="0" cb="0"/><line nr="3763" mi="3" ci="0" mb="0" cb="0"/><line nr="3764" mi="4" ci="0" mb="0" cb="0"/><line nr="3767" mi="1" ci="0" mb="0" cb="0"/><line nr="3768" mi="3" ci="0" mb="0" cb="0"/><line nr="3769" mi="5" ci="0" mb="0" cb="0"/><line nr="3770" mi="5" ci="0" mb="0" cb="0"/><line nr="3773" mi="2" ci="0" mb="0" cb="0"/><line nr="3775" mi="2" ci="0" mb="0" cb="0"/><line nr="3780" mi="5" ci="0" mb="0" cb="0"/><line nr="3781" mi="5" ci="0" mb="0" cb="0"/><line nr="3782" mi="5" ci="0" mb="0" cb="0"/><line nr="3783" mi="5" ci="0" mb="0" cb="0"/><line nr="3784" mi="5" ci="0" mb="0" cb="0"/><line nr="3785" mi="5" ci="0" mb="0" cb="0"/><line nr="3786" mi="5" ci="0" mb="0" cb="0"/><line nr="3787" mi="5" ci="0" mb="0" cb="0"/><line nr="3788" mi="5" ci="0" mb="0" cb="0"/><line nr="3789" mi="5" ci="0" mb="0" cb="0"/><line nr="3791" mi="4" ci="0" mb="0" cb="0"/><line nr="3792" mi="1" ci="0" mb="0" cb="0"/><line nr="3793" mi="2" ci="0" mb="0" cb="0"/><line nr="3796" mi="7" ci="0" mb="2" cb="0"/><line nr="3797" mi="1" ci="0" mb="0" cb="0"/><line nr="3800" mi="7" ci="0" mb="2" cb="0"/><line nr="3801" mi="1" ci="0" mb="0" cb="0"/><line nr="3805" mi="8" ci="0" mb="0" cb="0"/><line nr="3806" mi="5" ci="0" mb="0" cb="0"/><line nr="3809" mi="4" ci="0" mb="0" cb="0"/><line nr="3811" mi="3" ci="0" mb="0" cb="0"/><line nr="3812" mi="5" ci="0" mb="0" cb="0"/><line nr="3813" mi="12" ci="0" mb="4" cb="0"/><line nr="3814" mi="6" ci="0" mb="0" cb="0"/><line nr="3817" mi="9" ci="0" mb="2" cb="0"/><line nr="3818" mi="4" ci="0" mb="0" cb="0"/><line nr="3819" mi="3" ci="0" mb="0" cb="0"/><line nr="3823" mi="1" ci="0" mb="0" cb="0"/><line nr="3824" mi="3" ci="0" mb="0" cb="0"/><line nr="3825" mi="5" ci="0" mb="0" cb="0"/><line nr="3826" mi="5" ci="0" mb="0" cb="0"/><line nr="3829" mi="2" ci="0" mb="0" cb="0"/><line nr="3831" mi="2" ci="0" mb="0" cb="0"/><line nr="3837" mi="4" ci="0" mb="0" cb="0"/><line nr="3840" mi="6" ci="0" mb="0" cb="0"/><line nr="3843" mi="4" ci="0" mb="0" cb="0"/><line nr="3844" mi="1" ci="0" mb="0" cb="0"/><line nr="3845" mi="2" ci="0" mb="0" cb="0"/><line nr="3848" mi="7" ci="0" mb="2" cb="0"/><line nr="3849" mi="1" ci="0" mb="0" cb="0"/><line nr="3852" mi="7" ci="0" mb="2" cb="0"/><line nr="3853" mi="1" ci="0" mb="0" cb="0"/><line nr="3857" mi="8" ci="0" mb="0" cb="0"/><line nr="3858" mi="5" ci="0" mb="0" cb="0"/><line nr="3861" mi="3" ci="0" mb="0" cb="0"/><line nr="3862" mi="4" ci="0" mb="0" cb="0"/><line nr="3863" mi="10" ci="0" mb="3" cb="0"/><line nr="3865" mi="4" ci="0" mb="0" cb="0"/><line nr="3867" mi="3" ci="0" mb="0" cb="0"/><line nr="3868" mi="4" ci="0" mb="0" cb="0"/><line nr="3869" mi="3" ci="0" mb="0" cb="0"/><line nr="3870" mi="4" ci="0" mb="0" cb="0"/><line nr="3871" mi="5" ci="0" mb="0" cb="0"/><line nr="3872" mi="3" ci="0" mb="2" cb="0"/><line nr="3875" mi="3" ci="0" mb="0" cb="0"/><line nr="3876" mi="4" ci="0" mb="0" cb="0"/><line nr="3877" mi="3" ci="0" mb="0" cb="0"/><line nr="3878" mi="4" ci="0" mb="0" cb="0"/><line nr="3881" mi="3" ci="0" mb="0" cb="0"/><line nr="3882" mi="4" ci="0" mb="0" cb="0"/><line nr="3883" mi="6" ci="0" mb="0" cb="0"/><line nr="3888" mi="4" ci="0" mb="0" cb="0"/><line nr="3890" mi="3" ci="0" mb="0" cb="0"/><line nr="3891" mi="4" ci="0" mb="0" cb="0"/><line nr="3892" mi="3" ci="0" mb="0" cb="0"/><line nr="3893" mi="4" ci="0" mb="0" cb="0"/><line nr="3894" mi="5" ci="0" mb="0" cb="0"/><line nr="3895" mi="44" ci="0" mb="12" cb="0"/><line nr="3897" mi="3" ci="0" mb="0" cb="0"/><line nr="3898" mi="4" ci="0" mb="0" cb="0"/><line nr="3899" mi="3" ci="0" mb="0" cb="0"/><line nr="3900" mi="4" ci="0" mb="0" cb="0"/><line nr="3901" mi="5" ci="0" mb="0" cb="0"/><line nr="3902" mi="3" ci="0" mb="2" cb="0"/><line nr="3905" mi="3" ci="0" mb="0" cb="0"/><line nr="3906" mi="4" ci="0" mb="0" cb="0"/><line nr="3907" mi="3" ci="0" mb="0" cb="0"/><line nr="3908" mi="4" ci="0" mb="0" cb="0"/><line nr="3911" mi="3" ci="0" mb="0" cb="0"/><line nr="3912" mi="4" ci="0" mb="0" cb="0"/><line nr="3913" mi="6" ci="0" mb="0" cb="0"/><line nr="3918" mi="3" ci="0" mb="0" cb="0"/><line nr="3919" mi="4" ci="0" mb="0" cb="0"/><line nr="3924" mi="1" ci="0" mb="0" cb="0"/><line nr="3925" mi="3" ci="0" mb="0" cb="0"/><line nr="3926" mi="5" ci="0" mb="0" cb="0"/><line nr="3927" mi="5" ci="0" mb="0" cb="0"/><line nr="3930" mi="2" ci="0" mb="0" cb="0"/><line nr="3932" mi="2" ci="0" mb="0" cb="0"/><line nr="3938" mi="4" ci="0" mb="0" cb="0"/><line nr="3941" mi="6" ci="0" mb="0" cb="0"/><line nr="3944" mi="4" ci="0" mb="0" cb="0"/><line nr="3945" mi="1" ci="0" mb="0" cb="0"/><line nr="3946" mi="2" ci="0" mb="0" cb="0"/><line nr="3949" mi="7" ci="0" mb="2" cb="0"/><line nr="3950" mi="1" ci="0" mb="0" cb="0"/><line nr="3953" mi="7" ci="0" mb="2" cb="0"/><line nr="3954" mi="1" ci="0" mb="0" cb="0"/><line nr="3958" mi="8" ci="0" mb="0" cb="0"/><line nr="3959" mi="5" ci="0" mb="0" cb="0"/><line nr="3962" mi="3" ci="0" mb="0" cb="0"/><line nr="3963" mi="4" ci="0" mb="0" cb="0"/><line nr="3964" mi="10" ci="0" mb="3" cb="0"/><line nr="3966" mi="4" ci="0" mb="0" cb="0"/><line nr="3968" mi="3" ci="0" mb="0" cb="0"/><line nr="3969" mi="4" ci="0" mb="0" cb="0"/><line nr="3970" mi="3" ci="0" mb="0" cb="0"/><line nr="3971" mi="4" ci="0" mb="0" cb="0"/><line nr="3972" mi="5" ci="0" mb="0" cb="0"/><line nr="3973" mi="3" ci="0" mb="2" cb="0"/><line nr="3976" mi="3" ci="0" mb="0" cb="0"/><line nr="3977" mi="4" ci="0" mb="0" cb="0"/><line nr="3978" mi="3" ci="0" mb="0" cb="0"/><line nr="3979" mi="4" ci="0" mb="0" cb="0"/><line nr="3982" mi="3" ci="0" mb="0" cb="0"/><line nr="3983" mi="4" ci="0" mb="0" cb="0"/><line nr="3984" mi="6" ci="0" mb="0" cb="0"/><line nr="3989" mi="4" ci="0" mb="0" cb="0"/><line nr="3991" mi="3" ci="0" mb="0" cb="0"/><line nr="3992" mi="4" ci="0" mb="0" cb="0"/><line nr="3993" mi="3" ci="0" mb="0" cb="0"/><line nr="3994" mi="4" ci="0" mb="0" cb="0"/><line nr="3995" mi="5" ci="0" mb="0" cb="0"/><line nr="3996" mi="44" ci="0" mb="12" cb="0"/><line nr="3998" mi="3" ci="0" mb="0" cb="0"/><line nr="3999" mi="4" ci="0" mb="0" cb="0"/><line nr="4000" mi="3" ci="0" mb="0" cb="0"/><line nr="4001" mi="4" ci="0" mb="0" cb="0"/><line nr="4002" mi="5" ci="0" mb="0" cb="0"/><line nr="4003" mi="3" ci="0" mb="2" cb="0"/><line nr="4006" mi="3" ci="0" mb="0" cb="0"/><line nr="4007" mi="4" ci="0" mb="0" cb="0"/><line nr="4008" mi="3" ci="0" mb="0" cb="0"/><line nr="4009" mi="4" ci="0" mb="0" cb="0"/><line nr="4012" mi="3" ci="0" mb="0" cb="0"/><line nr="4013" mi="4" ci="0" mb="0" cb="0"/><line nr="4014" mi="6" ci="0" mb="0" cb="0"/><line nr="4019" mi="3" ci="0" mb="0" cb="0"/><line nr="4020" mi="4" ci="0" mb="0" cb="0"/><line nr="4025" mi="1" ci="0" mb="0" cb="0"/><line nr="4026" mi="3" ci="0" mb="0" cb="0"/><line nr="4027" mi="5" ci="0" mb="0" cb="0"/><line nr="4028" mi="5" ci="0" mb="0" cb="0"/><line nr="4031" mi="2" ci="0" mb="0" cb="0"/><line nr="4033" mi="2" ci="0" mb="0" cb="0"/><line nr="4039" mi="4" ci="0" mb="0" cb="0"/><line nr="4042" mi="6" ci="0" mb="0" cb="0"/><line nr="4045" mi="4" ci="0" mb="0" cb="0"/><line nr="4046" mi="1" ci="0" mb="0" cb="0"/><line nr="4047" mi="2" ci="0" mb="0" cb="0"/><line nr="4050" mi="7" ci="0" mb="2" cb="0"/><line nr="4051" mi="1" ci="0" mb="0" cb="0"/><line nr="4054" mi="7" ci="0" mb="2" cb="0"/><line nr="4055" mi="1" ci="0" mb="0" cb="0"/><line nr="4059" mi="8" ci="0" mb="0" cb="0"/><line nr="4060" mi="5" ci="0" mb="0" cb="0"/><line nr="4063" mi="4" ci="0" mb="0" cb="0"/><line nr="4065" mi="3" ci="0" mb="0" cb="0"/><line nr="4066" mi="4" ci="0" mb="0" cb="0"/><line nr="4067" mi="3" ci="0" mb="0" cb="0"/><line nr="4068" mi="4" ci="0" mb="0" cb="0"/><line nr="4069" mi="5" ci="0" mb="0" cb="0"/><line nr="4070" mi="44" ci="0" mb="12" cb="0"/><line nr="4072" mi="3" ci="0" mb="0" cb="0"/><line nr="4073" mi="4" ci="0" mb="0" cb="0"/><line nr="4074" mi="3" ci="0" mb="0" cb="0"/><line nr="4075" mi="4" ci="0" mb="0" cb="0"/><line nr="4076" mi="5" ci="0" mb="0" cb="0"/><line nr="4077" mi="3" ci="0" mb="2" cb="0"/><line nr="4080" mi="3" ci="0" mb="0" cb="0"/><line nr="4081" mi="4" ci="0" mb="0" cb="0"/><line nr="4082" mi="3" ci="0" mb="0" cb="0"/><line nr="4083" mi="4" ci="0" mb="0" cb="0"/><line nr="4086" mi="3" ci="0" mb="0" cb="0"/><line nr="4087" mi="4" ci="0" mb="0" cb="0"/><line nr="4088" mi="6" ci="0" mb="0" cb="0"/><line nr="4093" mi="3" ci="0" mb="0" cb="0"/><line nr="4094" mi="4" ci="0" mb="0" cb="0"/><line nr="4097" mi="1" ci="0" mb="0" cb="0"/><line nr="4098" mi="3" ci="0" mb="0" cb="0"/><line nr="4099" mi="5" ci="0" mb="0" cb="0"/><line nr="4100" mi="5" ci="0" mb="0" cb="0"/><line nr="4103" mi="2" ci="0" mb="0" cb="0"/><line nr="4105" mi="2" ci="0" mb="0" cb="0"/><line nr="4111" mi="4" ci="0" mb="0" cb="0"/><line nr="4112" mi="1" ci="0" mb="0" cb="0"/><line nr="4113" mi="2" ci="0" mb="0" cb="0"/><line nr="4115" mi="3" ci="0" mb="0" cb="0"/><line nr="4117" mi="3" ci="0" mb="0" cb="0"/><line nr="4118" mi="1" ci="0" mb="0" cb="0"/><line nr="4123" mi="6" ci="0" mb="0" cb="0"/><line nr="4125" mi="5" ci="0" mb="0" cb="0"/><line nr="4126" mi="6" ci="0" mb="0" cb="0"/><line nr="4129" mi="7" ci="0" mb="2" cb="0"/><line nr="4130" mi="1" ci="0" mb="0" cb="0"/><line nr="4133" mi="7" ci="0" mb="2" cb="0"/><line nr="4134" mi="1" ci="0" mb="0" cb="0"/><line nr="4139" mi="6" ci="0" mb="0" cb="0"/><line nr="4142" mi="6" ci="0" mb="0" cb="0"/><line nr="4144" mi="5" ci="0" mb="0" cb="0"/><line nr="4145" mi="6" ci="0" mb="0" cb="0"/><line nr="4148" mi="7" ci="0" mb="2" cb="0"/><line nr="4149" mi="1" ci="0" mb="0" cb="0"/><line nr="4152" mi="7" ci="0" mb="2" cb="0"/><line nr="4153" mi="1" ci="0" mb="0" cb="0"/><line nr="4157" mi="8" ci="0" mb="0" cb="0"/><line nr="4158" mi="5" ci="0" mb="0" cb="0"/><line nr="4161" mi="3" ci="0" mb="0" cb="0"/><line nr="4162" mi="4" ci="0" mb="0" cb="0"/><line nr="4163" mi="10" ci="0" mb="4" cb="0"/><line nr="4165" mi="5" ci="0" mb="0" cb="0"/><line nr="4166" mi="4" ci="0" mb="0" cb="0"/><line nr="4168" mi="3" ci="0" mb="0" cb="0"/><line nr="4169" mi="3" ci="0" mb="0" cb="0"/><line nr="4170" mi="3" ci="0" mb="0" cb="0"/><line nr="4171" mi="4" ci="0" mb="0" cb="0"/><line nr="4172" mi="5" ci="0" mb="0" cb="0"/><line nr="4173" mi="44" ci="0" mb="12" cb="0"/><line nr="4175" mi="3" ci="0" mb="0" cb="0"/><line nr="4176" mi="4" ci="0" mb="0" cb="0"/><line nr="4177" mi="5" ci="0" mb="0" cb="0"/><line nr="4178" mi="3" ci="0" mb="2" cb="0"/><line nr="4180" mi="3" ci="0" mb="0" cb="0"/><line nr="4181" mi="4" ci="0" mb="0" cb="0"/><line nr="4185" mi="3" ci="0" mb="0" cb="0"/><line nr="4186" mi="4" ci="0" mb="0" cb="0"/><line nr="4193" mi="5" ci="0" mb="0" cb="0"/><line nr="4194" mi="4" ci="0" mb="0" cb="0"/><line nr="4196" mi="3" ci="0" mb="0" cb="0"/><line nr="4197" mi="3" ci="0" mb="0" cb="0"/><line nr="4198" mi="3" ci="0" mb="0" cb="0"/><line nr="4199" mi="4" ci="0" mb="0" cb="0"/><line nr="4200" mi="3" ci="0" mb="0" cb="0"/><line nr="4201" mi="4" ci="0" mb="0" cb="0"/><line nr="4203" mi="1" ci="0" mb="0" cb="0"/><line nr="4205" mi="5" ci="0" mb="0" cb="0"/><line nr="4206" mi="4" ci="0" mb="0" cb="0"/><line nr="4208" mi="3" ci="0" mb="0" cb="0"/><line nr="4209" mi="4" ci="0" mb="0" cb="0"/><line nr="4214" mi="1" ci="0" mb="0" cb="0"/><line nr="4215" mi="3" ci="0" mb="0" cb="0"/><line nr="4216" mi="5" ci="0" mb="0" cb="0"/><line nr="4217" mi="5" ci="0" mb="0" cb="0"/><line nr="4220" mi="2" ci="0" mb="0" cb="0"/><line nr="4222" mi="2" ci="0" mb="0" cb="0"/><line nr="4228" mi="4" ci="0" mb="0" cb="0"/><line nr="4229" mi="1" ci="0" mb="0" cb="0"/><line nr="4230" mi="2" ci="0" mb="0" cb="0"/><line nr="4232" mi="3" ci="0" mb="0" cb="0"/><line nr="4234" mi="3" ci="0" mb="0" cb="0"/><line nr="4235" mi="1" ci="0" mb="0" cb="0"/><line nr="4240" mi="6" ci="0" mb="0" cb="0"/><line nr="4242" mi="6" ci="0" mb="0" cb="0"/><line nr="4245" mi="7" ci="0" mb="2" cb="0"/><line nr="4246" mi="1" ci="0" mb="0" cb="0"/><line nr="4249" mi="7" ci="0" mb="2" cb="0"/><line nr="4250" mi="1" ci="0" mb="0" cb="0"/><line nr="4256" mi="6" ci="0" mb="0" cb="0"/><line nr="4259" mi="4" ci="0" mb="0" cb="0"/><line nr="4262" mi="6" ci="0" mb="0" cb="0"/><line nr="4264" mi="6" ci="0" mb="0" cb="0"/><line nr="4267" mi="7" ci="0" mb="2" cb="0"/><line nr="4268" mi="1" ci="0" mb="0" cb="0"/><line nr="4271" mi="7" ci="0" mb="2" cb="0"/><line nr="4272" mi="1" ci="0" mb="0" cb="0"/><line nr="4276" mi="8" ci="0" mb="0" cb="0"/><line nr="4277" mi="5" ci="0" mb="0" cb="0"/><line nr="4280" mi="3" ci="0" mb="0" cb="0"/><line nr="4281" mi="4" ci="0" mb="0" cb="0"/><line nr="4282" mi="10" ci="0" mb="3" cb="0"/><line nr="4284" mi="5" ci="0" mb="0" cb="0"/><line nr="4285" mi="4" ci="0" mb="0" cb="0"/><line nr="4287" mi="3" ci="0" mb="0" cb="0"/><line nr="4288" mi="5" ci="0" mb="0" cb="0"/><line nr="4289" mi="3" ci="0" mb="0" cb="0"/><line nr="4290" mi="4" ci="0" mb="0" cb="0"/><line nr="4291" mi="5" ci="0" mb="0" cb="0"/><line nr="4295" mi="3" ci="0" mb="0" cb="0"/><line nr="4296" mi="3" ci="0" mb="0" cb="0"/><line nr="4299" mi="3" ci="0" mb="0" cb="0"/><line nr="4300" mi="4" ci="0" mb="0" cb="0"/><line nr="4301" mi="5" ci="0" mb="0" cb="0"/><line nr="4302" mi="16" ci="0" mb="4" cb="0"/><line nr="4304" mi="1" ci="0" mb="0" cb="0"/><line nr="4306" mi="5" ci="0" mb="0" cb="0"/><line nr="4307" mi="4" ci="0" mb="0" cb="0"/><line nr="4309" mi="3" ci="0" mb="0" cb="0"/><line nr="4310" mi="3" ci="0" mb="0" cb="0"/><line nr="4315" mi="1" ci="0" mb="0" cb="0"/><line nr="4316" mi="3" ci="0" mb="0" cb="0"/><line nr="4317" mi="5" ci="0" mb="0" cb="0"/><line nr="4318" mi="5" ci="0" mb="0" cb="0"/><line nr="4321" mi="2" ci="0" mb="0" cb="0"/><line nr="4323" mi="2" ci="0" mb="0" cb="0"/><line nr="4329" mi="6" ci="0" mb="0" cb="0"/><line nr="4331" mi="5" ci="0" mb="0" cb="0"/><line nr="4333" mi="6" ci="0" mb="0" cb="0"/><line nr="4336" mi="6" ci="0" mb="0" cb="0"/><line nr="4339" mi="6" ci="0" mb="0" cb="0"/><line nr="4342" mi="4" ci="0" mb="0" cb="0"/><line nr="4343" mi="1" ci="0" mb="0" cb="0"/><line nr="4344" mi="2" ci="0" mb="0" cb="0"/><line nr="4347" mi="7" ci="0" mb="2" cb="0"/><line nr="4348" mi="1" ci="0" mb="0" cb="0"/><line nr="4351" mi="7" ci="0" mb="2" cb="0"/><line nr="4352" mi="1" ci="0" mb="0" cb="0"/><line nr="4356" mi="8" ci="0" mb="0" cb="0"/><line nr="4357" mi="5" ci="0" mb="0" cb="0"/><line nr="4360" mi="4" ci="0" mb="0" cb="0"/><line nr="4362" mi="3" ci="0" mb="0" cb="0"/><line nr="4363" mi="3" ci="0" mb="0" cb="0"/><line nr="4364" mi="3" ci="0" mb="0" cb="0"/><line nr="4365" mi="4" ci="0" mb="0" cb="0"/><line nr="4366" mi="3" ci="0" mb="0" cb="0"/><line nr="4367" mi="3" ci="0" mb="0" cb="0"/><line nr="4368" mi="3" ci="0" mb="0" cb="0"/><line nr="4369" mi="4" ci="0" mb="0" cb="0"/><line nr="4370" mi="5" ci="0" mb="0" cb="0"/><line nr="4371" mi="3" ci="0" mb="2" cb="0"/><line nr="4373" mi="3" ci="0" mb="0" cb="0"/><line nr="4374" mi="3" ci="0" mb="0" cb="0"/><line nr="4378" mi="3" ci="0" mb="0" cb="0"/><line nr="4379" mi="3" ci="0" mb="0" cb="0"/><line nr="4382" mi="1" ci="0" mb="0" cb="0"/><line nr="4383" mi="3" ci="0" mb="0" cb="0"/><line nr="4384" mi="5" ci="0" mb="0" cb="0"/><line nr="4385" mi="5" ci="0" mb="0" cb="0"/><line nr="4388" mi="2" ci="0" mb="0" cb="0"/><line nr="4390" mi="2" ci="0" mb="0" cb="0"/><line nr="4396" mi="4" ci="0" mb="0" cb="0"/><line nr="4397" mi="1" ci="0" mb="0" cb="0"/><line nr="4398" mi="2" ci="0" mb="0" cb="0"/><line nr="4400" mi="3" ci="0" mb="0" cb="0"/><line nr="4402" mi="3" ci="0" mb="0" cb="0"/><line nr="4403" mi="1" ci="0" mb="0" cb="0"/><line nr="4407" mi="5" ci="0" mb="0" cb="0"/><line nr="4408" mi="6" ci="0" mb="0" cb="0"/><line nr="4411" mi="7" ci="0" mb="2" cb="0"/><line nr="4412" mi="1" ci="0" mb="0" cb="0"/><line nr="4415" mi="7" ci="0" mb="2" cb="0"/><line nr="4416" mi="1" ci="0" mb="0" cb="0"/><line nr="4420" mi="5" ci="0" mb="0" cb="0"/><line nr="4421" mi="5" ci="0" mb="0" cb="0"/><line nr="4422" mi="6" ci="0" mb="0" cb="0"/><line nr="4425" mi="7" ci="0" mb="2" cb="0"/><line nr="4426" mi="1" ci="0" mb="0" cb="0"/><line nr="4429" mi="7" ci="0" mb="2" cb="0"/><line nr="4430" mi="1" ci="0" mb="0" cb="0"/><line nr="4434" mi="5" ci="0" mb="0" cb="0"/><line nr="4435" mi="5" ci="0" mb="0" cb="0"/><line nr="4436" mi="6" ci="0" mb="0" cb="0"/><line nr="4439" mi="7" ci="0" mb="2" cb="0"/><line nr="4440" mi="1" ci="0" mb="0" cb="0"/><line nr="4443" mi="7" ci="0" mb="2" cb="0"/><line nr="4444" mi="1" ci="0" mb="0" cb="0"/><line nr="4448" mi="8" ci="0" mb="0" cb="0"/><line nr="4449" mi="5" ci="0" mb="0" cb="0"/><line nr="4452" mi="3" ci="0" mb="0" cb="0"/><line nr="4453" mi="4" ci="0" mb="0" cb="0"/><line nr="4454" mi="5" ci="0" mb="4" cb="0"/><line nr="4457" mi="5" ci="0" mb="0" cb="0"/><line nr="4458" mi="4" ci="0" mb="0" cb="0"/><line nr="4460" mi="3" ci="0" mb="0" cb="0"/><line nr="4461" mi="4" ci="0" mb="0" cb="0"/><line nr="4462" mi="5" ci="0" mb="0" cb="0"/><line nr="4463" mi="3" ci="0" mb="2" cb="0"/><line nr="4465" mi="3" ci="0" mb="0" cb="0"/><line nr="4466" mi="5" ci="0" mb="0" cb="0"/><line nr="4473" mi="5" ci="0" mb="0" cb="0"/><line nr="4474" mi="4" ci="0" mb="0" cb="0"/><line nr="4476" mi="3" ci="0" mb="0" cb="0"/><line nr="4477" mi="4" ci="0" mb="0" cb="0"/><line nr="4478" mi="3" ci="0" mb="0" cb="0"/><line nr="4479" mi="4" ci="0" mb="0" cb="0"/><line nr="4480" mi="5" ci="0" mb="0" cb="0"/><line nr="4481" mi="3" ci="0" mb="2" cb="0"/><line nr="4483" mi="3" ci="0" mb="0" cb="0"/><line nr="4484" mi="5" ci="0" mb="0" cb="0"/><line nr="4491" mi="5" ci="0" mb="0" cb="0"/><line nr="4492" mi="4" ci="0" mb="0" cb="0"/><line nr="4494" mi="3" ci="0" mb="0" cb="0"/><line nr="4495" mi="4" ci="0" mb="0" cb="0"/><line nr="4496" mi="3" ci="0" mb="0" cb="0"/><line nr="4497" mi="4" ci="0" mb="0" cb="0"/><line nr="4498" mi="5" ci="0" mb="0" cb="0"/><line nr="4499" mi="3" ci="0" mb="2" cb="0"/><line nr="4501" mi="3" ci="0" mb="0" cb="0"/><line nr="4502" mi="5" ci="0" mb="0" cb="0"/><line nr="4509" mi="5" ci="0" mb="0" cb="0"/><line nr="4512" mi="1" ci="0" mb="0" cb="0"/><line nr="4513" mi="3" ci="0" mb="0" cb="0"/><line nr="4514" mi="5" ci="0" mb="0" cb="0"/><line nr="4515" mi="5" ci="0" mb="0" cb="0"/><line nr="4518" mi="2" ci="0" mb="0" cb="0"/><line nr="4520" mi="2" ci="0" mb="0" cb="0"/><line nr="4525" mi="5" ci="0" mb="0" cb="0"/><line nr="4527" mi="6" ci="0" mb="0" cb="0"/><line nr="4530" mi="4" ci="0" mb="0" cb="0"/><line nr="4531" mi="1" ci="0" mb="0" cb="0"/><line nr="4532" mi="2" ci="0" mb="0" cb="0"/><line nr="4535" mi="7" ci="0" mb="2" cb="0"/><line nr="4536" mi="1" ci="0" mb="0" cb="0"/><line nr="4539" mi="7" ci="0" mb="2" cb="0"/><line nr="4540" mi="1" ci="0" mb="0" cb="0"/><line nr="4544" mi="8" ci="0" mb="0" cb="0"/><line nr="4545" mi="5" ci="0" mb="0" cb="0"/><line nr="4547" mi="4" ci="0" mb="0" cb="0"/><line nr="4549" mi="3" ci="0" mb="0" cb="0"/><line nr="4550" mi="4" ci="0" mb="0" cb="0"/><line nr="4551" mi="3" ci="0" mb="0" cb="0"/><line nr="4552" mi="3" ci="0" mb="0" cb="0"/><line nr="4555" mi="1" ci="0" mb="0" cb="0"/><line nr="4556" mi="3" ci="0" mb="0" cb="0"/><line nr="4557" mi="5" ci="0" mb="0" cb="0"/><line nr="4558" mi="5" ci="0" mb="0" cb="0"/><line nr="4561" mi="2" ci="0" mb="0" cb="0"/><line nr="4563" mi="2" ci="0" mb="0" cb="0"/><line nr="4569" mi="4" ci="0" mb="0" cb="0"/><line nr="4570" mi="1" ci="0" mb="0" cb="0"/><line nr="4571" mi="2" ci="0" mb="0" cb="0"/><line nr="4573" mi="3" ci="0" mb="0" cb="0"/><line nr="4575" mi="3" ci="0" mb="0" cb="0"/><line nr="4576" mi="1" ci="0" mb="0" cb="0"/><line nr="4581" mi="6" ci="0" mb="0" cb="0"/><line nr="4584" mi="6" ci="0" mb="0" cb="0"/><line nr="4586" mi="6" ci="0" mb="0" cb="0"/><line nr="4589" mi="7" ci="0" mb="2" cb="0"/><line nr="4590" mi="1" ci="0" mb="0" cb="0"/><line nr="4593" mi="7" ci="0" mb="2" cb="0"/><line nr="4594" mi="1" ci="0" mb="0" cb="0"/><line nr="4599" mi="4" ci="0" mb="0" cb="0"/><line nr="4602" mi="6" ci="0" mb="0" cb="0"/><line nr="4605" mi="6" ci="0" mb="0" cb="0"/><line nr="4607" mi="6" ci="0" mb="0" cb="0"/><line nr="4610" mi="7" ci="0" mb="2" cb="0"/><line nr="4611" mi="1" ci="0" mb="0" cb="0"/><line nr="4614" mi="7" ci="0" mb="2" cb="0"/><line nr="4615" mi="1" ci="0" mb="0" cb="0"/><line nr="4619" mi="8" ci="0" mb="0" cb="0"/><line nr="4620" mi="5" ci="0" mb="0" cb="0"/><line nr="4623" mi="3" ci="0" mb="0" cb="0"/><line nr="4624" mi="4" ci="0" mb="0" cb="0"/><line nr="4625" mi="5" ci="0" mb="3" cb="0"/><line nr="4627" mi="5" ci="0" mb="0" cb="0"/><line nr="4628" mi="4" ci="0" mb="0" cb="0"/><line nr="4630" mi="3" ci="0" mb="0" cb="0"/><line nr="4631" mi="4" ci="0" mb="0" cb="0"/><line nr="4632" mi="3" ci="0" mb="0" cb="0"/><line nr="4633" mi="3" ci="0" mb="0" cb="0"/><line nr="4634" mi="3" ci="0" mb="0" cb="0"/><line nr="4635" mi="4" ci="0" mb="0" cb="0"/><line nr="4636" mi="3" ci="0" mb="0" cb="0"/><line nr="4637" mi="3" ci="0" mb="0" cb="0"/><line nr="4638" mi="3" ci="0" mb="0" cb="0"/><line nr="4639" mi="4" ci="0" mb="0" cb="0"/><line nr="4640" mi="3" ci="0" mb="0" cb="0"/><line nr="4641" mi="4" ci="0" mb="0" cb="0"/><line nr="4642" mi="5" ci="0" mb="0" cb="0"/><line nr="4643" mi="3" ci="0" mb="2" cb="0"/><line nr="4645" mi="3" ci="0" mb="0" cb="0"/><line nr="4646" mi="4" ci="0" mb="0" cb="0"/><line nr="4656" mi="5" ci="0" mb="0" cb="0"/><line nr="4657" mi="4" ci="0" mb="0" cb="0"/><line nr="4659" mi="3" ci="0" mb="0" cb="0"/><line nr="4660" mi="3" ci="0" mb="0" cb="0"/><line nr="4661" mi="3" ci="0" mb="0" cb="0"/><line nr="4662" mi="4" ci="0" mb="0" cb="0"/><line nr="4663" mi="5" ci="0" mb="0" cb="0"/><line nr="4664" mi="3" ci="0" mb="2" cb="0"/><line nr="4666" mi="3" ci="0" mb="0" cb="0"/><line nr="4667" mi="4" ci="0" mb="0" cb="0"/><line nr="4674" mi="5" ci="0" mb="0" cb="0"/><line nr="4677" mi="1" ci="0" mb="0" cb="0"/><line nr="4678" mi="3" ci="0" mb="0" cb="0"/><line nr="4679" mi="5" ci="0" mb="0" cb="0"/><line nr="4680" mi="5" ci="0" mb="0" cb="0"/><line nr="4683" mi="2" ci="0" mb="0" cb="0"/><line nr="4685" mi="2" ci="0" mb="0" cb="0"/><line nr="4691" mi="6" ci="0" mb="0" cb="0"/><line nr="4694" mi="6" ci="0" mb="0" cb="0"/><line nr="4697" mi="4" ci="0" mb="0" cb="0"/><line nr="4698" mi="1" ci="0" mb="0" cb="0"/><line nr="4699" mi="2" ci="0" mb="0" cb="0"/><line nr="4702" mi="7" ci="0" mb="2" cb="0"/><line nr="4703" mi="1" ci="0" mb="0" cb="0"/><line nr="4706" mi="7" ci="0" mb="2" cb="0"/><line nr="4707" mi="1" ci="0" mb="0" cb="0"/><line nr="4711" mi="8" ci="0" mb="0" cb="0"/><line nr="4712" mi="5" ci="0" mb="0" cb="0"/><line nr="4714" mi="4" ci="0" mb="0" cb="0"/><line nr="4716" mi="3" ci="0" mb="0" cb="0"/><line nr="4717" mi="3" ci="0" mb="0" cb="0"/><line nr="4718" mi="3" ci="0" mb="0" cb="0"/><line nr="4719" mi="3" ci="0" mb="0" cb="0"/><line nr="4722" mi="1" ci="0" mb="0" cb="0"/><line nr="4723" mi="3" ci="0" mb="0" cb="0"/><line nr="4724" mi="5" ci="0" mb="0" cb="0"/><line nr="4725" mi="5" ci="0" mb="0" cb="0"/><line nr="4728" mi="2" ci="0" mb="0" cb="0"/><line nr="4730" mi="2" ci="0" mb="0" cb="0"/><line nr="4735" mi="5" ci="0" mb="0" cb="0"/><line nr="4737" mi="6" ci="0" mb="0" cb="0"/><line nr="4740" mi="4" ci="0" mb="0" cb="0"/><line nr="4741" mi="1" ci="0" mb="0" cb="0"/><line nr="4742" mi="2" ci="0" mb="0" cb="0"/><line nr="4745" mi="7" ci="0" mb="2" cb="0"/><line nr="4746" mi="1" ci="0" mb="0" cb="0"/><line nr="4749" mi="7" ci="0" mb="2" cb="0"/><line nr="4750" mi="1" ci="0" mb="0" cb="0"/><line nr="4754" mi="8" ci="0" mb="0" cb="0"/><line nr="4755" mi="5" ci="0" mb="0" cb="0"/><line nr="4757" mi="4" ci="0" mb="0" cb="0"/><line nr="4759" mi="3" ci="0" mb="0" cb="0"/><line nr="4760" mi="4" ci="0" mb="0" cb="0"/><line nr="4761" mi="3" ci="0" mb="0" cb="0"/><line nr="4762" mi="4" ci="0" mb="0" cb="0"/><line nr="4765" mi="1" ci="0" mb="0" cb="0"/><line nr="4766" mi="3" ci="0" mb="0" cb="0"/><line nr="4767" mi="5" ci="0" mb="0" cb="0"/><line nr="4768" mi="5" ci="0" mb="0" cb="0"/><line nr="4771" mi="2" ci="0" mb="0" cb="0"/><line nr="4773" mi="2" ci="0" mb="0" cb="0"/><line nr="4779" mi="6" ci="0" mb="0" cb="0"/><line nr="4782" mi="6" ci="0" mb="0" cb="0"/><line nr="4784" mi="5" ci="0" mb="0" cb="0"/><line nr="4786" mi="4" ci="0" mb="0" cb="0"/><line nr="4787" mi="1" ci="0" mb="0" cb="0"/><line nr="4788" mi="2" ci="0" mb="0" cb="0"/><line nr="4791" mi="7" ci="0" mb="2" cb="0"/><line nr="4792" mi="1" ci="0" mb="0" cb="0"/><line nr="4795" mi="7" ci="0" mb="2" cb="0"/><line nr="4796" mi="1" ci="0" mb="0" cb="0"/><line nr="4800" mi="8" ci="0" mb="0" cb="0"/><line nr="4801" mi="5" ci="0" mb="0" cb="0"/><line nr="4804" mi="4" ci="0" mb="0" cb="0"/><line nr="4806" mi="3" ci="0" mb="0" cb="0"/><line nr="4807" mi="3" ci="0" mb="0" cb="0"/><line nr="4808" mi="3" ci="0" mb="0" cb="0"/><line nr="4809" mi="4" ci="0" mb="0" cb="0"/><line nr="4810" mi="10" ci="0" mb="2" cb="0"/><line nr="4813" mi="3" ci="0" mb="0" cb="0"/><line nr="4814" mi="4" ci="0" mb="0" cb="0"/><line nr="4815" mi="5" ci="0" mb="0" cb="0"/><line nr="4816" mi="3" ci="0" mb="2" cb="0"/><line nr="4818" mi="3" ci="0" mb="0" cb="0"/><line nr="4819" mi="4" ci="0" mb="0" cb="0"/><line nr="4823" mi="3" ci="0" mb="0" cb="0"/><line nr="4824" mi="3" ci="0" mb="0" cb="0"/><line nr="4830" mi="1" ci="0" mb="0" cb="0"/><line nr="4831" mi="3" ci="0" mb="0" cb="0"/><line nr="4832" mi="5" ci="0" mb="0" cb="0"/><line nr="4833" mi="5" ci="0" mb="0" cb="0"/><line nr="4836" mi="2" ci="0" mb="0" cb="0"/><line nr="4838" mi="2" ci="0" mb="0" cb="0"/><line nr="4844" mi="4" ci="0" mb="0" cb="0"/><line nr="4847" mi="6" ci="0" mb="0" cb="0"/><line nr="4850" mi="4" ci="0" mb="0" cb="0"/><line nr="4851" mi="1" ci="0" mb="0" cb="0"/><line nr="4852" mi="2" ci="0" mb="0" cb="0"/><line nr="4855" mi="7" ci="0" mb="2" cb="0"/><line nr="4856" mi="1" ci="0" mb="0" cb="0"/><line nr="4859" mi="7" ci="0" mb="2" cb="0"/><line nr="4860" mi="1" ci="0" mb="0" cb="0"/><line nr="4864" mi="8" ci="0" mb="0" cb="0"/><line nr="4865" mi="5" ci="0" mb="0" cb="0"/><line nr="4868" mi="4" ci="0" mb="0" cb="0"/><line nr="4870" mi="3" ci="0" mb="0" cb="0"/><line nr="4871" mi="4" ci="0" mb="0" cb="0"/><line nr="4872" mi="3" ci="0" mb="0" cb="0"/><line nr="4873" mi="3" ci="0" mb="0" cb="0"/><line nr="4874" mi="3" ci="0" mb="0" cb="0"/><line nr="4875" mi="4" ci="0" mb="0" cb="0"/><line nr="4876" mi="5" ci="0" mb="0" cb="0"/><line nr="4877" mi="3" ci="0" mb="2" cb="0"/><line nr="4880" mi="3" ci="0" mb="0" cb="0"/><line nr="4881" mi="4" ci="0" mb="0" cb="0"/><line nr="4882" mi="3" ci="0" mb="0" cb="0"/><line nr="4883" mi="3" ci="0" mb="0" cb="0"/><line nr="4886" mi="3" ci="0" mb="0" cb="0"/><line nr="4887" mi="4" ci="0" mb="0" cb="0"/><line nr="4888" mi="6" ci="0" mb="0" cb="0"/><line nr="4890" mi="3" ci="0" mb="0" cb="0"/><line nr="4891" mi="4" ci="0" mb="0" cb="0"/><line nr="4894" mi="1" ci="0" mb="0" cb="0"/><line nr="4895" mi="3" ci="0" mb="0" cb="0"/><line nr="4896" mi="5" ci="0" mb="0" cb="0"/><line nr="4897" mi="5" ci="0" mb="0" cb="0"/><line nr="4900" mi="2" ci="0" mb="0" cb="0"/><line nr="4902" mi="2" ci="0" mb="0" cb="0"/><line nr="4908" mi="4" ci="0" mb="0" cb="0"/><line nr="4909" mi="1" ci="0" mb="0" cb="0"/><line nr="4910" mi="2" ci="0" mb="0" cb="0"/><line nr="4912" mi="3" ci="0" mb="0" cb="0"/><line nr="4914" mi="3" ci="0" mb="0" cb="0"/><line nr="4915" mi="1" ci="0" mb="0" cb="0"/><line nr="4920" mi="6" ci="0" mb="0" cb="0"/><line nr="4922" mi="6" ci="0" mb="0" cb="0"/><line nr="4925" mi="7" ci="0" mb="2" cb="0"/><line nr="4926" mi="1" ci="0" mb="0" cb="0"/><line nr="4929" mi="7" ci="0" mb="2" cb="0"/><line nr="4930" mi="1" ci="0" mb="0" cb="0"/><line nr="4934" mi="8" ci="0" mb="0" cb="0"/><line nr="4935" mi="5" ci="0" mb="0" cb="0"/><line nr="4937" mi="5" ci="0" mb="0" cb="0"/><line nr="4938" mi="4" ci="0" mb="0" cb="0"/><line nr="4940" mi="3" ci="0" mb="0" cb="0"/><line nr="4941" mi="3" ci="0" mb="0" cb="0"/><line nr="4944" mi="1" ci="0" mb="0" cb="0"/><line nr="4945" mi="3" ci="0" mb="0" cb="0"/><line nr="4946" mi="5" ci="0" mb="0" cb="0"/><line nr="4947" mi="5" ci="0" mb="0" cb="0"/><line nr="4950" mi="2" ci="0" mb="0" cb="0"/><line nr="4952" mi="2" ci="0" mb="0" cb="0"/><line nr="4958" mi="6" ci="0" mb="0" cb="0"/><line nr="4961" mi="4" ci="0" mb="0" cb="0"/><line nr="4962" mi="1" ci="0" mb="0" cb="0"/><line nr="4963" mi="2" ci="0" mb="0" cb="0"/><line nr="4966" mi="7" ci="0" mb="2" cb="0"/><line nr="4967" mi="1" ci="0" mb="0" cb="0"/><line nr="4970" mi="7" ci="0" mb="2" cb="0"/><line nr="4971" mi="1" ci="0" mb="0" cb="0"/><line nr="4975" mi="8" ci="0" mb="0" cb="0"/><line nr="4976" mi="5" ci="0" mb="0" cb="0"/><line nr="4978" mi="4" ci="0" mb="0" cb="0"/><line nr="4980" mi="3" ci="0" mb="0" cb="0"/><line nr="4981" mi="4" ci="0" mb="0" cb="0"/><line nr="4984" mi="1" ci="0" mb="0" cb="0"/><line nr="4985" mi="3" ci="0" mb="0" cb="0"/><line nr="4986" mi="5" ci="0" mb="0" cb="0"/><line nr="4987" mi="5" ci="0" mb="0" cb="0"/><line nr="4990" mi="2" ci="0" mb="0" cb="0"/><line nr="4992" mi="2" ci="0" mb="0" cb="0"/><line nr="4998" mi="4" ci="0" mb="0" cb="0"/><line nr="4999" mi="1" ci="0" mb="0" cb="0"/><line nr="5000" mi="2" ci="0" mb="0" cb="0"/><line nr="5002" mi="3" ci="0" mb="0" cb="0"/><line nr="5004" mi="3" ci="0" mb="0" cb="0"/><line nr="5005" mi="1" ci="0" mb="0" cb="0"/><line nr="5009" mi="5" ci="0" mb="0" cb="0"/><line nr="5011" mi="6" ci="0" mb="0" cb="0"/><line nr="5013" mi="6" ci="0" mb="0" cb="0"/><line nr="5016" mi="7" ci="0" mb="2" cb="0"/><line nr="5017" mi="1" ci="0" mb="0" cb="0"/><line nr="5020" mi="7" ci="0" mb="2" cb="0"/><line nr="5021" mi="1" ci="0" mb="0" cb="0"/><line nr="5026" mi="6" ci="0" mb="0" cb="0"/><line nr="5028" mi="6" ci="0" mb="0" cb="0"/><line nr="5031" mi="7" ci="0" mb="2" cb="0"/><line nr="5032" mi="1" ci="0" mb="0" cb="0"/><line nr="5035" mi="7" ci="0" mb="2" cb="0"/><line nr="5036" mi="1" ci="0" mb="0" cb="0"/><line nr="5044" mi="4" ci="0" mb="0" cb="0"/><line nr="5047" mi="6" ci="0" mb="0" cb="0"/><line nr="5049" mi="5" ci="0" mb="0" cb="0"/><line nr="5050" mi="5" ci="0" mb="0" cb="0"/><line nr="5051" mi="6" ci="0" mb="0" cb="0"/><line nr="5054" mi="7" ci="0" mb="2" cb="0"/><line nr="5055" mi="1" ci="0" mb="0" cb="0"/><line nr="5058" mi="7" ci="0" mb="2" cb="0"/><line nr="5059" mi="1" ci="0" mb="0" cb="0"/><line nr="5063" mi="4" ci="0" mb="0" cb="0"/><line nr="5067" mi="3" ci="0" mb="0" cb="0"/><line nr="5068" mi="3" ci="0" mb="0" cb="0"/><line nr="5069" mi="7" ci="0" mb="0" cb="0"/><line nr="5070" mi="2" ci="0" mb="0" cb="0"/><line nr="5071" mi="2" ci="0" mb="0" cb="0"/><line nr="5072" mi="6" ci="0" mb="0" cb="0"/><line nr="5075" mi="4" ci="0" mb="0" cb="0"/><line nr="5077" mi="3" ci="0" mb="0" cb="0"/><line nr="5078" mi="4" ci="0" mb="0" cb="0"/><line nr="5079" mi="5" ci="0" mb="3" cb="0"/><line nr="5142" mi="5" ci="0" mb="0" cb="0"/><line nr="5143" mi="3" ci="0" mb="0" cb="0"/><line nr="5144" mi="2" ci="0" mb="0" cb="0"/><line nr="5146" mi="3" ci="0" mb="0" cb="0"/><line nr="5147" mi="3" ci="0" mb="0" cb="0"/><line nr="5149" mi="1" ci="0" mb="0" cb="0"/><line nr="5152" mi="5" ci="0" mb="0" cb="0"/><line nr="5153" mi="3" ci="0" mb="0" cb="0"/><line nr="5154" mi="2" ci="0" mb="0" cb="0"/><line nr="5155" mi="3" ci="0" mb="0" cb="0"/><line nr="5156" mi="4" ci="0" mb="0" cb="0"/><line nr="5157" mi="3" ci="0" mb="0" cb="0"/><line nr="5158" mi="4" ci="0" mb="0" cb="0"/><line nr="5160" mi="1" ci="0" mb="0" cb="0"/><line nr="5162" mi="5" ci="0" mb="0" cb="0"/><line nr="5164" mi="7" ci="0" mb="0" cb="0"/><line nr="5165" mi="3" ci="0" mb="0" cb="0"/><line nr="5166" mi="4" ci="0" mb="0" cb="0"/><line nr="5167" mi="10" ci="0" mb="0" cb="0"/><line nr="5168" mi="5" ci="0" mb="4" cb="0"/><line nr="5169" mi="3" ci="0" mb="2" cb="0"/><line nr="5170" mi="5" ci="0" mb="2" cb="0"/><line nr="5171" mi="2" ci="0" mb="0" cb="0"/><line nr="5173" mi="3" ci="0" mb="0" cb="0"/><line nr="5174" mi="4" ci="0" mb="0" cb="0"/><line nr="5175" mi="10" ci="0" mb="3" cb="0"/><line nr="5178" mi="9" ci="0" mb="0" cb="0"/><line nr="5179" mi="4" ci="0" mb="0" cb="0"/><line nr="5180" mi="5" ci="0" mb="0" cb="0"/><line nr="5181" mi="3" ci="0" mb="0" cb="0"/><line nr="5182" mi="12" ci="0" mb="2" cb="0"/><line nr="5183" mi="3" ci="0" mb="0" cb="0"/><line nr="5184" mi="6" ci="0" mb="0" cb="0"/><line nr="5185" mi="3" ci="0" mb="0" cb="0"/><line nr="5186" mi="6" ci="0" mb="0" cb="0"/><line nr="5188" mi="1" ci="0" mb="0" cb="0"/><line nr="5191" mi="9" ci="0" mb="0" cb="0"/><line nr="5192" mi="4" ci="0" mb="0" cb="0"/><line nr="5193" mi="5" ci="0" mb="0" cb="0"/><line nr="5194" mi="3" ci="0" mb="0" cb="0"/><line nr="5195" mi="12" ci="0" mb="2" cb="0"/><line nr="5196" mi="3" ci="0" mb="0" cb="0"/><line nr="5197" mi="6" ci="0" mb="0" cb="0"/><line nr="5198" mi="3" ci="0" mb="0" cb="0"/><line nr="5199" mi="6" ci="0" mb="0" cb="0"/><line nr="5205" mi="3" ci="0" mb="0" cb="0"/><line nr="5206" mi="4" ci="0" mb="0" cb="0"/><line nr="5207" mi="11" ci="0" mb="0" cb="0"/><line nr="5211" mi="1" ci="0" mb="0" cb="0"/><line nr="5212" mi="3" ci="0" mb="0" cb="0"/><line nr="5213" mi="5" ci="0" mb="0" cb="0"/><line nr="5214" mi="5" ci="0" mb="0" cb="0"/><line nr="5217" mi="3" ci="0" mb="0" cb="0"/><line nr="5219" mi="2" ci="0" mb="0" cb="0"/><line nr="5226" mi="6" ci="0" mb="0" cb="0"/><line nr="5229" mi="6" ci="0" mb="0" cb="0"/><line nr="5232" mi="4" ci="0" mb="0" cb="0"/><line nr="5233" mi="1" ci="0" mb="0" cb="0"/><line nr="5234" mi="2" ci="0" mb="0" cb="0"/><line nr="5237" mi="7" ci="0" mb="2" cb="0"/><line nr="5238" mi="1" ci="0" mb="0" cb="0"/><line nr="5241" mi="7" ci="0" mb="2" cb="0"/><line nr="5242" mi="1" ci="0" mb="0" cb="0"/><line nr="5246" mi="8" ci="0" mb="0" cb="0"/><line nr="5247" mi="5" ci="0" mb="0" cb="0"/><line nr="5249" mi="4" ci="0" mb="0" cb="0"/><line nr="5251" mi="3" ci="0" mb="0" cb="0"/><line nr="5252" mi="5" ci="0" mb="0" cb="0"/><line nr="5253" mi="3" ci="0" mb="0" cb="0"/><line nr="5254" mi="4" ci="0" mb="0" cb="0"/><line nr="5255" mi="10" ci="0" mb="2" cb="0"/><line nr="5258" mi="3" ci="0" mb="0" cb="0"/><line nr="5259" mi="5" ci="0" mb="0" cb="0"/><line nr="5265" mi="1" ci="0" mb="0" cb="0"/><line nr="5266" mi="3" ci="0" mb="0" cb="0"/><line nr="5267" mi="5" ci="0" mb="0" cb="0"/><line nr="5268" mi="5" ci="0" mb="0" cb="0"/><line nr="5271" mi="2" ci="0" mb="0" cb="0"/><line nr="5273" mi="2" ci="0" mb="0" cb="0"/><line nr="5279" mi="5" ci="0" mb="0" cb="0"/><line nr="5281" mi="4" ci="0" mb="0" cb="0"/><line nr="5282" mi="3" ci="0" mb="0" cb="0"/><line nr="5283" mi="1" ci="0" mb="0" cb="0"/><line nr="5284" mi="2" ci="0" mb="0" cb="0"/><line nr="5286" mi="3" ci="0" mb="0" cb="0"/><line nr="5288" mi="3" ci="0" mb="0" cb="0"/><line nr="5289" mi="4" ci="0" mb="0" cb="0"/><line nr="5290" mi="1" ci="0" mb="0" cb="0"/><line nr="5296" mi="6" ci="0" mb="0" cb="0"/><line nr="5299" mi="6" ci="0" mb="0" cb="0"/><line nr="5301" mi="6" ci="0" mb="0" cb="0"/><line nr="5304" mi="7" ci="0" mb="2" cb="0"/><line nr="5305" mi="1" ci="0" mb="0" cb="0"/><line nr="5308" mi="7" ci="0" mb="2" cb="0"/><line nr="5309" mi="1" ci="0" mb="0" cb="0"/><line nr="5315" mi="5" ci="0" mb="0" cb="0"/><line nr="5317" mi="6" ci="0" mb="0" cb="0"/><line nr="5319" mi="5" ci="0" mb="0" cb="0"/><line nr="5320" mi="5" ci="0" mb="0" cb="0"/><line nr="5321" mi="5" ci="0" mb="0" cb="0"/><line nr="5322" mi="6" ci="0" mb="0" cb="0"/><line nr="5325" mi="7" ci="0" mb="2" cb="0"/><line nr="5326" mi="1" ci="0" mb="0" cb="0"/><line nr="5329" mi="7" ci="0" mb="2" cb="0"/><line nr="5330" mi="1" ci="0" mb="0" cb="0"/><line nr="5335" mi="5" ci="0" mb="0" cb="0"/><line nr="5336" mi="5" ci="0" mb="0" cb="0"/><line nr="5337" mi="5" ci="0" mb="0" cb="0"/><line nr="5339" mi="6" ci="0" mb="0" cb="0"/><line nr="5341" mi="5" ci="0" mb="0" cb="0"/><line nr="5342" mi="6" ci="0" mb="0" cb="0"/><line nr="5345" mi="7" ci="0" mb="2" cb="0"/><line nr="5346" mi="1" ci="0" mb="0" cb="0"/><line nr="5349" mi="7" ci="0" mb="2" cb="0"/><line nr="5350" mi="1" ci="0" mb="0" cb="0"/><line nr="5354" mi="5" ci="0" mb="0" cb="0"/><line nr="5356" mi="4" ci="0" mb="0" cb="0"/><line nr="5359" mi="6" ci="0" mb="0" cb="0"/><line nr="5361" mi="5" ci="0" mb="0" cb="0"/><line nr="5362" mi="6" ci="0" mb="0" cb="0"/><line nr="5365" mi="7" ci="0" mb="2" cb="0"/><line nr="5366" mi="1" ci="0" mb="0" cb="0"/><line nr="5369" mi="7" ci="0" mb="2" cb="0"/><line nr="5370" mi="1" ci="0" mb="0" cb="0"/><line nr="5374" mi="5" ci="0" mb="0" cb="0"/><line nr="5375" mi="5" ci="0" mb="0" cb="0"/><line nr="5376" mi="5" ci="0" mb="0" cb="0"/><line nr="5377" mi="6" ci="0" mb="0" cb="0"/><line nr="5380" mi="7" ci="0" mb="2" cb="0"/><line nr="5381" mi="1" ci="0" mb="0" cb="0"/><line nr="5384" mi="7" ci="0" mb="2" cb="0"/><line nr="5385" mi="1" ci="0" mb="0" cb="0"/><line nr="5391" mi="5" ci="0" mb="0" cb="0"/><line nr="5392" mi="5" ci="0" mb="0" cb="0"/><line nr="5394" mi="4" ci="0" mb="0" cb="0"/><line nr="5397" mi="6" ci="0" mb="0" cb="0"/><line nr="5399" mi="5" ci="0" mb="0" cb="0"/><line nr="5400" mi="6" ci="0" mb="0" cb="0"/><line nr="5403" mi="7" ci="0" mb="2" cb="0"/><line nr="5404" mi="1" ci="0" mb="0" cb="0"/><line nr="5407" mi="7" ci="0" mb="2" cb="0"/><line nr="5408" mi="1" ci="0" mb="0" cb="0"/><line nr="5412" mi="9" ci="0" mb="0" cb="0"/><line nr="5413" mi="5" ci="0" mb="0" cb="0"/><line nr="5416" mi="3" ci="0" mb="0" cb="0"/><line nr="5417" mi="4" ci="0" mb="0" cb="0"/><line nr="5418" mi="10" ci="0" mb="7" cb="0"/><line nr="5420" mi="5" ci="0" mb="0" cb="0"/><line nr="5421" mi="4" ci="0" mb="0" cb="0"/><line nr="5423" mi="3" ci="0" mb="0" cb="0"/><line nr="5424" mi="3" ci="0" mb="0" cb="0"/><line nr="5425" mi="3" ci="0" mb="0" cb="0"/><line nr="5426" mi="6" ci="0" mb="0" cb="0"/><line nr="5428" mi="1" ci="0" mb="0" cb="0"/><line nr="5430" mi="5" ci="0" mb="0" cb="0"/><line nr="5431" mi="4" ci="0" mb="0" cb="0"/><line nr="5433" mi="3" ci="0" mb="0" cb="0"/><line nr="5434" mi="4" ci="0" mb="0" cb="0"/><line nr="5435" mi="5" ci="0" mb="0" cb="0"/><line nr="5436" mi="3" ci="0" mb="2" cb="0"/><line nr="5438" mi="3" ci="0" mb="0" cb="0"/><line nr="5439" mi="4" ci="0" mb="0" cb="0"/><line nr="5443" mi="3" ci="0" mb="0" cb="0"/><line nr="5444" mi="4" ci="0" mb="0" cb="0"/><line nr="5445" mi="3" ci="0" mb="0" cb="0"/><line nr="5446" mi="6" ci="0" mb="0" cb="0"/><line nr="5447" mi="3" ci="0" mb="0" cb="0"/><line nr="5448" mi="4" ci="0" mb="0" cb="0"/><line nr="5449" mi="3" ci="0" mb="0" cb="0"/><line nr="5450" mi="6" ci="0" mb="0" cb="0"/><line nr="5452" mi="1" ci="0" mb="0" cb="0"/><line nr="5454" mi="5" ci="0" mb="0" cb="0"/><line nr="5455" mi="4" ci="0" mb="0" cb="0"/><line nr="5457" mi="3" ci="0" mb="0" cb="0"/><line nr="5458" mi="4" ci="0" mb="0" cb="0"/><line nr="5459" mi="5" ci="0" mb="0" cb="0"/><line nr="5460" mi="3" ci="0" mb="2" cb="0"/><line nr="5462" mi="3" ci="0" mb="0" cb="0"/><line nr="5463" mi="4" ci="0" mb="0" cb="0"/><line nr="5467" mi="3" ci="0" mb="0" cb="0"/><line nr="5468" mi="4" ci="0" mb="0" cb="0"/><line nr="5469" mi="3" ci="0" mb="0" cb="0"/><line nr="5470" mi="4" ci="0" mb="0" cb="0"/><line nr="5471" mi="3" ci="0" mb="0" cb="0"/><line nr="5472" mi="3" ci="0" mb="0" cb="0"/><line nr="5473" mi="3" ci="0" mb="0" cb="0"/><line nr="5474" mi="4" ci="0" mb="0" cb="0"/><line nr="5475" mi="5" ci="0" mb="0" cb="0"/><line nr="5476" mi="3" ci="0" mb="2" cb="0"/><line nr="5479" mi="3" ci="0" mb="0" cb="0"/><line nr="5480" mi="4" ci="0" mb="0" cb="0"/><line nr="5481" mi="3" ci="0" mb="0" cb="0"/><line nr="5482" mi="3" ci="0" mb="0" cb="0"/><line nr="5485" mi="3" ci="0" mb="0" cb="0"/><line nr="5486" mi="4" ci="0" mb="0" cb="0"/><line nr="5487" mi="6" ci="0" mb="0" cb="0"/><line nr="5489" mi="3" ci="0" mb="0" cb="0"/><line nr="5490" mi="4" ci="0" mb="0" cb="0"/><line nr="5492" mi="1" ci="0" mb="0" cb="0"/><line nr="5494" mi="5" ci="0" mb="0" cb="0"/><line nr="5495" mi="4" ci="0" mb="0" cb="0"/><line nr="5497" mi="3" ci="0" mb="0" cb="0"/><line nr="5498" mi="4" ci="0" mb="0" cb="0"/><line nr="5499" mi="5" ci="0" mb="0" cb="0"/><line nr="5500" mi="3" ci="0" mb="2" cb="0"/><line nr="5502" mi="3" ci="0" mb="0" cb="0"/><line nr="5503" mi="4" ci="0" mb="0" cb="0"/><line nr="5507" mi="3" ci="0" mb="0" cb="0"/><line nr="5508" mi="4" ci="0" mb="0" cb="0"/><line nr="5509" mi="3" ci="0" mb="0" cb="0"/><line nr="5510" mi="6" ci="0" mb="0" cb="0"/><line nr="5511" mi="3" ci="0" mb="0" cb="0"/><line nr="5512" mi="4" ci="0" mb="0" cb="0"/><line nr="5513" mi="10" ci="0" mb="2" cb="0"/><line nr="5516" mi="3" ci="0" mb="0" cb="0"/><line nr="5517" mi="4" ci="0" mb="0" cb="0"/><line nr="5518" mi="3" ci="0" mb="0" cb="0"/><line nr="5519" mi="6" ci="0" mb="0" cb="0"/><line nr="5524" mi="1" ci="0" mb="0" cb="0"/><line nr="5526" mi="5" ci="0" mb="0" cb="0"/><line nr="5527" mi="4" ci="0" mb="0" cb="0"/><line nr="5529" mi="3" ci="0" mb="0" cb="0"/><line nr="5530" mi="4" ci="0" mb="0" cb="0"/><line nr="5531" mi="3" ci="0" mb="0" cb="0"/><line nr="5532" mi="4" ci="0" mb="0" cb="0"/><line nr="5533" mi="5" ci="0" mb="0" cb="0"/><line nr="5534" mi="3" ci="0" mb="2" cb="0"/><line nr="5536" mi="3" ci="0" mb="0" cb="0"/><line nr="5537" mi="4" ci="0" mb="0" cb="0"/><line nr="5541" mi="3" ci="0" mb="0" cb="0"/><line nr="5542" mi="4" ci="0" mb="0" cb="0"/><line nr="5544" mi="1" ci="0" mb="0" cb="0"/><line nr="5546" mi="5" ci="0" mb="0" cb="0"/><line nr="5547" mi="4" ci="0" mb="0" cb="0"/><line nr="5549" mi="3" ci="0" mb="0" cb="0"/><line nr="5550" mi="4" ci="0" mb="0" cb="0"/><line nr="5551" mi="3" ci="0" mb="0" cb="0"/><line nr="5552" mi="4" ci="0" mb="0" cb="0"/><line nr="5553" mi="5" ci="0" mb="0" cb="0"/><line nr="5554" mi="3" ci="0" mb="2" cb="0"/><line nr="5556" mi="3" ci="0" mb="0" cb="0"/><line nr="5557" mi="4" ci="0" mb="0" cb="0"/><line nr="5561" mi="3" ci="0" mb="0" cb="0"/><line nr="5562" mi="4" ci="0" mb="0" cb="0"/><line nr="5563" mi="3" ci="0" mb="0" cb="0"/><line nr="5564" mi="4" ci="0" mb="0" cb="0"/><line nr="5565" mi="3" ci="0" mb="0" cb="0"/><line nr="5566" mi="6" ci="0" mb="0" cb="0"/><line nr="5571" mi="1" ci="0" mb="0" cb="0"/><line nr="5572" mi="3" ci="0" mb="0" cb="0"/><line nr="5573" mi="5" ci="0" mb="0" cb="0"/><line nr="5574" mi="5" ci="0" mb="0" cb="0"/><line nr="5577" mi="2" ci="0" mb="0" cb="0"/><line nr="5579" mi="2" ci="0" mb="0" cb="0"/><line nr="5585" mi="4" ci="0" mb="0" cb="0"/><line nr="5586" mi="1" ci="0" mb="0" cb="0"/><line nr="5587" mi="2" ci="0" mb="0" cb="0"/><line nr="5589" mi="3" ci="0" mb="0" cb="0"/><line nr="5591" mi="3" ci="0" mb="0" cb="0"/><line nr="5592" mi="1" ci="0" mb="0" cb="0"/><line nr="5597" mi="6" ci="0" mb="0" cb="0"/><line nr="5599" mi="6" ci="0" mb="0" cb="0"/><line nr="5602" mi="7" ci="0" mb="2" cb="0"/><line nr="5603" mi="1" ci="0" mb="0" cb="0"/><line nr="5606" mi="7" ci="0" mb="2" cb="0"/><line nr="5607" mi="1" ci="0" mb="0" cb="0"/><line nr="5613" mi="5" ci="0" mb="0" cb="0"/><line nr="5615" mi="4" ci="0" mb="0" cb="0"/><line nr="5618" mi="6" ci="0" mb="0" cb="0"/><line nr="5620" mi="6" ci="0" mb="0" cb="0"/><line nr="5623" mi="7" ci="0" mb="2" cb="0"/><line nr="5624" mi="1" ci="0" mb="0" cb="0"/><line nr="5627" mi="7" ci="0" mb="2" cb="0"/><line nr="5628" mi="1" ci="0" mb="0" cb="0"/><line nr="5636" mi="4" ci="0" mb="0" cb="0"/><line nr="5639" mi="6" ci="0" mb="0" cb="0"/><line nr="5641" mi="5" ci="0" mb="0" cb="0"/><line nr="5642" mi="5" ci="0" mb="0" cb="0"/><line nr="5643" mi="5" ci="0" mb="0" cb="0"/><line nr="5644" mi="5" ci="0" mb="0" cb="0"/><line nr="5645" mi="5" ci="0" mb="0" cb="0"/><line nr="5646" mi="6" ci="0" mb="0" cb="0"/><line nr="5649" mi="7" ci="0" mb="2" cb="0"/><line nr="5650" mi="1" ci="0" mb="0" cb="0"/><line nr="5653" mi="7" ci="0" mb="2" cb="0"/><line nr="5654" mi="1" ci="0" mb="0" cb="0"/><line nr="5660" mi="6" ci="0" mb="0" cb="0"/><line nr="5662" mi="5" ci="0" mb="0" cb="0"/><line nr="5663" mi="5" ci="0" mb="0" cb="0"/><line nr="5664" mi="6" ci="0" mb="0" cb="0"/><line nr="5667" mi="7" ci="0" mb="2" cb="0"/><line nr="5668" mi="1" ci="0" mb="0" cb="0"/><line nr="5671" mi="7" ci="0" mb="2" cb="0"/><line nr="5672" mi="1" ci="0" mb="0" cb="0"/><line nr="5677" mi="6" ci="0" mb="0" cb="0"/><line nr="5679" mi="5" ci="0" mb="0" cb="0"/><line nr="5681" mi="6" ci="0" mb="0" cb="0"/><line nr="5683" mi="6" ci="0" mb="0" cb="0"/><line nr="5686" mi="7" ci="0" mb="2" cb="0"/><line nr="5687" mi="1" ci="0" mb="0" cb="0"/><line nr="5690" mi="7" ci="0" mb="2" cb="0"/><line nr="5691" mi="1" ci="0" mb="0" cb="0"/><line nr="5695" mi="4" ci="0" mb="0" cb="0"/><line nr="5699" mi="3" ci="0" mb="0" cb="0"/><line nr="5700" mi="3" ci="0" mb="0" cb="0"/><line nr="5701" mi="7" ci="0" mb="0" cb="0"/><line nr="5702" mi="2" ci="0" mb="0" cb="0"/><line nr="5703" mi="2" ci="0" mb="0" cb="0"/><line nr="5704" mi="6" ci="0" mb="0" cb="0"/><line nr="5708" mi="4" ci="0" mb="0" cb="0"/><line nr="5710" mi="3" ci="0" mb="0" cb="0"/><line nr="5711" mi="4" ci="0" mb="0" cb="0"/><line nr="5712" mi="10" ci="0" mb="3" cb="0"/><line nr="5715" mi="5" ci="0" mb="0" cb="0"/><line nr="5716" mi="3" ci="0" mb="0" cb="0"/><line nr="5717" mi="2" ci="0" mb="0" cb="0"/><line nr="5719" mi="3" ci="0" mb="0" cb="0"/><line nr="5720" mi="4" ci="0" mb="0" cb="0"/><line nr="5722" mi="1" ci="0" mb="0" cb="0"/><line nr="5725" mi="5" ci="0" mb="0" cb="0"/><line nr="5726" mi="3" ci="0" mb="0" cb="0"/><line nr="5727" mi="2" ci="0" mb="0" cb="0"/><line nr="5728" mi="3" ci="0" mb="0" cb="0"/><line nr="5729" mi="7" ci="0" mb="0" cb="0"/><line nr="5730" mi="5" ci="0" mb="0" cb="0"/><line nr="5731" mi="6" ci="0" mb="4" cb="0"/><line nr="5732" mi="8" ci="0" mb="0" cb="0"/><line nr="5735" mi="9" ci="0" mb="2" cb="0"/><line nr="5736" mi="4" ci="0" mb="0" cb="0"/><line nr="5737" mi="3" ci="0" mb="0" cb="0"/><line nr="5739" mi="3" ci="0" mb="0" cb="0"/><line nr="5740" mi="4" ci="0" mb="0" cb="0"/><line nr="5744" mi="7" ci="0" mb="0" cb="0"/><line nr="5745" mi="3" ci="0" mb="0" cb="0"/><line nr="5746" mi="4" ci="0" mb="0" cb="0"/><line nr="5747" mi="10" ci="0" mb="0" cb="0"/><line nr="5748" mi="5" ci="0" mb="4" cb="0"/><line nr="5749" mi="3" ci="0" mb="2" cb="0"/><line nr="5750" mi="5" ci="0" mb="2" cb="0"/><line nr="5751" mi="2" ci="0" mb="0" cb="0"/><line nr="5753" mi="3" ci="0" mb="0" cb="0"/><line nr="5754" mi="4" ci="0" mb="0" cb="0"/><line nr="5755" mi="10" ci="0" mb="5" cb="0"/><line nr="5758" mi="9" ci="0" mb="0" cb="0"/><line nr="5759" mi="4" ci="0" mb="0" cb="0"/><line nr="5760" mi="5" ci="0" mb="0" cb="0"/><line nr="5761" mi="3" ci="0" mb="0" cb="0"/><line nr="5762" mi="12" ci="0" mb="2" cb="0"/><line nr="5763" mi="3" ci="0" mb="0" cb="0"/><line nr="5764" mi="7" ci="0" mb="0" cb="0"/><line nr="5765" mi="5" ci="0" mb="0" cb="0"/><line nr="5766" mi="16" ci="0" mb="4" cb="0"/><line nr="5767" mi="8" ci="0" mb="0" cb="0"/><line nr="5770" mi="9" ci="0" mb="2" cb="0"/><line nr="5771" mi="4" ci="0" mb="0" cb="0"/><line nr="5772" mi="3" ci="0" mb="0" cb="0"/><line nr="5774" mi="3" ci="0" mb="0" cb="0"/><line nr="5775" mi="6" ci="0" mb="0" cb="0"/><line nr="5777" mi="1" ci="0" mb="0" cb="0"/><line nr="5780" mi="9" ci="0" mb="0" cb="0"/><line nr="5781" mi="4" ci="0" mb="0" cb="0"/><line nr="5782" mi="5" ci="0" mb="0" cb="0"/><line nr="5783" mi="3" ci="0" mb="0" cb="0"/><line nr="5784" mi="12" ci="0" mb="2" cb="0"/><line nr="5785" mi="3" ci="0" mb="0" cb="0"/><line nr="5786" mi="7" ci="0" mb="0" cb="0"/><line nr="5787" mi="5" ci="0" mb="0" cb="0"/><line nr="5788" mi="6" ci="0" mb="4" cb="0"/><line nr="5789" mi="8" ci="0" mb="0" cb="0"/><line nr="5792" mi="9" ci="0" mb="2" cb="0"/><line nr="5793" mi="4" ci="0" mb="0" cb="0"/><line nr="5794" mi="3" ci="0" mb="0" cb="0"/><line nr="5796" mi="3" ci="0" mb="0" cb="0"/><line nr="5797" mi="6" ci="0" mb="0" cb="0"/><line nr="5799" mi="1" ci="0" mb="0" cb="0"/><line nr="5802" mi="9" ci="0" mb="0" cb="0"/><line nr="5803" mi="4" ci="0" mb="0" cb="0"/><line nr="5804" mi="5" ci="0" mb="0" cb="0"/><line nr="5805" mi="3" ci="0" mb="0" cb="0"/><line nr="5806" mi="12" ci="0" mb="2" cb="0"/><line nr="5807" mi="3" ci="0" mb="0" cb="0"/><line nr="5808" mi="4" ci="0" mb="0" cb="0"/><line nr="5809" mi="3" ci="0" mb="0" cb="0"/><line nr="5810" mi="6" ci="0" mb="0" cb="0"/><line nr="5812" mi="1" ci="0" mb="0" cb="0"/><line nr="5815" mi="9" ci="0" mb="0" cb="0"/><line nr="5816" mi="5" ci="0" mb="0" cb="0"/><line nr="5817" mi="3" ci="0" mb="0" cb="0"/><line nr="5818" mi="12" ci="0" mb="2" cb="0"/><line nr="5819" mi="3" ci="0" mb="0" cb="0"/><line nr="5820" mi="4" ci="0" mb="0" cb="0"/><line nr="5821" mi="3" ci="0" mb="0" cb="0"/><line nr="5822" mi="3" ci="0" mb="0" cb="0"/><line nr="5828" mi="3" ci="0" mb="0" cb="0"/><line nr="5829" mi="4" ci="0" mb="0" cb="0"/><line nr="5830" mi="11" ci="0" mb="0" cb="0"/><line nr="5834" mi="1" ci="0" mb="0" cb="0"/><line nr="5835" mi="3" ci="0" mb="0" cb="0"/><line nr="5836" mi="5" ci="0" mb="0" cb="0"/><line nr="5837" mi="5" ci="0" mb="0" cb="0"/><line nr="5840" mi="3" ci="0" mb="0" cb="0"/><line nr="5842" mi="2" ci="0" mb="0" cb="0"/><line nr="5848" mi="4" ci="0" mb="0" cb="0"/><line nr="5849" mi="1" ci="0" mb="0" cb="0"/><line nr="5850" mi="2" ci="0" mb="0" cb="0"/><line nr="5852" mi="3" ci="0" mb="0" cb="0"/><line nr="5854" mi="3" ci="0" mb="0" cb="0"/><line nr="5855" mi="1" ci="0" mb="0" cb="0"/><line nr="5861" mi="5" ci="0" mb="0" cb="0"/><line nr="5863" mi="6" ci="0" mb="0" cb="0"/><line nr="5866" mi="6" ci="0" mb="0" cb="0"/><line nr="5868" mi="6" ci="0" mb="0" cb="0"/><line nr="5871" mi="7" ci="0" mb="2" cb="0"/><line nr="5872" mi="1" ci="0" mb="0" cb="0"/><line nr="5875" mi="7" ci="0" mb="2" cb="0"/><line nr="5876" mi="1" ci="0" mb="0" cb="0"/><line nr="5881" mi="5" ci="0" mb="0" cb="0"/><line nr="5883" mi="6" ci="0" mb="0" cb="0"/><line nr="5885" mi="5" ci="0" mb="0" cb="0"/><line nr="5887" mi="4" ci="0" mb="0" cb="0"/><line nr="5890" mi="6" ci="0" mb="0" cb="0"/><line nr="5892" mi="5" ci="0" mb="0" cb="0"/><line nr="5894" mi="6" ci="0" mb="0" cb="0"/><line nr="5896" mi="6" ci="0" mb="0" cb="0"/><line nr="5899" mi="7" ci="0" mb="2" cb="0"/><line nr="5900" mi="1" ci="0" mb="0" cb="0"/><line nr="5903" mi="7" ci="0" mb="2" cb="0"/><line nr="5904" mi="1" ci="0" mb="0" cb="0"/><line nr="5909" mi="6" ci="0" mb="0" cb="0"/><line nr="5911" mi="6" ci="0" mb="0" cb="0"/><line nr="5914" mi="7" ci="0" mb="2" cb="0"/><line nr="5915" mi="1" ci="0" mb="0" cb="0"/><line nr="5918" mi="7" ci="0" mb="2" cb="0"/><line nr="5919" mi="1" ci="0" mb="0" cb="0"/><line nr="5926" mi="6" ci="0" mb="0" cb="0"/><line nr="5929" mi="6" ci="0" mb="0" cb="0"/><line nr="5931" mi="6" ci="0" mb="0" cb="0"/><line nr="5934" mi="7" ci="0" mb="2" cb="0"/><line nr="5935" mi="1" ci="0" mb="0" cb="0"/><line nr="5938" mi="7" ci="0" mb="2" cb="0"/><line nr="5939" mi="1" ci="0" mb="0" cb="0"/><line nr="5943" mi="5" ci="0" mb="0" cb="0"/><line nr="5945" mi="4" ci="0" mb="0" cb="0"/><line nr="5948" mi="6" ci="0" mb="0" cb="0"/><line nr="5950" mi="4" ci="0" mb="0" cb="0"/><line nr="5952" mi="5" ci="0" mb="0" cb="0"/><line nr="5955" mi="4" ci="0" mb="0" cb="0"/><line nr="5958" mi="6" ci="0" mb="0" cb="0"/><line nr="5960" mi="6" ci="0" mb="0" cb="0"/><line nr="5963" mi="7" ci="0" mb="2" cb="0"/><line nr="5964" mi="1" ci="0" mb="0" cb="0"/><line nr="5967" mi="7" ci="0" mb="2" cb="0"/><line nr="5968" mi="1" ci="0" mb="0" cb="0"/><line nr="5973" mi="6" ci="0" mb="0" cb="0"/><line nr="5975" mi="5" ci="0" mb="0" cb="0"/><line nr="5976" mi="6" ci="0" mb="0" cb="0"/><line nr="5979" mi="7" ci="0" mb="2" cb="0"/><line nr="5980" mi="1" ci="0" mb="0" cb="0"/><line nr="5983" mi="7" ci="0" mb="2" cb="0"/><line nr="5984" mi="1" ci="0" mb="0" cb="0"/><line nr="5989" mi="4" ci="0" mb="0" cb="0"/><line nr="5992" mi="6" ci="0" mb="0" cb="0"/><line nr="5994" mi="6" ci="0" mb="0" cb="0"/><line nr="5997" mi="7" ci="0" mb="2" cb="0"/><line nr="5998" mi="1" ci="0" mb="0" cb="0"/><line nr="6001" mi="7" ci="0" mb="2" cb="0"/><line nr="6002" mi="1" ci="0" mb="0" cb="0"/><line nr="6006" mi="5" ci="0" mb="0" cb="0"/><line nr="6008" mi="6" ci="0" mb="0" cb="0"/><line nr="6010" mi="5" ci="0" mb="0" cb="0"/><line nr="6012" mi="6" ci="0" mb="0" cb="0"/><line nr="6014" mi="6" ci="0" mb="0" cb="0"/><line nr="6017" mi="7" ci="0" mb="2" cb="0"/><line nr="6018" mi="1" ci="0" mb="0" cb="0"/><line nr="6021" mi="7" ci="0" mb="2" cb="0"/><line nr="6022" mi="1" ci="0" mb="0" cb="0"/><line nr="6027" mi="6" ci="0" mb="0" cb="0"/><line nr="6029" mi="6" ci="0" mb="0" cb="0"/><line nr="6032" mi="7" ci="0" mb="2" cb="0"/><line nr="6033" mi="1" ci="0" mb="0" cb="0"/><line nr="6036" mi="7" ci="0" mb="2" cb="0"/><line nr="6037" mi="1" ci="0" mb="0" cb="0"/><line nr="6041" mi="5" ci="0" mb="0" cb="0"/><line nr="6043" mi="4" ci="0" mb="0" cb="0"/><line nr="6046" mi="6" ci="0" mb="0" cb="0"/><line nr="6048" mi="6" ci="0" mb="0" cb="0"/><line nr="6051" mi="7" ci="0" mb="2" cb="0"/><line nr="6052" mi="1" ci="0" mb="0" cb="0"/><line nr="6055" mi="7" ci="0" mb="2" cb="0"/><line nr="6056" mi="1" ci="0" mb="0" cb="0"/><line nr="6060" mi="5" ci="0" mb="0" cb="0"/><line nr="6062" mi="4" ci="0" mb="0" cb="0"/><line nr="6065" mi="6" ci="0" mb="0" cb="0"/><line nr="6067" mi="4" ci="0" mb="0" cb="0"/><line nr="6069" mi="5" ci="0" mb="0" cb="0"/><line nr="6071" mi="6" ci="0" mb="0" cb="0"/><line nr="6074" mi="7" ci="0" mb="2" cb="0"/><line nr="6075" mi="1" ci="0" mb="0" cb="0"/><line nr="6078" mi="7" ci="0" mb="2" cb="0"/><line nr="6079" mi="1" ci="0" mb="0" cb="0"/><line nr="6084" mi="6" ci="0" mb="0" cb="0"/><line nr="6086" mi="5" ci="0" mb="0" cb="0"/><line nr="6088" mi="4" ci="0" mb="0" cb="0"/><line nr="6091" mi="6" ci="0" mb="0" cb="0"/><line nr="6094" mi="4" ci="0" mb="0" cb="0"/><line nr="6097" mi="6" ci="0" mb="0" cb="0"/><line nr="6099" mi="6" ci="0" mb="0" cb="0"/><line nr="6102" mi="7" ci="0" mb="2" cb="0"/><line nr="6103" mi="1" ci="0" mb="0" cb="0"/><line nr="6106" mi="7" ci="0" mb="2" cb="0"/><line nr="6107" mi="1" ci="0" mb="0" cb="0"/><line nr="6112" mi="5" ci="0" mb="0" cb="0"/><line nr="6113" mi="5" ci="0" mb="0" cb="0"/><line nr="6115" mi="4" ci="0" mb="0" cb="0"/><line nr="6118" mi="6" ci="0" mb="0" cb="0"/><line nr="6120" mi="5" ci="0" mb="0" cb="0"/><line nr="6122" mi="6" ci="0" mb="0" cb="0"/><line nr="6124" mi="6" ci="0" mb="0" cb="0"/><line nr="6127" mi="7" ci="0" mb="2" cb="0"/><line nr="6128" mi="1" ci="0" mb="0" cb="0"/><line nr="6131" mi="7" ci="0" mb="2" cb="0"/><line nr="6132" mi="1" ci="0" mb="0" cb="0"/><line nr="6137" mi="6" ci="0" mb="0" cb="0"/><line nr="6139" mi="6" ci="0" mb="0" cb="0"/><line nr="6142" mi="7" ci="0" mb="2" cb="0"/><line nr="6143" mi="1" ci="0" mb="0" cb="0"/><line nr="6146" mi="7" ci="0" mb="2" cb="0"/><line nr="6147" mi="1" ci="0" mb="0" cb="0"/><line nr="6151" mi="4" ci="0" mb="0" cb="0"/><line nr="6155" mi="3" ci="0" mb="0" cb="0"/><line nr="6156" mi="3" ci="0" mb="0" cb="0"/><line nr="6157" mi="7" ci="0" mb="0" cb="0"/><line nr="6158" mi="2" ci="0" mb="0" cb="0"/><line nr="6159" mi="2" ci="0" mb="0" cb="0"/><line nr="6160" mi="6" ci="0" mb="0" cb="0"/><line nr="6164" mi="4" ci="0" mb="0" cb="0"/><line nr="6166" mi="3" ci="0" mb="0" cb="0"/><line nr="6167" mi="4" ci="0" mb="0" cb="0"/><line nr="6168" mi="10" ci="0" mb="14" cb="0"/><line nr="6171" mi="5" ci="0" mb="0" cb="0"/><line nr="6172" mi="3" ci="0" mb="0" cb="0"/><line nr="6173" mi="2" ci="0" mb="0" cb="0"/><line nr="6175" mi="3" ci="0" mb="0" cb="0"/><line nr="6176" mi="3" ci="0" mb="0" cb="0"/><line nr="6178" mi="1" ci="0" mb="0" cb="0"/><line nr="6181" mi="5" ci="0" mb="0" cb="0"/><line nr="6182" mi="3" ci="0" mb="0" cb="0"/><line nr="6183" mi="2" ci="0" mb="0" cb="0"/><line nr="6184" mi="3" ci="0" mb="0" cb="0"/><line nr="6185" mi="3" ci="0" mb="0" cb="0"/><line nr="6186" mi="3" ci="0" mb="0" cb="0"/><line nr="6187" mi="4" ci="0" mb="0" cb="0"/><line nr="6189" mi="1" ci="0" mb="0" cb="0"/><line nr="6192" mi="5" ci="0" mb="0" cb="0"/><line nr="6193" mi="3" ci="0" mb="0" cb="0"/><line nr="6194" mi="2" ci="0" mb="0" cb="0"/><line nr="6195" mi="3" ci="0" mb="0" cb="0"/><line nr="6196" mi="4" ci="0" mb="0" cb="0"/><line nr="6197" mi="3" ci="0" mb="0" cb="0"/><line nr="6198" mi="4" ci="0" mb="0" cb="0"/><line nr="6199" mi="3" ci="0" mb="0" cb="0"/><line nr="6200" mi="4" ci="0" mb="0" cb="0"/><line nr="6201" mi="5" ci="0" mb="0" cb="0"/><line nr="6205" mi="3" ci="0" mb="0" cb="0"/><line nr="6206" mi="3" ci="0" mb="0" cb="0"/><line nr="6209" mi="3" ci="0" mb="0" cb="0"/><line nr="6210" mi="4" ci="0" mb="0" cb="0"/><line nr="6211" mi="5" ci="0" mb="0" cb="0"/><line nr="6212" mi="3" ci="0" mb="2" cb="0"/><line nr="6213" mi="3" ci="0" mb="0" cb="0"/><line nr="6214" mi="4" ci="0" mb="0" cb="0"/><line nr="6215" mi="5" ci="0" mb="0" cb="0"/><line nr="6216" mi="3" ci="0" mb="2" cb="0"/><line nr="6218" mi="3" ci="0" mb="0" cb="0"/><line nr="6219" mi="4" ci="0" mb="0" cb="0"/><line nr="6220" mi="3" ci="0" mb="0" cb="0"/><line nr="6221" mi="5" ci="0" mb="0" cb="0"/><line nr="6225" mi="3" ci="0" mb="0" cb="0"/><line nr="6226" mi="4" ci="0" mb="0" cb="0"/><line nr="6228" mi="1" ci="0" mb="0" cb="0"/><line nr="6231" mi="5" ci="0" mb="0" cb="0"/><line nr="6232" mi="3" ci="0" mb="0" cb="0"/><line nr="6233" mi="2" ci="0" mb="0" cb="0"/><line nr="6234" mi="3" ci="0" mb="0" cb="0"/><line nr="6235" mi="4" ci="0" mb="0" cb="0"/><line nr="6236" mi="3" ci="0" mb="0" cb="0"/><line nr="6237" mi="4" ci="0" mb="0" cb="0"/><line nr="6238" mi="5" ci="0" mb="0" cb="0"/><line nr="6242" mi="3" ci="0" mb="0" cb="0"/><line nr="6243" mi="3" ci="0" mb="0" cb="0"/><line nr="6246" mi="3" ci="0" mb="0" cb="0"/><line nr="6247" mi="4" ci="0" mb="0" cb="0"/><line nr="6248" mi="5" ci="0" mb="0" cb="0"/><line nr="6249" mi="3" ci="0" mb="2" cb="0"/><line nr="6250" mi="3" ci="0" mb="0" cb="0"/><line nr="6251" mi="4" ci="0" mb="0" cb="0"/><line nr="6252" mi="5" ci="0" mb="0" cb="0"/><line nr="6253" mi="3" ci="0" mb="2" cb="0"/><line nr="6255" mi="3" ci="0" mb="0" cb="0"/><line nr="6256" mi="4" ci="0" mb="0" cb="0"/><line nr="6257" mi="3" ci="0" mb="0" cb="0"/><line nr="6258" mi="5" ci="0" mb="0" cb="0"/><line nr="6262" mi="3" ci="0" mb="0" cb="0"/><line nr="6263" mi="4" ci="0" mb="0" cb="0"/><line nr="6265" mi="1" ci="0" mb="0" cb="0"/><line nr="6268" mi="5" ci="0" mb="0" cb="0"/><line nr="6269" mi="3" ci="0" mb="0" cb="0"/><line nr="6270" mi="2" ci="0" mb="0" cb="0"/><line nr="6271" mi="3" ci="0" mb="0" cb="0"/><line nr="6272" mi="4" ci="0" mb="0" cb="0"/><line nr="6273" mi="3" ci="0" mb="0" cb="0"/><line nr="6274" mi="4" ci="0" mb="0" cb="0"/><line nr="6275" mi="3" ci="0" mb="0" cb="0"/><line nr="6276" mi="3" ci="0" mb="0" cb="0"/><line nr="6277" mi="3" ci="0" mb="0" cb="0"/><line nr="6278" mi="4" ci="0" mb="0" cb="0"/><line nr="6279" mi="3" ci="0" mb="0" cb="0"/><line nr="6280" mi="4" ci="0" mb="0" cb="0"/><line nr="6281" mi="3" ci="0" mb="0" cb="0"/><line nr="6282" mi="4" ci="0" mb="0" cb="0"/><line nr="6284" mi="1" ci="0" mb="0" cb="0"/><line nr="6287" mi="5" ci="0" mb="0" cb="0"/><line nr="6288" mi="3" ci="0" mb="0" cb="0"/><line nr="6289" mi="2" ci="0" mb="0" cb="0"/><line nr="6290" mi="3" ci="0" mb="0" cb="0"/><line nr="6291" mi="4" ci="0" mb="0" cb="0"/><line nr="6292" mi="3" ci="0" mb="0" cb="0"/><line nr="6293" mi="4" ci="0" mb="0" cb="0"/><line nr="6294" mi="3" ci="0" mb="0" cb="0"/><line nr="6295" mi="4" ci="0" mb="0" cb="0"/><line nr="6296" mi="5" ci="0" mb="0" cb="0"/><line nr="6297" mi="44" ci="0" mb="12" cb="0"/><line nr="6299" mi="3" ci="0" mb="0" cb="0"/><line nr="6300" mi="3" ci="0" mb="0" cb="0"/><line nr="6301" mi="3" ci="0" mb="0" cb="0"/><line nr="6302" mi="4" ci="0" mb="0" cb="0"/><line nr="6303" mi="5" ci="0" mb="0" cb="0"/><line nr="6304" mi="3" ci="0" mb="2" cb="0"/><line nr="6307" mi="3" ci="0" mb="0" cb="0"/><line nr="6308" mi="4" ci="0" mb="0" cb="0"/><line nr="6309" mi="3" ci="0" mb="0" cb="0"/><line nr="6310" mi="3" ci="0" mb="0" cb="0"/><line nr="6313" mi="3" ci="0" mb="0" cb="0"/><line nr="6314" mi="4" ci="0" mb="0" cb="0"/><line nr="6315" mi="6" ci="0" mb="0" cb="0"/><line nr="6320" mi="3" ci="0" mb="0" cb="0"/><line nr="6321" mi="4" ci="0" mb="0" cb="0"/><line nr="6323" mi="1" ci="0" mb="0" cb="0"/><line nr="6326" mi="5" ci="0" mb="0" cb="0"/><line nr="6327" mi="3" ci="0" mb="0" cb="0"/><line nr="6328" mi="2" ci="0" mb="0" cb="0"/><line nr="6329" mi="3" ci="0" mb="0" cb="0"/><line nr="6330" mi="4" ci="0" mb="0" cb="0"/><line nr="6331" mi="3" ci="0" mb="0" cb="0"/><line nr="6332" mi="4" ci="0" mb="0" cb="0"/><line nr="6333" mi="3" ci="0" mb="0" cb="0"/><line nr="6334" mi="4" ci="0" mb="0" cb="0"/><line nr="6335" mi="5" ci="0" mb="0" cb="0"/><line nr="6336" mi="44" ci="0" mb="12" cb="0"/><line nr="6338" mi="3" ci="0" mb="0" cb="0"/><line nr="6339" mi="3" ci="0" mb="0" cb="0"/><line nr="6340" mi="3" ci="0" mb="0" cb="0"/><line nr="6341" mi="4" ci="0" mb="0" cb="0"/><line nr="6342" mi="3" ci="0" mb="0" cb="0"/><line nr="6343" mi="3" ci="0" mb="0" cb="0"/><line nr="6344" mi="3" ci="0" mb="0" cb="0"/><line nr="6345" mi="4" ci="0" mb="0" cb="0"/><line nr="6346" mi="5" ci="0" mb="0" cb="0"/><line nr="6347" mi="3" ci="0" mb="2" cb="0"/><line nr="6350" mi="3" ci="0" mb="0" cb="0"/><line nr="6351" mi="4" ci="0" mb="0" cb="0"/><line nr="6352" mi="3" ci="0" mb="0" cb="0"/><line nr="6353" mi="3" ci="0" mb="0" cb="0"/><line nr="6354" mi="3" ci="0" mb="0" cb="0"/><line nr="6355" mi="4" ci="0" mb="0" cb="0"/><line nr="6356" mi="3" ci="0" mb="0" cb="0"/><line nr="6357" mi="3" ci="0" mb="0" cb="0"/><line nr="6360" mi="3" ci="0" mb="0" cb="0"/><line nr="6361" mi="4" ci="0" mb="0" cb="0"/><line nr="6362" mi="6" ci="0" mb="0" cb="0"/><line nr="6367" mi="3" ci="0" mb="0" cb="0"/><line nr="6368" mi="4" ci="0" mb="0" cb="0"/><line nr="6370" mi="1" ci="0" mb="0" cb="0"/><line nr="6373" mi="5" ci="0" mb="0" cb="0"/><line nr="6374" mi="3" ci="0" mb="0" cb="0"/><line nr="6375" mi="2" ci="0" mb="0" cb="0"/><line nr="6376" mi="3" ci="0" mb="0" cb="0"/><line nr="6377" mi="4" ci="0" mb="0" cb="0"/><line nr="6378" mi="3" ci="0" mb="0" cb="0"/><line nr="6379" mi="4" ci="0" mb="0" cb="0"/><line nr="6380" mi="3" ci="0" mb="0" cb="0"/><line nr="6381" mi="4" ci="0" mb="0" cb="0"/><line nr="6382" mi="5" ci="0" mb="0" cb="0"/><line nr="6383" mi="44" ci="0" mb="12" cb="0"/><line nr="6385" mi="3" ci="0" mb="0" cb="0"/><line nr="6386" mi="3" ci="0" mb="0" cb="0"/><line nr="6387" mi="3" ci="0" mb="0" cb="0"/><line nr="6388" mi="4" ci="0" mb="0" cb="0"/><line nr="6389" mi="3" ci="0" mb="0" cb="0"/><line nr="6390" mi="3" ci="0" mb="0" cb="0"/><line nr="6391" mi="3" ci="0" mb="0" cb="0"/><line nr="6392" mi="4" ci="0" mb="0" cb="0"/><line nr="6393" mi="5" ci="0" mb="0" cb="0"/><line nr="6394" mi="3" ci="0" mb="2" cb="0"/><line nr="6397" mi="3" ci="0" mb="0" cb="0"/><line nr="6398" mi="4" ci="0" mb="0" cb="0"/><line nr="6399" mi="3" ci="0" mb="0" cb="0"/><line nr="6400" mi="3" ci="0" mb="0" cb="0"/><line nr="6401" mi="3" ci="0" mb="0" cb="0"/><line nr="6402" mi="4" ci="0" mb="0" cb="0"/><line nr="6403" mi="3" ci="0" mb="0" cb="0"/><line nr="6404" mi="3" ci="0" mb="0" cb="0"/><line nr="6407" mi="3" ci="0" mb="0" cb="0"/><line nr="6408" mi="4" ci="0" mb="0" cb="0"/><line nr="6409" mi="6" ci="0" mb="0" cb="0"/><line nr="6414" mi="3" ci="0" mb="0" cb="0"/><line nr="6415" mi="4" ci="0" mb="0" cb="0"/><line nr="6417" mi="1" ci="0" mb="0" cb="0"/><line nr="6420" mi="5" ci="0" mb="0" cb="0"/><line nr="6421" mi="3" ci="0" mb="0" cb="0"/><line nr="6422" mi="2" ci="0" mb="0" cb="0"/><line nr="6423" mi="3" ci="0" mb="0" cb="0"/><line nr="6424" mi="3" ci="0" mb="0" cb="0"/><line nr="6425" mi="3" ci="0" mb="0" cb="0"/><line nr="6426" mi="4" ci="0" mb="0" cb="0"/><line nr="6427" mi="3" ci="0" mb="0" cb="0"/><line nr="6428" mi="4" ci="0" mb="0" cb="0"/><line nr="6429" mi="3" ci="0" mb="0" cb="0"/><line nr="6430" mi="4" ci="0" mb="0" cb="0"/><line nr="6432" mi="1" ci="0" mb="0" cb="0"/><line nr="6435" mi="5" ci="0" mb="0" cb="0"/><line nr="6436" mi="3" ci="0" mb="0" cb="0"/><line nr="6437" mi="2" ci="0" mb="0" cb="0"/><line nr="6438" mi="3" ci="0" mb="0" cb="0"/><line nr="6439" mi="3" ci="0" mb="0" cb="0"/><line nr="6440" mi="3" ci="0" mb="0" cb="0"/><line nr="6441" mi="4" ci="0" mb="0" cb="0"/><line nr="6442" mi="3" ci="0" mb="0" cb="0"/><line nr="6443" mi="4" ci="0" mb="0" cb="0"/><line nr="6444" mi="5" ci="0" mb="0" cb="0"/><line nr="6445" mi="44" ci="0" mb="12" cb="0"/><line nr="6447" mi="3" ci="0" mb="0" cb="0"/><line nr="6448" mi="3" ci="0" mb="0" cb="0"/><line nr="6449" mi="3" ci="0" mb="0" cb="0"/><line nr="6450" mi="4" ci="0" mb="0" cb="0"/><line nr="6451" mi="10" ci="0" mb="0" cb="0"/><line nr="6452" mi="5" ci="0" mb="4" cb="0"/><line nr="6453" mi="3" ci="0" mb="2" cb="0"/><line nr="6456" mi="3" ci="0" mb="0" cb="0"/><line nr="6457" mi="4" ci="0" mb="0" cb="0"/><line nr="6458" mi="3" ci="0" mb="0" cb="0"/><line nr="6459" mi="3" ci="0" mb="0" cb="0"/><line nr="6463" mi="3" ci="0" mb="0" cb="0"/><line nr="6464" mi="4" ci="0" mb="0" cb="0"/><line nr="6465" mi="11" ci="0" mb="0" cb="0"/><line nr="6467" mi="3" ci="0" mb="0" cb="0"/><line nr="6468" mi="4" ci="0" mb="0" cb="0"/><line nr="6469" mi="5" ci="0" mb="0" cb="0"/><line nr="6470" mi="3" ci="0" mb="2" cb="0"/><line nr="6473" mi="3" ci="0" mb="0" cb="0"/><line nr="6474" mi="4" ci="0" mb="0" cb="0"/><line nr="6475" mi="3" ci="0" mb="0" cb="0"/><line nr="6476" mi="3" ci="0" mb="0" cb="0"/><line nr="6479" mi="3" ci="0" mb="0" cb="0"/><line nr="6480" mi="4" ci="0" mb="0" cb="0"/><line nr="6481" mi="6" ci="0" mb="0" cb="0"/><line nr="6486" mi="3" ci="0" mb="0" cb="0"/><line nr="6487" mi="4" ci="0" mb="0" cb="0"/><line nr="6489" mi="1" ci="0" mb="0" cb="0"/><line nr="6492" mi="5" ci="0" mb="0" cb="0"/><line nr="6493" mi="3" ci="0" mb="0" cb="0"/><line nr="6494" mi="2" ci="0" mb="0" cb="0"/><line nr="6495" mi="3" ci="0" mb="0" cb="0"/><line nr="6496" mi="3" ci="0" mb="0" cb="0"/><line nr="6498" mi="1" ci="0" mb="0" cb="0"/><line nr="6501" mi="5" ci="0" mb="0" cb="0"/><line nr="6502" mi="3" ci="0" mb="0" cb="0"/><line nr="6503" mi="2" ci="0" mb="0" cb="0"/><line nr="6504" mi="3" ci="0" mb="0" cb="0"/><line nr="6505" mi="3" ci="0" mb="0" cb="0"/><line nr="6506" mi="3" ci="0" mb="0" cb="0"/><line nr="6507" mi="4" ci="0" mb="0" cb="0"/><line nr="6508" mi="3" ci="0" mb="0" cb="0"/><line nr="6509" mi="3" ci="0" mb="0" cb="0"/><line nr="6511" mi="1" ci="0" mb="0" cb="0"/><line nr="6514" mi="5" ci="0" mb="0" cb="0"/><line nr="6515" mi="3" ci="0" mb="0" cb="0"/><line nr="6516" mi="2" ci="0" mb="0" cb="0"/><line nr="6517" mi="3" ci="0" mb="0" cb="0"/><line nr="6518" mi="4" ci="0" mb="0" cb="0"/><line nr="6519" mi="3" ci="0" mb="0" cb="0"/><line nr="6520" mi="3" ci="0" mb="0" cb="0"/><line nr="6521" mi="3" ci="0" mb="0" cb="0"/><line nr="6522" mi="4" ci="0" mb="0" cb="0"/><line nr="6526" mi="7" ci="0" mb="0" cb="0"/><line nr="6527" mi="3" ci="0" mb="0" cb="0"/><line nr="6528" mi="4" ci="0" mb="0" cb="0"/><line nr="6529" mi="10" ci="0" mb="0" cb="0"/><line nr="6530" mi="5" ci="0" mb="4" cb="0"/><line nr="6531" mi="3" ci="0" mb="2" cb="0"/><line nr="6532" mi="5" ci="0" mb="2" cb="0"/><line nr="6533" mi="2" ci="0" mb="0" cb="0"/><line nr="6535" mi="3" ci="0" mb="0" cb="0"/><line nr="6536" mi="4" ci="0" mb="0" cb="0"/><line nr="6537" mi="10" ci="0" mb="3" cb="0"/><line nr="6540" mi="9" ci="0" mb="0" cb="0"/><line nr="6541" mi="4" ci="0" mb="0" cb="0"/><line nr="6542" mi="5" ci="0" mb="0" cb="0"/><line nr="6543" mi="3" ci="0" mb="0" cb="0"/><line nr="6544" mi="12" ci="0" mb="2" cb="0"/><line nr="6545" mi="3" ci="0" mb="0" cb="0"/><line nr="6546" mi="4" ci="0" mb="0" cb="0"/><line nr="6547" mi="3" ci="0" mb="0" cb="0"/><line nr="6548" mi="6" ci="0" mb="0" cb="0"/><line nr="6549" mi="3" ci="0" mb="0" cb="0"/><line nr="6550" mi="4" ci="0" mb="0" cb="0"/><line nr="6552" mi="1" ci="0" mb="0" cb="0"/><line nr="6555" mi="9" ci="0" mb="0" cb="0"/><line nr="6556" mi="4" ci="0" mb="0" cb="0"/><line nr="6557" mi="5" ci="0" mb="0" cb="0"/><line nr="6558" mi="3" ci="0" mb="0" cb="0"/><line nr="6559" mi="12" ci="0" mb="2" cb="0"/><line nr="6560" mi="3" ci="0" mb="0" cb="0"/><line nr="6561" mi="4" ci="0" mb="0" cb="0"/><line nr="6562" mi="3" ci="0" mb="0" cb="0"/><line nr="6563" mi="5" ci="0" mb="0" cb="0"/><line nr="6569" mi="3" ci="0" mb="0" cb="0"/><line nr="6570" mi="4" ci="0" mb="0" cb="0"/><line nr="6571" mi="11" ci="0" mb="0" cb="0"/><line nr="6575" mi="1" ci="0" mb="0" cb="0"/><line nr="6576" mi="3" ci="0" mb="0" cb="0"/><line nr="6577" mi="5" ci="0" mb="0" cb="0"/><line nr="6578" mi="5" ci="0" mb="0" cb="0"/><line nr="6581" mi="3" ci="0" mb="0" cb="0"/><line nr="6583" mi="2" ci="0" mb="0" cb="0"/><line nr="6589" mi="6" ci="0" mb="0" cb="0"/><line nr="6592" mi="6" ci="0" mb="0" cb="0"/><line nr="6595" mi="4" ci="0" mb="0" cb="0"/><line nr="6596" mi="1" ci="0" mb="0" cb="0"/><line nr="6597" mi="2" ci="0" mb="0" cb="0"/><line nr="6600" mi="7" ci="0" mb="2" cb="0"/><line nr="6601" mi="1" ci="0" mb="0" cb="0"/><line nr="6604" mi="7" ci="0" mb="2" cb="0"/><line nr="6605" mi="1" ci="0" mb="0" cb="0"/><line nr="6609" mi="8" ci="0" mb="0" cb="0"/><line nr="6610" mi="5" ci="0" mb="0" cb="0"/><line nr="6612" mi="3" ci="0" mb="0" cb="0"/><line nr="6613" mi="4" ci="0" mb="0" cb="0"/><line nr="6614" mi="10" ci="0" mb="3" cb="0"/><line nr="6616" mi="4" ci="0" mb="0" cb="0"/><line nr="6618" mi="3" ci="0" mb="0" cb="0"/><line nr="6619" mi="3" ci="0" mb="0" cb="0"/><line nr="6621" mi="1" ci="0" mb="0" cb="0"/><line nr="6623" mi="4" ci="0" mb="0" cb="0"/><line nr="6625" mi="3" ci="0" mb="0" cb="0"/><line nr="6626" mi="3" ci="0" mb="0" cb="0"/><line nr="6631" mi="1" ci="0" mb="0" cb="0"/><line nr="6632" mi="3" ci="0" mb="0" cb="0"/><line nr="6633" mi="5" ci="0" mb="0" cb="0"/><line nr="6634" mi="5" ci="0" mb="0" cb="0"/><line nr="6637" mi="2" ci="0" mb="0" cb="0"/><line nr="6639" mi="2" ci="0" mb="0" cb="0"/><line nr="6645" mi="4" ci="0" mb="0" cb="0"/><line nr="6646" mi="1" ci="0" mb="0" cb="0"/><line nr="6647" mi="2" ci="0" mb="0" cb="0"/><line nr="6649" mi="3" ci="0" mb="0" cb="0"/><line nr="6651" mi="3" ci="0" mb="0" cb="0"/><line nr="6652" mi="1" ci="0" mb="0" cb="0"/><line nr="6656" mi="5" ci="0" mb="0" cb="0"/><line nr="6657" mi="5" ci="0" mb="0" cb="0"/><line nr="6658" mi="5" ci="0" mb="0" cb="0"/><line nr="6659" mi="6" ci="0" mb="0" cb="0"/><line nr="6662" mi="7" ci="0" mb="2" cb="0"/><line nr="6663" mi="1" ci="0" mb="0" cb="0"/><line nr="6666" mi="7" ci="0" mb="2" cb="0"/><line nr="6667" mi="1" ci="0" mb="0" cb="0"/><line nr="6671" mi="8" ci="0" mb="0" cb="0"/><line nr="6672" mi="5" ci="0" mb="0" cb="0"/><line nr="6674" mi="5" ci="0" mb="0" cb="0"/><line nr="6675" mi="4" ci="0" mb="0" cb="0"/><line nr="6677" mi="3" ci="0" mb="0" cb="0"/><line nr="6678" mi="4" ci="0" mb="0" cb="0"/><line nr="6679" mi="3" ci="0" mb="0" cb="0"/><line nr="6680" mi="4" ci="0" mb="0" cb="0"/><line nr="6681" mi="3" ci="0" mb="0" cb="0"/><line nr="6682" mi="4" ci="0" mb="0" cb="0"/><line nr="6685" mi="1" ci="0" mb="0" cb="0"/><line nr="6686" mi="3" ci="0" mb="0" cb="0"/><line nr="6687" mi="5" ci="0" mb="0" cb="0"/><line nr="6688" mi="5" ci="0" mb="0" cb="0"/><line nr="6691" mi="2" ci="0" mb="0" cb="0"/><line nr="6693" mi="2" ci="0" mb="0" cb="0"/><line nr="6698" mi="5" ci="0" mb="0" cb="0"/><line nr="6699" mi="5" ci="0" mb="0" cb="0"/><line nr="6700" mi="5" ci="0" mb="0" cb="0"/><line nr="6701" mi="5" ci="0" mb="0" cb="0"/><line nr="6702" mi="5" ci="0" mb="0" cb="0"/><line nr="6703" mi="5" ci="0" mb="0" cb="0"/><line nr="6705" mi="4" ci="0" mb="0" cb="0"/><line nr="6706" mi="1" ci="0" mb="0" cb="0"/><line nr="6707" mi="2" ci="0" mb="0" cb="0"/><line nr="6710" mi="7" ci="0" mb="2" cb="0"/><line nr="6711" mi="1" ci="0" mb="0" cb="0"/><line nr="6714" mi="7" ci="0" mb="2" cb="0"/><line nr="6715" mi="1" ci="0" mb="0" cb="0"/><line nr="6719" mi="8" ci="0" mb="0" cb="0"/><line nr="6720" mi="5" ci="0" mb="0" cb="0"/><line nr="6723" mi="4" ci="0" mb="0" cb="0"/><line nr="6725" mi="3" ci="0" mb="0" cb="0"/><line nr="6726" mi="5" ci="0" mb="0" cb="0"/><line nr="6727" mi="16" ci="0" mb="4" cb="0"/><line nr="6728" mi="6" ci="0" mb="0" cb="0"/><line nr="6731" mi="9" ci="0" mb="2" cb="0"/><line nr="6732" mi="4" ci="0" mb="0" cb="0"/><line nr="6733" mi="3" ci="0" mb="0" cb="0"/><line nr="6737" mi="1" ci="0" mb="0" cb="0"/><line nr="6738" mi="3" ci="0" mb="0" cb="0"/><line nr="6739" mi="5" ci="0" mb="0" cb="0"/><line nr="6740" mi="5" ci="0" mb="0" cb="0"/><line nr="6743" mi="2" ci="0" mb="0" cb="0"/><line nr="6745" mi="2" ci="0" mb="0" cb="0"/><line nr="6750" mi="5" ci="0" mb="0" cb="0"/><line nr="6751" mi="5" ci="0" mb="0" cb="0"/><line nr="6753" mi="4" ci="0" mb="0" cb="0"/><line nr="6754" mi="1" ci="0" mb="0" cb="0"/><line nr="6755" mi="2" ci="0" mb="0" cb="0"/><line nr="6758" mi="7" ci="0" mb="2" cb="0"/><line nr="6759" mi="1" ci="0" mb="0" cb="0"/><line nr="6762" mi="7" ci="0" mb="2" cb="0"/><line nr="6763" mi="1" ci="0" mb="0" cb="0"/><line nr="6767" mi="8" ci="0" mb="0" cb="0"/><line nr="6768" mi="5" ci="0" mb="0" cb="0"/><line nr="6771" mi="4" ci="0" mb="0" cb="0"/><line nr="6773" mi="3" ci="0" mb="0" cb="0"/><line nr="6774" mi="5" ci="0" mb="0" cb="0"/><line nr="6775" mi="6" ci="0" mb="4" cb="0"/><line nr="6776" mi="6" ci="0" mb="0" cb="0"/><line nr="6779" mi="9" ci="0" mb="2" cb="0"/><line nr="6780" mi="4" ci="0" mb="0" cb="0"/><line nr="6781" mi="3" ci="0" mb="0" cb="0"/><line nr="6785" mi="1" ci="0" mb="0" cb="0"/><line nr="6786" mi="3" ci="0" mb="0" cb="0"/><line nr="6787" mi="5" ci="0" mb="0" cb="0"/><line nr="6788" mi="5" ci="0" mb="0" cb="0"/><line nr="6791" mi="2" ci="0" mb="0" cb="0"/><line nr="6793" mi="2" ci="0" mb="0" cb="0"/><line nr="6798" mi="5" ci="0" mb="0" cb="0"/><line nr="6799" mi="5" ci="0" mb="0" cb="0"/><line nr="6801" mi="4" ci="0" mb="0" cb="0"/><line nr="6804" mi="6" ci="0" mb="0" cb="0"/><line nr="6806" mi="5" ci="0" mb="0" cb="0"/><line nr="6807" mi="5" ci="0" mb="0" cb="0"/><line nr="6808" mi="5" ci="0" mb="0" cb="0"/><line nr="6810" mi="4" ci="0" mb="0" cb="0"/><line nr="6813" mi="6" ci="0" mb="0" cb="0"/><line nr="6815" mi="5" ci="0" mb="0" cb="0"/><line nr="6817" mi="4" ci="0" mb="0" cb="0"/><line nr="6820" mi="6" ci="0" mb="0" cb="0"/><line nr="6823" mi="6" ci="0" mb="0" cb="0"/><line nr="6826" mi="4" ci="0" mb="0" cb="0"/><line nr="6829" mi="6" ci="0" mb="0" cb="0"/><line nr="6832" mi="0" ci="4" mb="0" cb="0"/><line nr="6833" mi="0" ci="1" mb="0" cb="0"/><line nr="6834" mi="2" ci="0" mb="0" cb="0"/><line nr="6837" mi="7" ci="0" mb="2" cb="0"/><line nr="6838" mi="1" ci="0" mb="0" cb="0"/><line nr="6841" mi="7" ci="0" mb="2" cb="0"/><line nr="6842" mi="1" ci="0" mb="0" cb="0"/><line nr="6846" mi="4" ci="0" mb="0" cb="0"/><line nr="6850" mi="0" ci="3" mb="0" cb="0"/><line nr="6851" mi="0" ci="3" mb="0" cb="0"/><line nr="6852" mi="0" ci="7" mb="0" cb="0"/><line nr="6853" mi="0" ci="2" mb="0" cb="0"/><line nr="6854" mi="0" ci="2" mb="0" cb="0"/><line nr="6855" mi="0" ci="6" mb="0" cb="0"/><line nr="6859" mi="0" ci="4" mb="0" cb="0"/><line nr="6861" mi="0" ci="3" mb="0" cb="0"/><line nr="6862" mi="0" ci="4" mb="0" cb="0"/><line nr="6863" mi="0" ci="10" mb="5" cb="1"/><line nr="6866" mi="3" ci="0" mb="0" cb="0"/><line nr="6867" mi="4" ci="0" mb="0" cb="0"/><line nr="6868" mi="3" ci="0" mb="0" cb="0"/><line nr="6869" mi="4" ci="0" mb="0" cb="0"/><line nr="6870" mi="3" ci="0" mb="0" cb="0"/><line nr="6871" mi="4" ci="0" mb="0" cb="0"/><line nr="6872" mi="3" ci="0" mb="0" cb="0"/><line nr="6873" mi="4" ci="0" mb="0" cb="0"/><line nr="6875" mi="1" ci="0" mb="0" cb="0"/><line nr="6878" mi="3" ci="0" mb="0" cb="0"/><line nr="6879" mi="4" ci="0" mb="0" cb="0"/><line nr="6880" mi="3" ci="0" mb="0" cb="0"/><line nr="6881" mi="4" ci="0" mb="0" cb="0"/><line nr="6882" mi="3" ci="0" mb="0" cb="0"/><line nr="6883" mi="4" ci="0" mb="0" cb="0"/><line nr="6884" mi="3" ci="0" mb="0" cb="0"/><line nr="6885" mi="4" ci="0" mb="0" cb="0"/><line nr="6886" mi="3" ci="0" mb="0" cb="0"/><line nr="6887" mi="4" ci="0" mb="0" cb="0"/><line nr="6888" mi="3" ci="0" mb="0" cb="0"/><line nr="6889" mi="4" ci="0" mb="0" cb="0"/><line nr="6891" mi="1" ci="0" mb="0" cb="0"/><line nr="6894" mi="3" ci="0" mb="0" cb="0"/><line nr="6895" mi="4" ci="0" mb="0" cb="0"/><line nr="6896" mi="3" ci="0" mb="0" cb="0"/><line nr="6897" mi="4" ci="0" mb="0" cb="0"/><line nr="6898" mi="3" ci="0" mb="0" cb="0"/><line nr="6899" mi="4" ci="0" mb="0" cb="0"/><line nr="6900" mi="5" ci="0" mb="0" cb="0"/><line nr="6901" mi="44" ci="0" mb="12" cb="0"/><line nr="6903" mi="3" ci="0" mb="0" cb="0"/><line nr="6904" mi="3" ci="0" mb="0" cb="0"/><line nr="6905" mi="3" ci="0" mb="0" cb="0"/><line nr="6906" mi="4" ci="0" mb="0" cb="0"/><line nr="6907" mi="3" ci="0" mb="0" cb="0"/><line nr="6908" mi="4" ci="0" mb="0" cb="0"/><line nr="6909" mi="5" ci="0" mb="0" cb="0"/><line nr="6910" mi="3" ci="0" mb="2" cb="0"/><line nr="6913" mi="3" ci="0" mb="0" cb="0"/><line nr="6914" mi="4" ci="0" mb="0" cb="0"/><line nr="6915" mi="3" ci="0" mb="0" cb="0"/><line nr="6916" mi="3" ci="0" mb="0" cb="0"/><line nr="6917" mi="3" ci="0" mb="0" cb="0"/><line nr="6918" mi="4" ci="0" mb="0" cb="0"/><line nr="6921" mi="3" ci="0" mb="0" cb="0"/><line nr="6922" mi="4" ci="0" mb="0" cb="0"/><line nr="6923" mi="6" ci="0" mb="0" cb="0"/><line nr="6928" mi="3" ci="0" mb="0" cb="0"/><line nr="6929" mi="4" ci="0" mb="0" cb="0"/><line nr="6931" mi="1" ci="0" mb="0" cb="0"/><line nr="6934" mi="3" ci="0" mb="0" cb="0"/><line nr="6935" mi="4" ci="0" mb="0" cb="0"/><line nr="6936" mi="3" ci="0" mb="0" cb="0"/><line nr="6937" mi="4" ci="0" mb="0" cb="0"/><line nr="6938" mi="3" ci="0" mb="0" cb="0"/><line nr="6939" mi="3" ci="0" mb="0" cb="0"/><line nr="6940" mi="3" ci="0" mb="0" cb="0"/><line nr="6941" mi="4" ci="0" mb="0" cb="0"/><line nr="6942" mi="3" ci="0" mb="0" cb="0"/><line nr="6943" mi="3" ci="0" mb="0" cb="0"/><line nr="6944" mi="3" ci="0" mb="0" cb="0"/><line nr="6945" mi="4" ci="0" mb="0" cb="0"/><line nr="6947" mi="1" ci="0" mb="0" cb="0"/><line nr="6950" mi="0" ci="3" mb="0" cb="0"/><line nr="6951" mi="0" ci="3" mb="0" cb="0"/><line nr="6952" mi="0" ci="3" mb="0" cb="0"/><line nr="6953" mi="0" ci="4" mb="0" cb="0"/><line nr="6954" mi="0" ci="10" mb="1" cb="1"/><line nr="6957" mi="3" ci="0" mb="0" cb="0"/><line nr="6958" mi="4" ci="0" mb="0" cb="0"/><line nr="6959" mi="3" ci="0" mb="0" cb="0"/><line nr="6960" mi="3" ci="0" mb="0" cb="0"/><line nr="6961" mi="3" ci="0" mb="0" cb="0"/><line nr="6962" mi="4" ci="0" mb="0" cb="0"/><line nr="6963" mi="5" ci="0" mb="0" cb="0"/><line nr="6964" mi="3" ci="0" mb="2" cb="0"/><line nr="6967" mi="3" ci="0" mb="0" cb="0"/><line nr="6968" mi="4" ci="0" mb="0" cb="0"/><line nr="6969" mi="3" ci="0" mb="0" cb="0"/><line nr="6970" mi="3" ci="0" mb="0" cb="0"/><line nr="6973" mi="3" ci="0" mb="0" cb="0"/><line nr="6974" mi="4" ci="0" mb="0" cb="0"/><line nr="6975" mi="6" ci="0" mb="0" cb="0"/><line nr="6977" mi="3" ci="0" mb="0" cb="0"/><line nr="6978" mi="4" ci="0" mb="0" cb="0"/><line nr="6985" mi="0" ci="7" mb="0" cb="0"/><line nr="6986" mi="0" ci="3" mb="0" cb="0"/><line nr="6987" mi="0" ci="4" mb="0" cb="0"/><line nr="6988" mi="0" ci="10" mb="0" cb="0"/><line nr="6989" mi="2" ci="3" mb="3" cb="1"/><line nr="6990" mi="3" ci="0" mb="2" cb="0"/><line nr="6991" mi="5" ci="0" mb="2" cb="0"/><line nr="6992" mi="2" ci="0" mb="0" cb="0"/><line nr="6995" mi="6" ci="0" mb="0" cb="0"/><line nr="6996" mi="5" ci="0" mb="0" cb="0"/><line nr="6997" mi="3" ci="0" mb="0" cb="0"/><line nr="6998" mi="12" ci="0" mb="2" cb="0"/><line nr="6999" mi="3" ci="0" mb="0" cb="0"/><line nr="7000" mi="4" ci="0" mb="0" cb="0"/><line nr="7004" mi="3" ci="0" mb="0" cb="0"/><line nr="7005" mi="4" ci="0" mb="0" cb="0"/><line nr="7006" mi="11" ci="0" mb="0" cb="0"/><line nr="7010" mi="1" ci="0" mb="0" cb="0"/><line nr="7011" mi="3" ci="0" mb="0" cb="0"/><line nr="7012" mi="5" ci="0" mb="0" cb="0"/><line nr="7013" mi="5" ci="0" mb="0" cb="0"/><line nr="7016" mi="0" ci="3" mb="0" cb="0"/><line nr="7018" mi="0" ci="2" mb="0" cb="0"/><line nr="7023" mi="5" ci="0" mb="0" cb="0"/><line nr="7025" mi="4" ci="0" mb="0" cb="0"/><line nr="7026" mi="1" ci="0" mb="0" cb="0"/><line nr="7027" mi="2" ci="0" mb="0" cb="0"/><line nr="7030" mi="7" ci="0" mb="2" cb="0"/><line nr="7031" mi="1" ci="0" mb="0" cb="0"/><line nr="7034" mi="7" ci="0" mb="2" cb="0"/><line nr="7035" mi="1" ci="0" mb="0" cb="0"/><line nr="7039" mi="8" ci="0" mb="0" cb="0"/><line nr="7040" mi="5" ci="0" mb="0" cb="0"/><line nr="7043" mi="4" ci="0" mb="0" cb="0"/><line nr="7045" mi="3" ci="0" mb="0" cb="0"/><line nr="7046" mi="5" ci="0" mb="0" cb="0"/><line nr="7047" mi="6" ci="0" mb="4" cb="0"/><line nr="7048" mi="6" ci="0" mb="0" cb="0"/><line nr="7051" mi="9" ci="0" mb="2" cb="0"/><line nr="7052" mi="4" ci="0" mb="0" cb="0"/><line nr="7053" mi="3" ci="0" mb="0" cb="0"/><line nr="7057" mi="1" ci="0" mb="0" cb="0"/><line nr="7058" mi="3" ci="0" mb="0" cb="0"/><line nr="7059" mi="5" ci="0" mb="0" cb="0"/><line nr="7060" mi="5" ci="0" mb="0" cb="0"/><line nr="7063" mi="2" ci="0" mb="0" cb="0"/><line nr="7065" mi="2" ci="0" mb="0" cb="0"/><line nr="7071" mi="6" ci="0" mb="0" cb="0"/><line nr="7074" mi="0" ci="4" mb="0" cb="0"/><line nr="7075" mi="0" ci="1" mb="0" cb="0"/><line nr="7076" mi="2" ci="0" mb="0" cb="0"/><line nr="7079" mi="7" ci="0" mb="2" cb="0"/><line nr="7080" mi="1" ci="0" mb="0" cb="0"/><line nr="7083" mi="7" ci="0" mb="2" cb="0"/><line nr="7084" mi="1" ci="0" mb="0" cb="0"/><line nr="7088" mi="0" ci="8" mb="0" cb="0"/><line nr="7089" mi="0" ci="5" mb="0" cb="0"/><line nr="7091" mi="0" ci="4" mb="0" cb="0"/><line nr="7093" mi="0" ci="3" mb="0" cb="0"/><line nr="7094" mi="0" ci="3" mb="0" cb="0"/><line nr="7097" mi="1" ci="0" mb="0" cb="0"/><line nr="7098" mi="3" ci="0" mb="0" cb="0"/><line nr="7099" mi="5" ci="0" mb="0" cb="0"/><line nr="7100" mi="5" ci="0" mb="0" cb="0"/><line nr="7103" mi="0" ci="2" mb="0" cb="0"/><line nr="7105" mi="0" ci="2" mb="0" cb="0"/><line nr="7112" mi="5" ci="0" mb="0" cb="0"/><line nr="7113" mi="5" ci="0" mb="0" cb="0"/><line nr="7115" mi="4" ci="0" mb="0" cb="0"/><line nr="7118" mi="6" ci="0" mb="0" cb="0"/><line nr="7121" mi="4" ci="0" mb="0" cb="0"/><line nr="7122" mi="1" ci="0" mb="0" cb="0"/><line nr="7123" mi="2" ci="0" mb="0" cb="0"/><line nr="7126" mi="7" ci="0" mb="2" cb="0"/><line nr="7127" mi="1" ci="0" mb="0" cb="0"/><line nr="7130" mi="7" ci="0" mb="2" cb="0"/><line nr="7131" mi="1" ci="0" mb="0" cb="0"/><line nr="7135" mi="8" ci="0" mb="0" cb="0"/><line nr="7136" mi="5" ci="0" mb="0" cb="0"/><line nr="7138" mi="4" ci="0" mb="0" cb="0"/><line nr="7140" mi="3" ci="0" mb="0" cb="0"/><line nr="7141" mi="4" ci="0" mb="0" cb="0"/><line nr="7142" mi="3" ci="0" mb="0" cb="0"/><line nr="7143" mi="4" ci="0" mb="0" cb="0"/><line nr="7144" mi="3" ci="0" mb="0" cb="0"/><line nr="7145" mi="4" ci="0" mb="0" cb="0"/><line nr="7146" mi="3" ci="0" mb="0" cb="0"/><line nr="7147" mi="4" ci="0" mb="0" cb="0"/><line nr="7150" mi="1" ci="0" mb="0" cb="0"/><line nr="7151" mi="3" ci="0" mb="0" cb="0"/><line nr="7152" mi="5" ci="0" mb="0" cb="0"/><line nr="7153" mi="5" ci="0" mb="0" cb="0"/><line nr="7156" mi="2" ci="0" mb="0" cb="0"/><line nr="7158" mi="2" ci="0" mb="0" cb="0"/><line nr="7164" mi="0" ci="4" mb="0" cb="0"/><line nr="7165" mi="0" ci="1" mb="0" cb="0"/><line nr="7166" mi="2" ci="0" mb="0" cb="0"/><line nr="7168" mi="0" ci="3" mb="0" cb="0"/><line nr="7170" mi="0" ci="3" mb="0" cb="0"/><line nr="7171" mi="0" ci="1" mb="0" cb="0"/><line nr="7175" mi="5" ci="0" mb="0" cb="0"/><line nr="7176" mi="6" ci="0" mb="0" cb="0"/><line nr="7179" mi="7" ci="0" mb="2" cb="0"/><line nr="7180" mi="1" ci="0" mb="0" cb="0"/><line nr="7183" mi="7" ci="0" mb="2" cb="0"/><line nr="7184" mi="1" ci="0" mb="0" cb="0"/><line nr="7188" mi="5" ci="0" mb="0" cb="0"/><line nr="7189" mi="6" ci="0" mb="0" cb="0"/><line nr="7192" mi="7" ci="0" mb="2" cb="0"/><line nr="7193" mi="1" ci="0" mb="0" cb="0"/><line nr="7196" mi="7" ci="0" mb="2" cb="0"/><line nr="7197" mi="1" ci="0" mb="0" cb="0"/><line nr="7201" mi="5" ci="0" mb="0" cb="0"/><line nr="7202" mi="6" ci="0" mb="0" cb="0"/><line nr="7205" mi="7" ci="0" mb="2" cb="0"/><line nr="7206" mi="1" ci="0" mb="0" cb="0"/><line nr="7209" mi="7" ci="0" mb="2" cb="0"/><line nr="7210" mi="1" ci="0" mb="0" cb="0"/><line nr="7214" mi="5" ci="0" mb="0" cb="0"/><line nr="7215" mi="6" ci="0" mb="0" cb="0"/><line nr="7218" mi="7" ci="0" mb="2" cb="0"/><line nr="7219" mi="1" ci="0" mb="0" cb="0"/><line nr="7222" mi="7" ci="0" mb="2" cb="0"/><line nr="7223" mi="1" ci="0" mb="0" cb="0"/><line nr="7227" mi="5" ci="0" mb="0" cb="0"/><line nr="7229" mi="6" ci="0" mb="0" cb="0"/><line nr="7231" mi="0" ci="6" mb="0" cb="0"/><line nr="7234" mi="7" ci="0" mb="2" cb="0"/><line nr="7235" mi="1" ci="0" mb="0" cb="0"/><line nr="7238" mi="7" ci="0" mb="2" cb="0"/><line nr="7239" mi="1" ci="0" mb="0" cb="0"/><line nr="7243" mi="0" ci="8" mb="0" cb="0"/><line nr="7244" mi="0" ci="5" mb="0" cb="0"/><line nr="7246" mi="0" ci="3" mb="0" cb="0"/><line nr="7247" mi="0" ci="4" mb="0" cb="0"/><line nr="7248" mi="0" ci="5" mb="5" cb="2"/><line nr="7250" mi="5" ci="0" mb="0" cb="0"/><line nr="7251" mi="4" ci="0" mb="0" cb="0"/><line nr="7253" mi="3" ci="0" mb="0" cb="0"/><line nr="7254" mi="4" ci="0" mb="0" cb="0"/><line nr="7256" mi="1" ci="0" mb="0" cb="0"/><line nr="7258" mi="0" ci="5" mb="0" cb="0"/><line nr="7259" mi="0" ci="4" mb="0" cb="0"/><line nr="7261" mi="0" ci="3" mb="0" cb="0"/><line nr="7262" mi="0" ci="4" mb="0" cb="0"/><line nr="7264" mi="0" ci="1" mb="0" cb="0"/><line nr="7266" mi="5" ci="0" mb="0" cb="0"/><line nr="7267" mi="4" ci="0" mb="0" cb="0"/><line nr="7269" mi="3" ci="0" mb="0" cb="0"/><line nr="7270" mi="4" ci="0" mb="0" cb="0"/><line nr="7272" mi="1" ci="0" mb="0" cb="0"/><line nr="7317" mi="0" ci="5" mb="0" cb="0"/><line nr="7318" mi="0" ci="4" mb="0" cb="0"/><line nr="7320" mi="0" ci="3" mb="0" cb="0"/><line nr="7321" mi="0" ci="3" mb="0" cb="0"/><line nr="7323" mi="0" ci="1" mb="0" cb="0"/><line nr="7325" mi="5" ci="0" mb="0" cb="0"/><line nr="7326" mi="4" ci="0" mb="0" cb="0"/><line nr="7328" mi="3" ci="0" mb="0" cb="0"/><line nr="7329" mi="4" ci="0" mb="0" cb="0"/><line nr="7331" mi="1" ci="0" mb="0" cb="0"/><line nr="7333" mi="5" ci="0" mb="0" cb="0"/><line nr="7334" mi="4" ci="0" mb="0" cb="0"/><line nr="7336" mi="3" ci="0" mb="0" cb="0"/><line nr="7337" mi="4" ci="0" mb="0" cb="0"/><line nr="7339" mi="1" ci="0" mb="0" cb="0"/><line nr="7341" mi="5" ci="0" mb="0" cb="0"/><line nr="7344" mi="1" ci="0" mb="0" cb="0"/><line nr="7345" mi="3" ci="0" mb="0" cb="0"/><line nr="7346" mi="5" ci="0" mb="0" cb="0"/><line nr="7347" mi="5" ci="0" mb="0" cb="0"/><line nr="7350" mi="0" ci="2" mb="0" cb="0"/><line nr="7352" mi="0" ci="2" mb="0" cb="0"/><line nr="7358" mi="4" ci="0" mb="0" cb="0"/><line nr="7359" mi="1" ci="0" mb="0" cb="0"/><line nr="7360" mi="2" ci="0" mb="0" cb="0"/><line nr="7362" mi="3" ci="0" mb="0" cb="0"/><line nr="7364" mi="3" ci="0" mb="0" cb="0"/><line nr="7365" mi="1" ci="0" mb="0" cb="0"/><line nr="7370" mi="4" ci="0" mb="0" cb="0"/><line nr="7373" mi="6" ci="0" mb="0" cb="0"/><line nr="7375" mi="5" ci="0" mb="0" cb="0"/><line nr="7377" mi="6" ci="0" mb="0" cb="0"/><line nr="7379" mi="6" ci="0" mb="0" cb="0"/><line nr="7382" mi="7" ci="0" mb="2" cb="0"/><line nr="7383" mi="1" ci="0" mb="0" cb="0"/><line nr="7386" mi="7" ci="0" mb="2" cb="0"/><line nr="7387" mi="1" ci="0" mb="0" cb="0"/><line nr="7391" mi="8" ci="0" mb="0" cb="0"/><line nr="7392" mi="5" ci="0" mb="0" cb="0"/><line nr="7395" mi="3" ci="0" mb="0" cb="0"/><line nr="7396" mi="4" ci="0" mb="0" cb="0"/><line nr="7397" mi="5" ci="0" mb="3" cb="0"/><line nr="7447" mi="5" ci="0" mb="0" cb="0"/><line nr="7448" mi="4" ci="0" mb="0" cb="0"/><line nr="7450" mi="3" ci="0" mb="0" cb="0"/><line nr="7451" mi="3" ci="0" mb="0" cb="0"/><line nr="7452" mi="3" ci="0" mb="0" cb="0"/><line nr="7453" mi="4" ci="0" mb="0" cb="0"/><line nr="7454" mi="3" ci="0" mb="0" cb="0"/><line nr="7455" mi="3" ci="0" mb="0" cb="0"/><line nr="7457" mi="1" ci="0" mb="0" cb="0"/><line nr="7459" mi="5" ci="0" mb="0" cb="0"/><line nr="7460" mi="4" ci="0" mb="0" cb="0"/><line nr="7462" mi="3" ci="0" mb="0" cb="0"/><line nr="7463" mi="4" ci="0" mb="0" cb="0"/><line nr="7464" mi="3" ci="0" mb="0" cb="0"/><line nr="7465" mi="3" ci="0" mb="0" cb="0"/><line nr="7466" mi="3" ci="0" mb="0" cb="0"/><line nr="7467" mi="4" ci="0" mb="0" cb="0"/><line nr="7468" mi="5" ci="0" mb="0" cb="0"/><line nr="7469" mi="3" ci="0" mb="2" cb="0"/><line nr="7472" mi="3" ci="0" mb="0" cb="0"/><line nr="7473" mi="4" ci="0" mb="0" cb="0"/><line nr="7474" mi="3" ci="0" mb="0" cb="0"/><line nr="7475" mi="3" ci="0" mb="0" cb="0"/><line nr="7478" mi="3" ci="0" mb="0" cb="0"/><line nr="7479" mi="4" ci="0" mb="0" cb="0"/><line nr="7480" mi="6" ci="0" mb="0" cb="0"/><line nr="7482" mi="3" ci="0" mb="0" cb="0"/><line nr="7483" mi="4" ci="0" mb="0" cb="0"/><line nr="7484" mi="3" ci="0" mb="0" cb="0"/><line nr="7485" mi="4" ci="0" mb="0" cb="0"/><line nr="7486" mi="3" ci="0" mb="0" cb="0"/><line nr="7487" mi="3" ci="0" mb="0" cb="0"/><line nr="7489" mi="1" ci="0" mb="0" cb="0"/><line nr="7491" mi="5" ci="0" mb="0" cb="0"/><line nr="7494" mi="1" ci="0" mb="0" cb="0"/><line nr="7495" mi="3" ci="0" mb="0" cb="0"/><line nr="7496" mi="5" ci="0" mb="0" cb="0"/><line nr="7497" mi="5" ci="0" mb="0" cb="0"/><line nr="7500" mi="2" ci="0" mb="0" cb="0"/><line nr="7502" mi="2" ci="0" mb="0" cb="0"/><line nr="7507" mi="5" ci="0" mb="0" cb="0"/><line nr="7509" mi="4" ci="0" mb="0" cb="0"/><line nr="7510" mi="1" ci="0" mb="0" cb="0"/><line nr="7511" mi="2" ci="0" mb="0" cb="0"/><line nr="7514" mi="7" ci="0" mb="2" cb="0"/><line nr="7515" mi="1" ci="0" mb="0" cb="0"/><line nr="7518" mi="7" ci="0" mb="2" cb="0"/><line nr="7519" mi="1" ci="0" mb="0" cb="0"/><line nr="7523" mi="8" ci="0" mb="0" cb="0"/><line nr="7524" mi="5" ci="0" mb="0" cb="0"/><line nr="7526" mi="4" ci="0" mb="0" cb="0"/><line nr="7528" mi="3" ci="0" mb="0" cb="0"/><line nr="7529" mi="4" ci="0" mb="0" cb="0"/><line nr="7532" mi="1" ci="0" mb="0" cb="0"/><line nr="7533" mi="3" ci="0" mb="0" cb="0"/><line nr="7534" mi="5" ci="0" mb="0" cb="0"/><line nr="7535" mi="5" ci="0" mb="0" cb="0"/><line nr="7538" mi="2" ci="0" mb="0" cb="0"/><line nr="7540" mi="2" ci="0" mb="0" cb="0"/><line nr="7545" mi="5" ci="0" mb="0" cb="0"/><line nr="7547" mi="4" ci="0" mb="0" cb="0"/><line nr="7548" mi="1" ci="0" mb="0" cb="0"/><line nr="7549" mi="2" ci="0" mb="0" cb="0"/><line nr="7552" mi="7" ci="0" mb="2" cb="0"/><line nr="7553" mi="1" ci="0" mb="0" cb="0"/><line nr="7556" mi="7" ci="0" mb="2" cb="0"/><line nr="7557" mi="1" ci="0" mb="0" cb="0"/><line nr="7561" mi="8" ci="0" mb="0" cb="0"/><line nr="7562" mi="5" ci="0" mb="0" cb="0"/><line nr="7564" mi="4" ci="0" mb="0" cb="0"/><line nr="7566" mi="3" ci="0" mb="0" cb="0"/><line nr="7567" mi="4" ci="0" mb="0" cb="0"/><line nr="7570" mi="1" ci="0" mb="0" cb="0"/><line nr="7571" mi="3" ci="0" mb="0" cb="0"/><line nr="7572" mi="5" ci="0" mb="0" cb="0"/><line nr="7573" mi="5" ci="0" mb="0" cb="0"/><line nr="7576" mi="2" ci="0" mb="0" cb="0"/><line nr="7578" mi="2" ci="0" mb="0" cb="0"/><line nr="7584" mi="6" ci="0" mb="0" cb="0"/><line nr="7587" mi="0" ci="4" mb="0" cb="0"/><line nr="7588" mi="0" ci="1" mb="0" cb="0"/><line nr="7589" mi="2" ci="0" mb="0" cb="0"/><line nr="7592" mi="7" ci="0" mb="2" cb="0"/><line nr="7593" mi="1" ci="0" mb="0" cb="0"/><line nr="7596" mi="7" ci="0" mb="2" cb="0"/><line nr="7597" mi="1" ci="0" mb="0" cb="0"/><line nr="7601" mi="0" ci="8" mb="0" cb="0"/><line nr="7602" mi="0" ci="5" mb="0" cb="0"/><line nr="7604" mi="0" ci="4" mb="0" cb="0"/><line nr="7606" mi="0" ci="3" mb="0" cb="0"/><line nr="7607" mi="0" ci="3" mb="0" cb="0"/><line nr="7610" mi="1" ci="0" mb="0" cb="0"/><line nr="7611" mi="3" ci="0" mb="0" cb="0"/><line nr="7612" mi="5" ci="0" mb="0" cb="0"/><line nr="7613" mi="5" ci="0" mb="0" cb="0"/><line nr="7616" mi="0" ci="2" mb="0" cb="0"/><line nr="7618" mi="0" ci="2" mb="0" cb="0"/><line nr="7624" mi="0" ci="4" mb="0" cb="0"/><line nr="7625" mi="0" ci="1" mb="0" cb="0"/><line nr="7626" mi="2" ci="0" mb="0" cb="0"/><line nr="7628" mi="0" ci="3" mb="0" cb="0"/><line nr="7630" mi="0" ci="3" mb="0" cb="0"/><line nr="7631" mi="0" ci="1" mb="0" cb="0"/><line nr="7635" mi="5" ci="0" mb="0" cb="0"/><line nr="7636" mi="5" ci="0" mb="0" cb="0"/><line nr="7637" mi="6" ci="0" mb="0" cb="0"/><line nr="7640" mi="7" ci="0" mb="2" cb="0"/><line nr="7641" mi="1" ci="0" mb="0" cb="0"/><line nr="7644" mi="7" ci="0" mb="2" cb="0"/><line nr="7645" mi="1" ci="0" mb="0" cb="0"/><line nr="7649" mi="5" ci="0" mb="0" cb="0"/><line nr="7650" mi="5" ci="0" mb="0" cb="0"/><line nr="7651" mi="6" ci="0" mb="0" cb="0"/><line nr="7654" mi="7" ci="0" mb="2" cb="0"/><line nr="7655" mi="1" ci="0" mb="0" cb="0"/><line nr="7658" mi="7" ci="0" mb="2" cb="0"/><line nr="7659" mi="1" ci="0" mb="0" cb="0"/><line nr="7663" mi="5" ci="0" mb="0" cb="0"/><line nr="7664" mi="5" ci="0" mb="0" cb="0"/><line nr="7665" mi="0" ci="6" mb="0" cb="0"/><line nr="7668" mi="7" ci="0" mb="2" cb="0"/><line nr="7669" mi="1" ci="0" mb="0" cb="0"/><line nr="7672" mi="7" ci="0" mb="2" cb="0"/><line nr="7673" mi="1" ci="0" mb="0" cb="0"/><line nr="7677" mi="0" ci="8" mb="0" cb="0"/><line nr="7678" mi="0" ci="5" mb="0" cb="0"/><line nr="7681" mi="0" ci="3" mb="0" cb="0"/><line nr="7682" mi="0" ci="4" mb="0" cb="0"/><line nr="7683" mi="0" ci="10" mb="3" cb="1"/><line nr="7685" mi="5" ci="0" mb="0" cb="0"/><line nr="7686" mi="4" ci="0" mb="0" cb="0"/><line nr="7688" mi="3" ci="0" mb="0" cb="0"/><line nr="7689" mi="4" ci="0" mb="0" cb="0"/><line nr="7690" mi="5" ci="0" mb="0" cb="0"/><line nr="7691" mi="3" ci="0" mb="2" cb="0"/><line nr="7693" mi="3" ci="0" mb="0" cb="0"/><line nr="7694" mi="4" ci="0" mb="0" cb="0"/><line nr="7698" mi="3" ci="0" mb="0" cb="0"/><line nr="7699" mi="4" ci="0" mb="0" cb="0"/><line nr="7701" mi="1" ci="0" mb="0" cb="0"/><line nr="7703" mi="5" ci="0" mb="0" cb="0"/><line nr="7704" mi="4" ci="0" mb="0" cb="0"/><line nr="7706" mi="3" ci="0" mb="0" cb="0"/><line nr="7707" mi="4" ci="0" mb="0" cb="0"/><line nr="7708" mi="5" ci="0" mb="0" cb="0"/><line nr="7709" mi="3" ci="0" mb="2" cb="0"/><line nr="7711" mi="3" ci="0" mb="0" cb="0"/><line nr="7712" mi="4" ci="0" mb="0" cb="0"/><line nr="7716" mi="3" ci="0" mb="0" cb="0"/><line nr="7717" mi="4" ci="0" mb="0" cb="0"/><line nr="7719" mi="1" ci="0" mb="0" cb="0"/><line nr="7721" mi="0" ci="5" mb="0" cb="0"/><line nr="7722" mi="0" ci="4" mb="0" cb="0"/><line nr="7724" mi="0" ci="3" mb="0" cb="0"/><line nr="7725" mi="0" ci="4" mb="0" cb="0"/><line nr="7726" mi="0" ci="5" mb="0" cb="0"/><line nr="7727" mi="0" ci="3" mb="1" cb="1"/><line nr="7729" mi="3" ci="0" mb="0" cb="0"/><line nr="7730" mi="4" ci="0" mb="0" cb="0"/><line nr="7734" mi="0" ci="3" mb="0" cb="0"/><line nr="7735" mi="0" ci="4" mb="0" cb="0"/><line nr="7740" mi="1" ci="0" mb="0" cb="0"/><line nr="7741" mi="3" ci="0" mb="0" cb="0"/><line nr="7742" mi="5" ci="0" mb="0" cb="0"/><line nr="7743" mi="5" ci="0" mb="0" cb="0"/><line nr="7746" mi="0" ci="2" mb="0" cb="0"/><line nr="7748" mi="0" ci="2" mb="0" cb="0"/><line nr="7754" mi="0" ci="4" mb="0" cb="0"/><line nr="7755" mi="0" ci="1" mb="0" cb="0"/><line nr="7756" mi="2" ci="0" mb="0" cb="0"/><line nr="7758" mi="0" ci="3" mb="0" cb="0"/><line nr="7760" mi="0" ci="3" mb="0" cb="0"/><line nr="7761" mi="0" ci="1" mb="0" cb="0"/><line nr="7765" mi="5" ci="0" mb="0" cb="0"/><line nr="7766" mi="6" ci="0" mb="0" cb="0"/><line nr="7769" mi="7" ci="0" mb="2" cb="0"/><line nr="7770" mi="1" ci="0" mb="0" cb="0"/><line nr="7773" mi="7" ci="0" mb="2" cb="0"/><line nr="7774" mi="1" ci="0" mb="0" cb="0"/><line nr="7778" mi="5" ci="0" mb="0" cb="0"/><line nr="7779" mi="0" ci="6" mb="0" cb="0"/><line nr="7782" mi="7" ci="0" mb="2" cb="0"/><line nr="7783" mi="1" ci="0" mb="0" cb="0"/><line nr="7786" mi="7" ci="0" mb="2" cb="0"/><line nr="7787" mi="1" ci="0" mb="0" cb="0"/><line nr="7791" mi="5" ci="0" mb="0" cb="0"/><line nr="7792" mi="6" ci="0" mb="0" cb="0"/><line nr="7795" mi="7" ci="0" mb="2" cb="0"/><line nr="7796" mi="1" ci="0" mb="0" cb="0"/><line nr="7799" mi="7" ci="0" mb="2" cb="0"/><line nr="7800" mi="1" ci="0" mb="0" cb="0"/><line nr="7805" mi="6" ci="0" mb="0" cb="0"/><line nr="7807" mi="0" ci="6" mb="0" cb="0"/><line nr="7810" mi="7" ci="0" mb="2" cb="0"/><line nr="7811" mi="1" ci="0" mb="0" cb="0"/><line nr="7814" mi="7" ci="0" mb="2" cb="0"/><line nr="7815" mi="1" ci="0" mb="0" cb="0"/><line nr="7820" mi="6" ci="0" mb="0" cb="0"/><line nr="7822" mi="6" ci="0" mb="0" cb="0"/><line nr="7825" mi="7" ci="0" mb="2" cb="0"/><line nr="7826" mi="1" ci="0" mb="0" cb="0"/><line nr="7829" mi="7" ci="0" mb="2" cb="0"/><line nr="7830" mi="1" ci="0" mb="0" cb="0"/><line nr="7834" mi="0" ci="8" mb="0" cb="0"/><line nr="7835" mi="0" ci="5" mb="0" cb="0"/><line nr="7837" mi="0" ci="3" mb="0" cb="0"/><line nr="7838" mi="0" ci="4" mb="0" cb="0"/><line nr="7839" mi="0" ci="5" mb="4" cb="2"/><line nr="7841" mi="5" ci="0" mb="0" cb="0"/><line nr="7842" mi="4" ci="0" mb="0" cb="0"/><line nr="7844" mi="3" ci="0" mb="0" cb="0"/><line nr="7845" mi="4" ci="0" mb="0" cb="0"/><line nr="7847" mi="1" ci="0" mb="0" cb="0"/><line nr="7852" mi="0" ci="5" mb="0" cb="0"/><line nr="7853" mi="0" ci="4" mb="0" cb="0"/><line nr="7855" mi="0" ci="3" mb="0" cb="0"/><line nr="7856" mi="0" ci="3" mb="0" cb="0"/><line nr="7858" mi="0" ci="1" mb="0" cb="0"/><line nr="7861" mi="5" ci="0" mb="0" cb="0"/><line nr="7862" mi="4" ci="0" mb="0" cb="0"/><line nr="7864" mi="3" ci="0" mb="0" cb="0"/><line nr="7865" mi="3" ci="0" mb="0" cb="0"/><line nr="7867" mi="1" ci="0" mb="0" cb="0"/><line nr="7869" mi="0" ci="5" mb="0" cb="0"/><line nr="7870" mi="0" ci="4" mb="0" cb="0"/><line nr="7872" mi="0" ci="3" mb="0" cb="0"/><line nr="7873" mi="0" ci="4" mb="0" cb="0"/><line nr="7875" mi="0" ci="1" mb="0" cb="0"/><line nr="7877" mi="5" ci="0" mb="0" cb="0"/><line nr="7878" mi="4" ci="0" mb="0" cb="0"/><line nr="7880" mi="3" ci="0" mb="0" cb="0"/><line nr="7881" mi="4" ci="0" mb="0" cb="0"/><line nr="7883" mi="1" ci="0" mb="0" cb="0"/><line nr="7885" mi="5" ci="0" mb="0" cb="0"/><line nr="7888" mi="1" ci="0" mb="0" cb="0"/><line nr="7889" mi="3" ci="0" mb="0" cb="0"/><line nr="7890" mi="5" ci="0" mb="0" cb="0"/><line nr="7891" mi="5" ci="0" mb="0" cb="0"/><line nr="7894" mi="0" ci="2" mb="0" cb="0"/><line nr="7896" mi="0" ci="2" mb="0" cb="0"/><line nr="7901" mi="5" ci="0" mb="0" cb="0"/><line nr="7902" mi="5" ci="0" mb="0" cb="0"/><line nr="7903" mi="5" ci="0" mb="0" cb="0"/><line nr="7904" mi="5" ci="0" mb="0" cb="0"/><line nr="7905" mi="5" ci="0" mb="0" cb="0"/><line nr="7906" mi="5" ci="0" mb="0" cb="0"/><line nr="7907" mi="5" ci="0" mb="0" cb="0"/><line nr="7908" mi="5" ci="0" mb="0" cb="0"/><line nr="7909" mi="5" ci="0" mb="0" cb="0"/><line nr="7910" mi="5" ci="0" mb="0" cb="0"/><line nr="7911" mi="5" ci="0" mb="0" cb="0"/><line nr="7912" mi="5" ci="0" mb="0" cb="0"/><line nr="7913" mi="5" ci="0" mb="0" cb="0"/><line nr="7914" mi="5" ci="0" mb="0" cb="0"/><line nr="7915" mi="5" ci="0" mb="0" cb="0"/><line nr="7916" mi="5" ci="0" mb="0" cb="0"/><line nr="7917" mi="5" ci="0" mb="0" cb="0"/><line nr="7918" mi="5" ci="0" mb="0" cb="0"/><line nr="7919" mi="5" ci="0" mb="0" cb="0"/><line nr="7920" mi="5" ci="0" mb="0" cb="0"/><line nr="7921" mi="5" ci="0" mb="0" cb="0"/><line nr="7922" mi="5" ci="0" mb="0" cb="0"/><line nr="7923" mi="5" ci="0" mb="0" cb="0"/><line nr="7924" mi="5" ci="0" mb="0" cb="0"/><line nr="7925" mi="5" ci="0" mb="0" cb="0"/><line nr="7926" mi="5" ci="0" mb="0" cb="0"/><line nr="7927" mi="5" ci="0" mb="0" cb="0"/><line nr="7928" mi="5" ci="0" mb="0" cb="0"/><line nr="7929" mi="5" ci="0" mb="0" cb="0"/><line nr="7930" mi="5" ci="0" mb="0" cb="0"/><line nr="7931" mi="5" ci="0" mb="0" cb="0"/><line nr="7932" mi="5" ci="0" mb="0" cb="0"/><line nr="7933" mi="5" ci="0" mb="0" cb="0"/><line nr="7934" mi="5" ci="0" mb="0" cb="0"/><line nr="7935" mi="5" ci="0" mb="0" cb="0"/><line nr="7936" mi="5" ci="0" mb="0" cb="0"/><line nr="7937" mi="5" ci="0" mb="0" cb="0"/><line nr="7938" mi="5" ci="0" mb="0" cb="0"/><line nr="7939" mi="5" ci="0" mb="0" cb="0"/><line nr="7940" mi="5" ci="0" mb="0" cb="0"/><line nr="7941" mi="5" ci="0" mb="0" cb="0"/><line nr="7942" mi="5" ci="0" mb="0" cb="0"/><line nr="7943" mi="5" ci="0" mb="0" cb="0"/><line nr="7945" mi="0" ci="4" mb="0" cb="0"/><line nr="7946" mi="0" ci="1" mb="0" cb="0"/><line nr="7947" mi="2" ci="0" mb="0" cb="0"/><line nr="7950" mi="7" ci="0" mb="2" cb="0"/><line nr="7951" mi="1" ci="0" mb="0" cb="0"/><line nr="7954" mi="7" ci="0" mb="2" cb="0"/><line nr="7955" mi="1" ci="0" mb="0" cb="0"/><line nr="7959" mi="0" ci="8" mb="0" cb="0"/><line nr="7960" mi="0" ci="5" mb="0" cb="0"/><line nr="7963" mi="0" ci="4" mb="0" cb="0"/><line nr="7965" mi="0" ci="3" mb="0" cb="0"/><line nr="7966" mi="0" ci="5" mb="0" cb="0"/><line nr="7967" mi="14" ci="20" mb="9" cb="3"/><line nr="7968" mi="6" ci="0" mb="0" cb="0"/><line nr="7971" mi="3" ci="6" mb="1" cb="1"/><line nr="7972" mi="0" ci="4" mb="0" cb="0"/><line nr="7973" mi="0" ci="3" mb="0" cb="0"/><line nr="7977" mi="1" ci="0" mb="0" cb="0"/><line nr="7978" mi="3" ci="0" mb="0" cb="0"/><line nr="7979" mi="5" ci="0" mb="0" cb="0"/><line nr="7980" mi="5" ci="0" mb="0" cb="0"/><line nr="7983" mi="0" ci="2" mb="0" cb="0"/><line nr="7985" mi="0" ci="2" mb="0" cb="0"/><line nr="7989" mi="2" ci="0" mb="5" cb="0"/><line nr="7991" mi="6" ci="0" mb="0" cb="0"/><line nr="7993" mi="6" ci="0" mb="0" cb="0"/><line nr="7995" mi="6" ci="0" mb="0" cb="0"/><line nr="7997" mi="6" ci="0" mb="0" cb="0"/><line nr="7999" mi="2" ci="0" mb="0" cb="0"/><line nr="8002" mi="2" ci="0" mb="3" cb="0"/><line nr="8004" mi="6" ci="0" mb="0" cb="0"/><line nr="8006" mi="6" ci="0" mb="0" cb="0"/><line nr="8008" mi="2" ci="0" mb="0" cb="0"/><line nr="8011" mi="2" ci="0" mb="5" cb="0"/><line nr="8013" mi="6" ci="0" mb="0" cb="0"/><line nr="8015" mi="6" ci="0" mb="0" cb="0"/><line nr="8017" mi="6" ci="0" mb="0" cb="0"/><line nr="8019" mi="6" ci="0" mb="0" cb="0"/><line nr="8021" mi="2" ci="0" mb="0" cb="0"/><line nr="8024" mi="2" ci="0" mb="3" cb="0"/><line nr="8026" mi="6" ci="0" mb="0" cb="0"/><line nr="8028" mi="6" ci="0" mb="0" cb="0"/><line nr="8030" mi="2" ci="0" mb="0" cb="0"/><line nr="8033" mi="2" ci="0" mb="2" cb="0"/><line nr="8035" mi="6" ci="0" mb="0" cb="0"/><line nr="8037" mi="2" ci="0" mb="0" cb="0"/><line nr="8822" mi="0" ci="4" mb="0" cb="0"/><line nr="8823" mi="0" ci="3" mb="0" cb="0"/><line nr="8825" mi="0" ci="4" mb="0" cb="0"/><line nr="8826" mi="0" ci="8" mb="0" cb="2"/><line nr="8827" mi="0" ci="10" mb="0" cb="0"/><line nr="8829" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15885" covered="3320"/><counter type="BRANCH" missed="1192" covered="64"/><counter type="LINE" missed="3843" covered="439"/><counter type="COMPLEXITY" missed="1766" covered="72"/><counter type="METHOD" missed="1102" covered="56"/><counter type="CLASS" missed="128" covered="26"/></sourcefile><sourcefile name="KsqlGrammarBaseListener.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="332" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="374" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="404" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="1" ci="0" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="440" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="1" ci="0" mb="0" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="464" mi="1" ci="0" mb="0" cb="0"/><line nr="470" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><line nr="488" mi="1" ci="0" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="500" mi="1" ci="0" mb="0" cb="0"/><line nr="506" mi="1" ci="0" mb="0" cb="0"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="518" mi="1" ci="0" mb="0" cb="0"/><line nr="524" mi="1" ci="0" mb="0" cb="0"/><line nr="530" mi="1" ci="0" mb="0" cb="0"/><line nr="536" mi="1" ci="0" mb="0" cb="0"/><line nr="542" mi="1" ci="0" mb="0" cb="0"/><line nr="548" mi="1" ci="0" mb="0" cb="0"/><line nr="554" mi="1" ci="0" mb="0" cb="0"/><line nr="560" mi="1" ci="0" mb="0" cb="0"/><line nr="566" mi="1" ci="0" mb="0" cb="0"/><line nr="572" mi="1" ci="0" mb="0" cb="0"/><line nr="578" mi="1" ci="0" mb="0" cb="0"/><line nr="584" mi="1" ci="0" mb="0" cb="0"/><line nr="590" mi="1" ci="0" mb="0" cb="0"/><line nr="596" mi="1" ci="0" mb="0" cb="0"/><line nr="602" mi="1" ci="0" mb="0" cb="0"/><line nr="608" mi="1" ci="0" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="620" mi="1" ci="0" mb="0" cb="0"/><line nr="626" mi="1" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="0" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="644" mi="1" ci="0" mb="0" cb="0"/><line nr="650" mi="1" ci="0" mb="0" cb="0"/><line nr="656" mi="1" ci="0" mb="0" cb="0"/><line nr="662" mi="1" ci="0" mb="0" cb="0"/><line nr="668" mi="1" ci="0" mb="0" cb="0"/><line nr="674" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="1" ci="0" mb="0" cb="0"/><line nr="686" mi="1" ci="0" mb="0" cb="0"/><line nr="692" mi="1" ci="0" mb="0" cb="0"/><line nr="698" mi="1" ci="0" mb="0" cb="0"/><line nr="704" mi="1" ci="0" mb="0" cb="0"/><line nr="710" mi="1" ci="0" mb="0" cb="0"/><line nr="716" mi="1" ci="0" mb="0" cb="0"/><line nr="722" mi="1" ci="0" mb="0" cb="0"/><line nr="728" mi="1" ci="0" mb="0" cb="0"/><line nr="734" mi="1" ci="0" mb="0" cb="0"/><line nr="740" mi="1" ci="0" mb="0" cb="0"/><line nr="746" mi="1" ci="0" mb="0" cb="0"/><line nr="752" mi="1" ci="0" mb="0" cb="0"/><line nr="758" mi="1" ci="0" mb="0" cb="0"/><line nr="764" mi="1" ci="0" mb="0" cb="0"/><line nr="770" mi="1" ci="0" mb="0" cb="0"/><line nr="776" mi="1" ci="0" mb="0" cb="0"/><line nr="782" mi="1" ci="0" mb="0" cb="0"/><line nr="788" mi="1" ci="0" mb="0" cb="0"/><line nr="794" mi="1" ci="0" mb="0" cb="0"/><line nr="800" mi="1" ci="0" mb="0" cb="0"/><line nr="806" mi="1" ci="0" mb="0" cb="0"/><line nr="812" mi="1" ci="0" mb="0" cb="0"/><line nr="818" mi="1" ci="0" mb="0" cb="0"/><line nr="824" mi="1" ci="0" mb="0" cb="0"/><line nr="830" mi="1" ci="0" mb="0" cb="0"/><line nr="836" mi="1" ci="0" mb="0" cb="0"/><line nr="842" mi="1" ci="0" mb="0" cb="0"/><line nr="848" mi="1" ci="0" mb="0" cb="0"/><line nr="854" mi="1" ci="0" mb="0" cb="0"/><line nr="860" mi="1" ci="0" mb="0" cb="0"/><line nr="866" mi="1" ci="0" mb="0" cb="0"/><line nr="872" mi="1" ci="0" mb="0" cb="0"/><line nr="878" mi="1" ci="0" mb="0" cb="0"/><line nr="884" mi="1" ci="0" mb="0" cb="0"/><line nr="890" mi="1" ci="0" mb="0" cb="0"/><line nr="896" mi="1" ci="0" mb="0" cb="0"/><line nr="902" mi="1" ci="0" mb="0" cb="0"/><line nr="908" mi="1" ci="0" mb="0" cb="0"/><line nr="914" mi="1" ci="0" mb="0" cb="0"/><line nr="920" mi="1" ci="0" mb="0" cb="0"/><line nr="926" mi="1" ci="0" mb="0" cb="0"/><line nr="932" mi="1" ci="0" mb="0" cb="0"/><line nr="938" mi="1" ci="0" mb="0" cb="0"/><line nr="944" mi="1" ci="0" mb="0" cb="0"/><line nr="950" mi="1" ci="0" mb="0" cb="0"/><line nr="956" mi="1" ci="0" mb="0" cb="0"/><line nr="962" mi="1" ci="0" mb="0" cb="0"/><line nr="968" mi="1" ci="0" mb="0" cb="0"/><line nr="974" mi="1" ci="0" mb="0" cb="0"/><line nr="980" mi="1" ci="0" mb="0" cb="0"/><line nr="986" mi="1" ci="0" mb="0" cb="0"/><line nr="992" mi="1" ci="0" mb="0" cb="0"/><line nr="998" mi="1" ci="0" mb="0" cb="0"/><line nr="1004" mi="1" ci="0" mb="0" cb="0"/><line nr="1010" mi="1" ci="0" mb="0" cb="0"/><line nr="1016" mi="1" ci="0" mb="0" cb="0"/><line nr="1022" mi="1" ci="0" mb="0" cb="0"/><line nr="1028" mi="1" ci="0" mb="0" cb="0"/><line nr="1034" mi="1" ci="0" mb="0" cb="0"/><line nr="1040" mi="1" ci="0" mb="0" cb="0"/><line nr="1046" mi="1" ci="0" mb="0" cb="0"/><line nr="1052" mi="1" ci="0" mb="0" cb="0"/><line nr="1058" mi="1" ci="0" mb="0" cb="0"/><line nr="1064" mi="1" ci="0" mb="0" cb="0"/><line nr="1070" mi="1" ci="0" mb="0" cb="0"/><line nr="1076" mi="1" ci="0" mb="0" cb="0"/><line nr="1082" mi="1" ci="0" mb="0" cb="0"/><line nr="1088" mi="1" ci="0" mb="0" cb="0"/><line nr="1094" mi="1" ci="0" mb="0" cb="0"/><line nr="1100" mi="1" ci="0" mb="0" cb="0"/><line nr="1106" mi="1" ci="0" mb="0" cb="0"/><line nr="1112" mi="1" ci="0" mb="0" cb="0"/><line nr="1118" mi="1" ci="0" mb="0" cb="0"/><line nr="1124" mi="1" ci="0" mb="0" cb="0"/><line nr="1130" mi="1" ci="0" mb="0" cb="0"/><line nr="1136" mi="1" ci="0" mb="0" cb="0"/><line nr="1142" mi="1" ci="0" mb="0" cb="0"/><line nr="1148" mi="1" ci="0" mb="0" cb="0"/><line nr="1154" mi="1" ci="0" mb="0" cb="0"/><line nr="1160" mi="1" ci="0" mb="0" cb="0"/><line nr="1166" mi="1" ci="0" mb="0" cb="0"/><line nr="1172" mi="1" ci="0" mb="0" cb="0"/><line nr="1178" mi="1" ci="0" mb="0" cb="0"/><line nr="1184" mi="1" ci="0" mb="0" cb="0"/><line nr="1190" mi="1" ci="0" mb="0" cb="0"/><line nr="1196" mi="1" ci="0" mb="0" cb="0"/><line nr="1202" mi="1" ci="0" mb="0" cb="0"/><line nr="1208" mi="1" ci="0" mb="0" cb="0"/><line nr="1214" mi="1" ci="0" mb="0" cb="0"/><line nr="1220" mi="1" ci="0" mb="0" cb="0"/><line nr="1226" mi="1" ci="0" mb="0" cb="0"/><line nr="1232" mi="1" ci="0" mb="0" cb="0"/><line nr="1238" mi="1" ci="0" mb="0" cb="0"/><line nr="1244" mi="1" ci="0" mb="0" cb="0"/><line nr="1250" mi="1" ci="0" mb="0" cb="0"/><line nr="1256" mi="1" ci="0" mb="0" cb="0"/><line nr="1262" mi="1" ci="0" mb="0" cb="0"/><line nr="1268" mi="1" ci="0" mb="0" cb="0"/><line nr="1274" mi="1" ci="0" mb="0" cb="0"/><line nr="1280" mi="1" ci="0" mb="0" cb="0"/><line nr="1286" mi="1" ci="0" mb="0" cb="0"/><line nr="1292" mi="1" ci="0" mb="0" cb="0"/><line nr="1298" mi="1" ci="0" mb="0" cb="0"/><line nr="1304" mi="1" ci="0" mb="0" cb="0"/><line nr="1310" mi="1" ci="0" mb="0" cb="0"/><line nr="1316" mi="1" ci="0" mb="0" cb="0"/><line nr="1322" mi="1" ci="0" mb="0" cb="0"/><line nr="1328" mi="1" ci="0" mb="0" cb="0"/><line nr="1334" mi="1" ci="0" mb="0" cb="0"/><line nr="1340" mi="1" ci="0" mb="0" cb="0"/><line nr="1346" mi="1" ci="0" mb="0" cb="0"/><line nr="1352" mi="1" ci="0" mb="0" cb="0"/><line nr="1358" mi="1" ci="0" mb="0" cb="0"/><line nr="1364" mi="1" ci="0" mb="0" cb="0"/><line nr="1370" mi="1" ci="0" mb="0" cb="0"/><line nr="1376" mi="1" ci="0" mb="0" cb="0"/><line nr="1382" mi="1" ci="0" mb="0" cb="0"/><line nr="1388" mi="1" ci="0" mb="0" cb="0"/><line nr="1394" mi="1" ci="0" mb="0" cb="0"/><line nr="1400" mi="1" ci="0" mb="0" cb="0"/><line nr="1406" mi="1" ci="0" mb="0" cb="0"/><line nr="1412" mi="1" ci="0" mb="0" cb="0"/><line nr="1418" mi="1" ci="0" mb="0" cb="0"/><line nr="1424" mi="1" ci="0" mb="0" cb="0"/><line nr="1430" mi="1" ci="0" mb="0" cb="0"/><line nr="1436" mi="1" ci="0" mb="0" cb="0"/><line nr="1442" mi="1" ci="0" mb="0" cb="0"/><line nr="1448" mi="1" ci="0" mb="0" cb="0"/><line nr="1454" mi="1" ci="0" mb="0" cb="0"/><line nr="1460" mi="1" ci="0" mb="0" cb="0"/><line nr="1466" mi="1" ci="0" mb="0" cb="0"/><line nr="1472" mi="1" ci="0" mb="0" cb="0"/><line nr="1478" mi="1" ci="0" mb="0" cb="0"/><line nr="1484" mi="1" ci="0" mb="0" cb="0"/><line nr="1490" mi="1" ci="0" mb="0" cb="0"/><line nr="1496" mi="1" ci="0" mb="0" cb="0"/><line nr="1502" mi="1" ci="0" mb="0" cb="0"/><line nr="1508" mi="1" ci="0" mb="0" cb="0"/><line nr="1514" mi="1" ci="0" mb="0" cb="0"/><line nr="1520" mi="1" ci="0" mb="0" cb="0"/><line nr="1526" mi="1" ci="0" mb="0" cb="0"/><line nr="1532" mi="1" ci="0" mb="0" cb="0"/><line nr="1538" mi="1" ci="0" mb="0" cb="0"/><line nr="1544" mi="1" ci="0" mb="0" cb="0"/><line nr="1550" mi="1" ci="0" mb="0" cb="0"/><line nr="1556" mi="1" ci="0" mb="0" cb="0"/><line nr="1562" mi="1" ci="0" mb="0" cb="0"/><line nr="1568" mi="1" ci="0" mb="0" cb="0"/><line nr="1574" mi="1" ci="0" mb="0" cb="0"/><line nr="1580" mi="1" ci="0" mb="0" cb="0"/><line nr="1586" mi="1" ci="0" mb="0" cb="0"/><line nr="1592" mi="1" ci="0" mb="0" cb="0"/><line nr="1598" mi="1" ci="0" mb="0" cb="0"/><line nr="1604" mi="1" ci="0" mb="0" cb="0"/><line nr="1610" mi="1" ci="0" mb="0" cb="0"/><line nr="1616" mi="1" ci="0" mb="0" cb="0"/><line nr="1622" mi="1" ci="0" mb="0" cb="0"/><line nr="1628" mi="1" ci="0" mb="0" cb="0"/><line nr="1634" mi="1" ci="0" mb="0" cb="0"/><line nr="1640" mi="1" ci="0" mb="0" cb="0"/><line nr="1646" mi="1" ci="0" mb="0" cb="0"/><line nr="1652" mi="1" ci="0" mb="0" cb="0"/><line nr="1658" mi="1" ci="0" mb="0" cb="0"/><line nr="1665" mi="1" ci="0" mb="0" cb="0"/><line nr="1671" mi="1" ci="0" mb="0" cb="0"/><line nr="1677" mi="1" ci="0" mb="0" cb="0"/><line nr="1683" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="281" covered="0"/><counter type="LINE" missed="279" covered="0"/><counter type="COMPLEXITY" missed="279" covered="0"/><counter type="METHOD" missed="279" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KsqlGrammarListener.java"/><counter type="INSTRUCTION" missed="16182" covered="5497"/><counter type="BRANCH" missed="1192" covered="72"/><counter type="LINE" missed="4130" covered="466"/><counter type="COMPLEXITY" missed="2053" covered="81"/><counter type="METHOD" missed="1389" covered="61"/><counter type="CLASS" missed="129" covered="27"/></package><package name="com/provectus/kafka/ui/config/auth/logout"><class name="com/provectus/kafka/ui/config/auth/logout/CognitoLogoutSuccessHandler" sourcefilename="CognitoLogoutSuccessHandler.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicable" desc="(Ljava/lang/String;)Z" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;)Lreactor/core/publisher/Mono;" line="33"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/logout/OAuthLogoutSuccessHandler" sourcefilename="OAuthLogoutSuccessHandler.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/auth/OAuthProperties;Ljava/util/List;Lorg/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler;)V" line="24"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onLogoutSuccess" desc="(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;" line="33"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLogoutHandler" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLogoutHandler$2" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/config/auth/logout/LogoutSuccessHandler;)Z" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$onLogoutSuccess$1" desc="(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;" line="38"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$onLogoutSuccess$0" desc="(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;Lcom/provectus/kafka/ui/config/auth/OAuthProperties$OAuth2Provider;Lcom/provectus/kafka/ui/config/auth/logout/LogoutSuccessHandler;)Lreactor/core/publisher/Mono;" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/logout/LogoutSuccessHandler" sourcefilename="LogoutSuccessHandler.java"/><sourcefile name="OAuthLogoutSuccessHandler.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="37" mi="11" ci="0" mb="0" cb="0"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LogoutSuccessHandler.java"/><sourcefile name="CognitoLogoutSuccessHandler.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="12" ci="0" mb="0" cb="0"/><line nr="53" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="com/provectus/kafka/ui/service/rbac"><class name="com/provectus/kafka/ui/service/rbac/AccessControlService" sourcefilename="AccessControlService.java"><method name="init" desc="()V" line="67"><counter type="INSTRUCTION" missed="40" covered="9"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateAccess" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;)Lreactor/core/publisher/Mono;" line="99"><counter type="INSTRUCTION" missed="20" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUser" desc="()Lreactor/core/publisher/Mono;" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicationConfigAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="145"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClusterAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="159"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClusterAccessible" desc="(Lcom/provectus/kafka/ui/model/ClusterDTO;)Lreactor/core/publisher/Mono;" line="172"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClusterConfigAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="185"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTopicAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="203"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterViewableTopics" desc="(Ljava/util/List;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="221"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConsumerGroupAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="240"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConsumerGroupAccessible" desc="(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="258"><counter type="INSTRUCTION" missed="21" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSchemaAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="273"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSchemaAccessible" desc="(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="291"><counter type="INSTRUCTION" missed="21" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConnectAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="306"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConnectAccessible" desc="(Lcom/provectus/kafka/ui/model/ConnectDTO;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="324"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConnectAccessible" desc="(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="332"><counter type="INSTRUCTION" missed="21" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConnectorAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="347"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConnectorAccessible" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="355"><counter type="INSTRUCTION" missed="23" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKsqlAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="371"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAclAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="388"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAuditAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Z" line="405"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOauthExtractors" desc="()Ljava/util/Set;" line="422"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRoles" desc="()Ljava/util/List;" line="426"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAccessible" desc="(Lcom/provectus/kafka/ui/model/rbac/Resource;Ljava/lang/String;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Lcom/provectus/kafka/ui/model/rbac/AccessContext;Ljava/util/Set;)Z" line="434"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterRole" desc="(Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/util/function/Predicate;" line="449"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterCluster" desc="(Ljava/lang/String;)Ljava/util/function/Predicate;" line="453"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterCluster" desc="(Lcom/provectus/kafka/ui/model/rbac/Resource;Ljava/lang/String;)Ljava/util/function/Predicate;" line="459"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterResource" desc="(Lcom/provectus/kafka/ui/model/rbac/Resource;)Ljava/util/function/Predicate;" line="466"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterResourceValue" desc="(Ljava/lang/String;)Ljava/util/function/Predicate;" line="471"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRbacEnabled" desc="()Z" line="484"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/springframework/security/oauth2/client/registration/InMemoryReactiveClientRegistrationRepository;Lcom/provectus/kafka/ui/config/auth/RoleBasedAccessControlProperties;Lorg/springframework/core/env/Environment;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$filterResourceValue$30" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Permission;)Z" line="475"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterResourceValue$29" desc="(Lcom/provectus/kafka/ui/model/rbac/Permission;)Z" line="472"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterResource$28" desc="(Lcom/provectus/kafka/ui/model/rbac/Resource;Lcom/provectus/kafka/ui/model/rbac/Permission;)Z" line="466"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterCluster$27" desc="(Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="460"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterCluster$26" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="453"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterRole$25" desc="(Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Lcom/provectus/kafka/ui/model/rbac/Role;)Z" line="449"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAccessible$24" desc="(Lcom/provectus/kafka/ui/model/rbac/Permission;)Ljava/util/stream/Stream;" line="441"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAccessible$23" desc="(Lcom/provectus/kafka/ui/model/rbac/Role;)Ljava/util/stream/Stream;" line="438"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAuditAccessible$22" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/AuditAction;)Ljava/lang/String;" line="415"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAclAccessible$21" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/AclAction;)Ljava/lang/String;" line="398"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isKsqlAccessible$20" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/KsqlAction;)Ljava/lang/String;" line="381"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isConnectorAccessible$19" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/lang/Boolean;" line="367"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isConnectAccessible$18" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/lang/Boolean;" line="343"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isConnectAccessible$17" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/ConnectAction;)Ljava/lang/String;" line="317"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isSchemaAccessible$16" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/lang/Boolean;" line="302"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isSchemaAccessible$15" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/SchemaAction;)Ljava/lang/String;" line="284"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isConsumerGroupAccessible$14" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/lang/Boolean;" line="269"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isConsumerGroupAccessible$13" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/ConsumerGroupAction;)Ljava/lang/String;" line="251"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterViewableTopics$12" desc="(Ljava/util/List;Ljava/lang/String;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/util/List;" line="226"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterViewableTopics$11" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Lcom/provectus/kafka/ui/model/InternalTopic;)Z" line="229"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isTopicAccessible$10" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/TopicAction;)Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isClusterConfigAccessible$9" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/ClusterConfigAction;)Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isClusterAccessible$8" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)Ljava/lang/Boolean;" line="181"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isApplicationConfigAccessible$7" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/ApplicationConfigAction;)Ljava/lang/String;" line="153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUser$6" desc="(Lcom/provectus/kafka/ui/config/auth/RbacUser;)Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;" line="141"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUser$5" desc="(Lorg/springframework/security/core/Authentication;)Lcom/provectus/kafka/ui/config/auth/RbacUser;" line="140"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getUser$4" desc="(Lorg/springframework/security/core/Authentication;)Z" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateAccess$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)V" line="116"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateAccess$2" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)V" line="106"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$1" desc="(Lcom/provectus/kafka/ui/model/rbac/Role;)Ljava/util/Set;" line="75"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$0" desc="(Lcom/provectus/kafka/ui/model/rbac/provider/Provider;)Lcom/provectus/kafka/ui/service/rbac/extractor/ProviderAuthorityExtractor;" line="79"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="900" covered="64"/><counter type="BRANCH" missed="119" covered="6"/><counter type="LINE" missed="225" covered="17"/><counter type="COMPLEXITY" missed="119" covered="8"/><counter type="METHOD" missed="55" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/rbac/AbstractProviderCondition" sourcefilename="AbstractProviderCondition.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegisteredProvidersTypes" desc="(Lorg/springframework/core/env/Environment;)Ljava/util/Set;" line="19"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getRegisteredProvidersTypes$0" desc="(Ljava/util/Map;)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractProviderCondition.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="5" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AccessControlService.java"><line nr="49" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="1" cb="1"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="5" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="2" cb="0"/><line nr="92" mi="8" ci="0" mb="4" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="2" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="2" cb="0"/><line nr="118" mi="5" ci="0" mb="2" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="5" ci="0" mb="2" cb="0"/><line nr="121" mi="5" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="2" cb="0"/><line nr="123" mi="5" ci="0" mb="2" cb="0"/><line nr="124" mi="5" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="2" cb="0"/><line nr="127" mi="6" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="2" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="13" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="9" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="7" ci="0" mb="4" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="9" ci="0" mb="2" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="9" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="7" ci="0" mb="0" cb="0"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="2" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="7" ci="0" mb="4" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="9" ci="0" mb="2" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="9" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="1" cb="1"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="7" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="13" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="2" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="4" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="9" ci="0" mb="2" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="9" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="13" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="2" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="7" ci="0" mb="4" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="9" ci="0" mb="2" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="9" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="2" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="1" cb="1"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="2" ci="0" mb="0" cb="0"/><line nr="343" mi="13" ci="0" mb="0" cb="0"/><line nr="347" mi="3" ci="0" mb="2" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="1" cb="1"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="362" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="13" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="2" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="2" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="8" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="2" cb="0"/><line nr="389" mi="2" ci="0" mb="0" cb="0"/><line nr="392" mi="4" ci="0" mb="2" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="2" ci="0" mb="0" cb="0"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="398" mi="5" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="8" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="2" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="2" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="0" cb="0"/><line nr="416" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="8" ci="0" mb="0" cb="0"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="2" cb="0"/><line nr="427" mi="2" ci="0" mb="0" cb="0"/><line nr="429" mi="5" ci="0" mb="0" cb="0"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="5" ci="0" mb="0" cb="0"/><line nr="437" mi="4" ci="0" mb="0" cb="0"/><line nr="438" mi="7" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><line nr="441" mi="6" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="443" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="9" ci="0" mb="0" cb="0"/><line nr="453" mi="6" ci="0" mb="0" cb="0"/><line nr="454" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="3" ci="0" mb="2" cb="0"/><line nr="460" mi="4" ci="0" mb="0" cb="0"/><line nr="462" mi="4" ci="0" mb="0" cb="0"/><line nr="466" mi="11" ci="0" mb="2" cb="0"/><line nr="471" mi="2" ci="0" mb="2" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="3" ci="0" mb="0" cb="0"/><line nr="476" mi="2" ci="0" mb="2" cb="0"/><line nr="477" mi="2" ci="0" mb="0" cb="0"/><line nr="479" mi="5" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="900" covered="64"/><counter type="BRANCH" missed="119" covered="6"/><counter type="LINE" missed="225" covered="17"/><counter type="COMPLEXITY" missed="119" covered="8"/><counter type="METHOD" missed="55" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="905" covered="101"/><counter type="BRANCH" missed="119" covered="6"/><counter type="LINE" missed="225" covered="31"/><counter type="COMPLEXITY" missed="120" covered="11"/><counter type="METHOD" missed="56" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/provectus/kafka/ui/service/acl"><class name="com/provectus/kafka/ui/service/acl/AclCsv" sourcefilename="AclCsv.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformToCsvString" desc="(Ljava/util/Collection;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAclString" desc="(Lorg/apache/kafka/common/acl/AclBinding;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseCsvLine" desc="(Ljava/lang/String;I)Lorg/apache/kafka/common/acl/AclBinding;" line="44"><counter type="INSTRUCTION" missed="7" covered="74"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseCsv" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="66"><counter type="INSTRUCTION" missed="5" covered="50"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="186"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/acl/AclsService" sourcefilename="AclsService.java"><method name="createAcl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/acl/AclBinding;)Lreactor/core/publisher/Mono;" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAclsWithLogging" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAcl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/acl/AclBinding;)Lreactor/core/publisher/Mono;" line="64"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listAcls" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/resource/ResourcePatternFilter;)Lreactor/core/publisher/Flux;" line="72"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAclAsCsvString" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="syncAclWithAclCsv" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logAclSyncPlan" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Set;Ljava/util/Set;)V" line="107"><counter type="INSTRUCTION" missed="7" covered="59"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAllowBindings" desc="(Lorg/apache/kafka/common/resource/ResourceType;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/List;" line="133"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConsumerAcl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/CreateConsumerAclDTO;)Lreactor/core/publisher/Mono;" line="156"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConsumerBindings" desc="(Lcom/provectus/kafka/ui/model/CreateConsumerAclDTO;)Ljava/util/List;" line="163"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createProducerAcl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/CreateProducerAclDTO;)Lreactor/core/publisher/Mono;" line="184"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createProducerBindings" desc="(Lcom/provectus/kafka/ui/model/CreateProducerAclDTO;)Ljava/util/List;" line="192"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createStreamAppAcl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/CreateStreamAppAclDTO;)Lreactor/core/publisher/Mono;" line="225"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createStreamAppBindings" desc="(Lcom/provectus/kafka/ui/model/CreateStreamAppAclDTO;)Ljava/util/List;" line="233"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createStreamAppAcl$17" desc="(Lcom/provectus/kafka/ui/model/CreateStreamAppAclDTO;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="226"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createProducerAcl$16" desc="(Lcom/provectus/kafka/ui/model/CreateProducerAclDTO;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="185"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createConsumerAcl$15" desc="(Lcom/provectus/kafka/ui/model/CreateConsumerAclDTO;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAllowBindings$14" desc="(Ljava/util/List;Ljava/util/List;Lorg/apache/kafka/common/resource/ResourceType;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAllowBindings$13" desc="(Ljava/util/List;Lorg/apache/kafka/common/resource/ResourceType;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/acl/AclOperation;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$syncAclWithAclCsv$12" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$syncAclWithAclCsv$11" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="87"><counter type="INSTRUCTION" missed="5" covered="40"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$syncAclWithAclCsv$10" desc="(Lcom/google/common/collect/Sets$SetView;Ljava/lang/Void;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$syncAclWithAclCsv$9" desc="(Lcom/google/common/collect/Sets$SetView;Ljava/lang/Void;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAclAsCsvString$8" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$listAcls$7" desc="(Ljava/util/Collection;)Ljava/lang/Iterable;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$listAcls$6" desc="(Lorg/apache/kafka/common/resource/ResourcePatternFilter;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteAcl$5" desc="(Ljava/lang/String;Ljava/lang/Void;)V" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteAcl$4" desc="(Lorg/apache/kafka/common/acl/AclBinding;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createAclsWithLogging$3" desc="(Ljava/util/Collection;Ljava/lang/Void;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAclsWithLogging$2" desc="(Lorg/apache/kafka/common/acl/AclBinding;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAclsWithLogging$1" desc="(Lorg/apache/kafka/common/acl/AclBinding;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAcl$0" desc="(Lorg/apache/kafka/common/acl/AclBinding;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="87" covered="475"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="17" covered="120"/><counter type="COMPLEXITY" missed="16" covered="30"/><counter type="METHOD" missed="10" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AclsService.java"><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="3" ci="3" mb="3" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="3" ci="3" mb="3" cb="1"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="10" mb="0" cb="2"/><line nr="136" mi="0" ci="19" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="20" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="475"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="17" covered="120"/><counter type="COMPLEXITY" missed="16" covered="30"/><counter type="METHOD" missed="10" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AclCsv.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="1" cb="1"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="20" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="12" mb="0" cb="4"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="186"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="102" covered="661"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="20" covered="153"/><counter type="COMPLEXITY" missed="19" covered="40"/><counter type="METHOD" missed="11" covered="29"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/provectus/kafka/ui/service/audit"><class name="com/provectus/kafka/ui/service/audit/AuditRecord" sourcefilename="AuditRecord.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/Object;Lcom/provectus/kafka/ui/service/audit/AuditRecord$OperationResult;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJson" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/audit/AuditRecord$AuditResource" sourcefilename="AuditRecord.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLcom/provectus/kafka/ui/model/rbac/Resource;Ljava/lang/Object;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lcom/provectus/kafka/ui/model/rbac/permission/PermissibleAction;Lcom/provectus/kafka/ui/model/rbac/Resource;Ljava/lang/Object;)Lcom/provectus/kafka/ui/service/audit/AuditRecord$AuditResource;" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccessedResources" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;)Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameId" desc="(Ljava/lang/String;)Ljava/util/Map;" line="73"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAccessedResources$7" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/permission/AuditAction;)V" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAccessedResources$6" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/permission/AclAction;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAccessedResources$5" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/permission/KsqlAction;)V" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAccessedResources$4" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/model/rbac/permission/SchemaAction;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAccessedResources$3" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/permission/ConnectAction;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAccessedResources$2" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/model/rbac/permission/ConsumerGroupAction;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAccessedResources$1" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/model/rbac/permission/TopicAction;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAccessedResources$0" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/rbac/permission/ClusterConfigAction;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="156"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/audit/AuditWriter" sourcefilename="AuditWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLjava/lang/String;Lorg/apache/kafka/clients/producer/KafkaProducer;Lorg/slf4j/Logger;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTopicWritingEnabled" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeAppOperation" desc="(Lorg/slf4j/Logger;Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Ljava/lang/Throwable;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Ljava/lang/Throwable;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/provectus/kafka/ui/service/audit/AuditRecord;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRecord" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Ljava/lang/Throwable;)Lcom/provectus/kafka/ui/service/audit/AuditRecord;" line="65"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="78"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$write$0" desc="(Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="112"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/audit/AuditRecord$OperationResult$OperationError" sourcefilename="AuditRecord.java"><method name="&lt;clinit&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/audit/AuditService" sourcefilename="AuditService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/service/ClustersStorage;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAuditWriter" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/Optional;" line="80"><counter type="INSTRUCTION" missed="16" covered="90"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consoleOnlyWriter" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Z)Lcom/provectus/kafka/ui/service/audit/AuditWriter;" line="119"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTopicIfNeeded" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/function/Supplier;Ljava/lang/String;Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties;)Z" line="131"><counter type="INSTRUCTION" missed="28" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="9" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAuditInitError" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/Exception;)V" line="166"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAuditTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Z" line="176"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="audit" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractUser" desc="(Lreactor/core/publisher/Signal;)Lreactor/core/publisher/Mono;" line="196"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendAuditRecord" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)V" line="212"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendAuditRecord" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;Ljava/lang/Throwable;)V" line="217"><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractUser$7" desc="(Lorg/springframework/security/core/userdetails/UserDetails;)Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;" line="202"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractUser$6" desc="(Lorg/springframework/security/core/context/SecurityContext;)Ljava/lang/Object;" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$audit$5" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lreactor/core/publisher/Signal;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$audit$4" desc="(Lcom/provectus/kafka/ui/model/rbac/AccessContext;Lcom/provectus/kafka/ui/config/auth/AuthenticatedUser;)V" line="185"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAuditWriter$3" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$AuditProperties$LogLevel;)Ljava/lang/Boolean;" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/audit/AuditWriter;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lorg/apache/kafka/clients/producer/KafkaProducer;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="367"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="27" covered="85"/><counter type="COMPLEXITY" missed="10" covered="29"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/audit/AuditRecord$OperationResult" sourcefilename="AuditRecord.java"><method name="&lt;init&gt;" desc="(ZLcom/provectus/kafka/ui/service/audit/AuditRecord$OperationResult$OperationError;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="successful" desc="()Lcom/provectus/kafka/ui/service/audit/AuditRecord$OperationResult;" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/Throwable;)Lcom/provectus/kafka/ui/service/audit/AuditRecord$OperationResult;" line="84"><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AuditRecord.java"><line nr="18" mi="0" ci="24" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="8" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="8" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="257"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="46"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="AuditService.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="8" ci="11" mb="2" cb="0"/><line nr="87" mi="0" ci="4" mb="1" cb="3"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="2"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="11" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="5" mb="0" cb="2"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="2"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="4" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="9" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="1" cb="1"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="367"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="27" covered="85"/><counter type="COMPLEXITY" missed="10" covered="29"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AuditWriter.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="18" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="2"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="1" cb="3"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="1" cb="1"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="2" cb="2"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="112"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="134" covered="736"/><counter type="BRANCH" missed="13" covered="49"/><counter type="LINE" missed="32" covered="157"/><counter type="COMPLEXITY" missed="19" covered="61"/><counter type="METHOD" missed="8" covered="41"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/provectus/kafka/ui/emitter"><class name="com/provectus/kafka/ui/emitter/MessageFilters$1" sourcefilename="MessageFilters.java"><method name="&lt;init&gt;" desc="(Lorg/codehaus/groovy/jsr223/GroovyScriptEngineImpl;Lgroovy/json/JsonSlurper;Ljavax/script/CompiledScript;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Lcom/provectus/kafka/ui/model/TopicMessageDTO;)Z" line="46"><counter type="INSTRUCTION" missed="12" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="88"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/MessageFilters" sourcefilename="MessageFilters.java"><method name="createMsgFilter" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/MessageFilterTypeDTO;)Ljava/util/function/Predicate;" line="26"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsStringFilter" desc="(Ljava/lang/String;)Ljava/util/function/Predicate;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groovyScriptFilter" desc="(Ljava/lang/String;)Ljava/util/function/Predicate;" line="42"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseToJsonOrReturnAsIs" desc="(Lgroovy/json/JsonSlurper;Ljava/lang/String;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGroovyEngine" desc="()Lorg/codehaus/groovy/jsr223/GroovyScriptEngineImpl;" line="83"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileScript" desc="(Lorg/codehaus/groovy/jsr223/GroovyScriptEngineImpl;Ljava/lang/String;)Ljavax/script/CompiledScript;" line="92"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsStringFilter$0" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/TopicMessageDTO;)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="83"/><counter type="BRANCH" missed="1" covered="10"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/RangePollingEmitter" sourcefilename="RangePollingEmitter.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lcom/provectus/kafka/ui/model/ConsumerPosition;ILcom/provectus/kafka/ui/emitter/MessagesProcessing;Lcom/provectus/kafka/ui/emitter/PollingSettings;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lreactor/core/publisher/FluxSink;)V" line="45"><counter type="INSTRUCTION" missed="15" covered="69"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="poll" desc="(Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;Lreactor/core/publisher/FluxSink;Ljava/util/TreeMap;)Ljava/util/List;" line="74"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$poll$2" desc="(Lcom/provectus/kafka/ui/emitter/PolledRecords;Ljava/util/List;Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;Lorg/apache/kafka/common/TopicPartition;Lcom/provectus/kafka/ui/emitter/RangePollingEmitter$FromToOffset;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$poll$1" desc="(Lcom/provectus/kafka/ui/emitter/RangePollingEmitter$FromToOffset;Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$poll$0" desc="(Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;Lorg/apache/kafka/common/TopicPartition;Lcom/provectus/kafka/ui/emitter/RangePollingEmitter$FromToOffset;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="188"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="6" covered="41"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/EnhancedConsumer" sourcefilename="EnhancedConsumer.java"><method name="&lt;init&gt;" desc="(Ljava/util/Properties;Lcom/provectus/kafka/ui/emitter/PollingThrottler;Lcom/provectus/kafka/ui/util/ApplicationMetrics;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollEnhanced" desc="(Ljava/time/Duration;)Lcom/provectus/kafka/ui/emitter/PolledRecords;" line="40"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/util/Collection;)V" line="50"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribe" desc="(Ljava/util/regex/Pattern;)V" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Ljava/util/Collection;)V" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="(Ljava/time/Duration;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="80"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/OffsetsInfo" sourcefilename="OffsetsInfo.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/util/Collection;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignedPartitionsFullyPolled" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summaryOffsetsRange" desc="()J" line="59"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsumer" desc="()Lorg/apache/kafka/clients/consumer/Consumer;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBeginOffsets" desc="()Ljava/util/Map;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndOffsets" desc="()Ljava/util/Map;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonEmptyPartitions" desc="()Ljava/util/Set;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmptyPartitions" desc="()Ljava/util/Set;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$summaryOffsetsRange$2" desc="(Lorg/apache/commons/lang3/mutable/MutableLong;Lorg/apache/kafka/common/TopicPartition;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/String;Lorg/apache/kafka/common/PartitionInfo;)Lorg/apache/kafka/common/TopicPartition;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="154"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/PolledRecords" sourcefilename="PolledRecords.java"><method name="&lt;init&gt;" desc="(IILjava/time/Duration;Lorg/apache/kafka/clients/consumer/ConsumerRecords;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lorg/apache/kafka/clients/consumer/ConsumerRecords;Ljava/time/Duration;)Lcom/provectus/kafka/ui/emitter/PolledRecords;" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="records" desc="(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/List;" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatePolledRecSize" desc="(Ljava/lang/Iterable;)I" line="36"><counter type="INSTRUCTION" missed="1" covered="67"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="101"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/PollingSettings" sourcefilename="PollingSettings.java"><method name="create" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/provectus/kafka/ui/config/ClustersProperties;)Lcom/provectus/kafka/ui/emitter/PollingSettings;" line="17"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDefault" desc="()Lcom/provectus/kafka/ui/emitter/PollingSettings;" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/time/Duration;Ljava/util/function/Supplier;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPollTimeout" desc="()Ljava/time/Duration;" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPollingThrottler" desc="()Lcom/provectus/kafka/ui/emitter/PollingThrottler;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/TailingEmitter" sourcefilename="TailingEmitter.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lcom/provectus/kafka/ui/model/ConsumerPosition;Lcom/provectus/kafka/ui/serdes/ConsumerRecordDeserializer;Ljava/util/function/Predicate;Lcom/provectus/kafka/ui/emitter/PollingSettings;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lreactor/core/publisher/FluxSink;)V" line="32"><counter type="INSTRUCTION" missed="16" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignAndSeek" desc="(Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="86"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/PollingThrottler" sourcefilename="PollingThrottler.java"><method name="throttlerSupplier" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Ljava/util/function/Supplier;" line="13"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/google/common/util/concurrent/RateLimiter;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noop" desc="()Lcom/provectus/kafka/ui/emitter/PollingThrottler;" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throttleAfterPoll" desc="(I)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$throttlerSupplier$0" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/google/common/util/concurrent/RateLimiter;)Lcom/provectus/kafka/ui/emitter/PollingThrottler;" line="19"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="57"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/RangePollingEmitter$FromToOffset" sourcefilename="RangePollingEmitter.java"><method name="&lt;init&gt;" desc="(JJ)V" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/ForwardEmitter" sourcefilename="ForwardEmitter.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lcom/provectus/kafka/ui/model/ConsumerPosition;ILcom/provectus/kafka/ui/serdes/ConsumerRecordDeserializer;Ljava/util/function/Predicate;Lcom/provectus/kafka/ui/emitter/PollingSettings;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPollingRange" desc="(Ljava/util/TreeMap;Lcom/provectus/kafka/ui/emitter/SeekOperations;)Ljava/util/TreeMap;" line="39"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextPollingRange$1" desc="(Lcom/provectus/kafka/ui/emitter/SeekOperations;Ljava/util/TreeMap;ILorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextPollingRange$0" desc="(Ljava/util/Map$Entry;)Ljava/lang/Long;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/AbstractEmitter" sourcefilename="AbstractEmitter.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/emitter/MessagesProcessing;Lcom/provectus/kafka/ui/emitter/PollingSettings;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="poll" desc="(Lreactor/core/publisher/FluxSink;Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;)Lcom/provectus/kafka/ui/emitter/PolledRecords;" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendLimitReached" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="send" desc="(Lreactor/core/publisher/FluxSink;Ljava/lang/Iterable;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendPhase" desc="(Lreactor/core/publisher/FluxSink;Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendConsuming" desc="(Lreactor/core/publisher/FluxSink;Lcom/provectus/kafka/ui/emitter/PolledRecords;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendFinishStatsAndCompleteSink" desc="(Lreactor/core/publisher/FluxSink;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/ResultSizeLimiter" sourcefilename="ResultSizeLimiter.java"><method name="&lt;init&gt;" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="test" desc="(Lcom/provectus/kafka/ui/model/TopicMessageEventDTO;)Z" line="17"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/emitter/BackwardEmitter" sourcefilename="BackwardEmitter.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lcom/provectus/kafka/ui/model/ConsumerPosition;ILcom/provectus/kafka/ui/serdes/ConsumerRecordDeserializer;Ljava/util/function/Predicate;Lcom/provectus/kafka/ui/emitter/PollingSettings;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPollingRange" desc="(Ljava/util/TreeMap;Lcom/provectus/kafka/ui/emitter/SeekOperations;)Ljava/util/TreeMap;" line="39"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextPollingRange$1" desc="(Lcom/provectus/kafka/ui/emitter/SeekOperations;Ljava/util/TreeMap;ILorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextPollingRange$0" desc="(Ljava/util/Map$Entry;)Ljava/lang/Long;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/MessagesProcessing" sourcefilename="MessagesProcessing.java"><method name="limitReached" desc="()Z" line="39"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="send" desc="(Lreactor/core/publisher/FluxSink;Ljava/lang/Iterable;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sentConsumingInfo" desc="(Lreactor/core/publisher/FluxSink;Lcom/provectus/kafka/ui/emitter/PolledRecords;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendFinishEvent" desc="(Lreactor/core/publisher/FluxSink;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendPhase" desc="(Lreactor/core/publisher/FluxSink;Ljava/lang/String;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortForSending" desc="(Ljava/lang/Iterable;Z)Ljava/lang/Iterable;" line="92"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/serdes/ConsumerRecordDeserializer;Ljava/util/function/Predicate;ZLjava/lang/Integer;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sortForSending$1" desc="(Ljava/util/Comparator;Ljava/util/List;)Ljava/util/List;" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$send$0" desc="(Lreactor/core/publisher/FluxSink;Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V" line="45"><counter type="INSTRUCTION" missed="8" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="159"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="39"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/ConsumingStats" sourcefilename="ConsumingStats.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendConsumingEvt" desc="(Lreactor/core/publisher/FluxSink;Lcom/provectus/kafka/ui/emitter/PolledRecords;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incFilterApplyError" desc="()V" line="26"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendFinishEvent" desc="(Lreactor/core/publisher/FluxSink;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConsumingStats" desc="()Lcom/provectus/kafka/ui/model/TopicMessageConsumingDTO;" line="38"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="85"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/emitter/SeekOperations" sourcefilename="SeekOperations.java"><method name="create" desc="(Lorg/apache/kafka/clients/consumer/Consumer;Lcom/provectus/kafka/ui/model/ConsumerPosition;)Lcom/provectus/kafka/ui/emitter/SeekOperations;" line="26"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignAndSeekNonEmptyPartitions" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginOffsets" desc="()Ljava/util/Map;" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndOffsets" desc="()Ljava/util/Map;" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignedPartitionsFullyPolled" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summaryOffsetsRange" desc="()J" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetsProcessedFromSeek" desc="()J" line="62"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffsetsForSeek" desc="()Ljava/util/Map;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffsetsForSeek" desc="(Lorg/apache/kafka/clients/consumer/Consumer;Lcom/provectus/kafka/ui/emitter/OffsetsInfo;Lcom/provectus/kafka/ui/model/SeekTypeDTO;Ljava/util/Map;)Ljava/util/Map;" line="80"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixOffsets" desc="(Lcom/provectus/kafka/ui/emitter/OffsetsInfo;Ljava/util/Map;)Ljava/util/Map;" line="97"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetsForTimestamp" desc="(Lorg/apache/kafka/clients/consumer/Consumer;Lcom/provectus/kafka/ui/emitter/OffsetsInfo;Ljava/util/Map;)Ljava/util/Map;" line="117"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/clients/consumer/Consumer;Lcom/provectus/kafka/ui/emitter/OffsetsInfo;Ljava/util/Map;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsForTimestamp$3" desc="(Ljava/util/Map$Entry;)Ljava/lang/Long;" line="122"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsForTimestamp$2" desc="(Ljava/util/Map$Entry;)Z" line="121"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fixOffsets$1" desc="(Lcom/provectus/kafka/ui/emitter/OffsetsInfo;Ljava/util/Map;Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsProcessedFromSeek$0" desc="(Lorg/apache/commons/lang3/mutable/MutableLong;Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="228"/><counter type="BRANCH" missed="2" covered="11"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ForwardEmitter.java"><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="16" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RangePollingEmitter.java"><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="1" cb="5"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="1" cb="3"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="197"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="6" covered="42"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MessagesProcessing.java"><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="15" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="2" ci="13" mb="1" cb="3"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="2" cb="2"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="159"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="39"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SeekOperations.java"><line nr="17" mi="0" ci="12" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="2"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="16" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="1" cb="4"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="1" ci="9" mb="1" cb="1"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="228"/><counter type="BRANCH" missed="2" covered="11"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnhancedConsumer.java"><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="1" ci="7" mb="1" cb="1"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="80"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractEmitter.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsumingStats.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="85"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OffsetsInfo.java"><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="2"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="12" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="22" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="154"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PollingSettings.java"><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="1" cb="1"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PollingThrottler.java"><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="5" ci="2" mb="3" cb="1"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="4"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="57"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BackwardEmitter.java"><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="16" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResultSizeLimiter.java"><line nr="8" mi="5" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="2" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="8" ci="0" mb="2" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MessageFilters.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="1" cb="2"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="7" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="19" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="171"/><counter type="BRANCH" missed="2" covered="11"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TailingEmitter.java"><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="1" cb="1"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="86"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolledRecords.java"><line nr="12" mi="0" ci="15" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="11" mb="0" cb="2"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="1" ci="8" mb="1" cb="1"/><line nr="41" mi="0" ci="11" mb="0" cb="2"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="2"/><line nr="44" mi="0" ci="10" mb="0" cb="2"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="101"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="149" covered="1610"/><counter type="BRANCH" missed="22" covered="86"/><counter type="LINE" missed="36" covered="353"/><counter type="COMPLEXITY" missed="28" covered="136"/><counter type="METHOD" missed="9" covered="99"/><counter type="CLASS" missed="1" covered="16"/></package><package name="com/provectus/kafka/ui/model/rbac"><class name="com/provectus/kafka/ui/model/rbac/Permission" sourcefilename="Permission.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResource" desc="(Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActions" desc="(Ljava/util/List;)V" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="61"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transform" desc="()V" line="68"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllActionValues" desc="()Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResource" desc="()Lcom/provectus/kafka/ui/model/rbac/Resource;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActions" desc="()Ljava/util/List;" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCompiledValuePattern" desc="()Ljava/util/regex/Pattern;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="31"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="31"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="279" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder" sourcefilename="AccessContext.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applicationConfigActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/ApplicationConfigAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="80"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cluster" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clusterConfigActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/ClusterConfigAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="91"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topic" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/TopicAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="102"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumerGroup" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumerGroupActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/ConsumerGroupAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="113"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connect" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="119"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/ConnectAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="124"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connector" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schema" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/SchemaAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="140"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ksqlActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/KsqlAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="146"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aclActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/AclAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="152"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="auditActions" desc="([Lcom/provectus/kafka/ui/model/rbac/permission/AuditAction;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="158"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operationName" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operationParams" desc="(Ljava/lang/Object;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="169"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operationParams" desc="(Ljava/util/Map;)Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/model/rbac/AccessContext;" line="179"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="204"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="6" covered="51"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/Resource" sourcefilename="Resource.java"><method name="fromString" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/model/rbac/Resource;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="57"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/model/rbac/Role" sourcefilename="Role.java"><method name="validate" desc="()V" line="15"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClusters" desc="()Ljava/util/List;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjects" desc="()Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPermissions" desc="()Ljava/util/List;" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClusters" desc="(Ljava/util/List;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSubjects" desc="(Ljava/util/List;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPermissions" desc="(Ljava/util/List;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="6"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="204" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/rbac/Subject" sourcefilename="Subject.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProvider" desc="(Ljava/lang/String;)V" line="14"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProvider" desc="()Lcom/provectus/kafka/ui/model/rbac/provider/Provider;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/model/rbac/AccessContext" sourcefilename="AccessContext.java"><method name="builder" desc="()Lcom/provectus/kafka/ui/model/rbac/AccessContext$AccessContextBuilder;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/String;Ljava/lang/Object;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplicationConfigActions" desc="()Ljava/util/Collection;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCluster" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusterConfigActions" desc="()Ljava/util/Collection;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopic" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicActions" desc="()Ljava/util/Collection;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsumerGroup" desc="()Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsumerGroupActions" desc="()Ljava/util/Collection;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnect" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectActions" desc="()Ljava/util/Collection;" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnector" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchema" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaActions" desc="()Ljava/util/Collection;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKsqlActions" desc="()Ljava/util/Collection;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAclActions" desc="()Ljava/util/Collection;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAuditAction" desc="()Ljava/util/Collection;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperationName" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperationParams" desc="()Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="19"><counter type="INSTRUCTION" missed="304" covered="0"/><counter type="BRANCH" missed="106" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="54" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="19"><counter type="INSTRUCTION" missed="244" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="548" covered="145"/><counter type="BRANCH" missed="140" covered="0"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="72" covered="20"/><counter type="METHOD" missed="2" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Subject.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Permission.java"><line nr="30" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="123" ci="0" mb="30" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="2" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="11" ci="0" mb="4" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="11" ci="0" mb="10" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="279" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Role.java"><line nr="6" mi="183" ci="0" mb="38" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="204" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Resource.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="57"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AccessContext.java"><line nr="19" mi="548" ci="90" mb="140" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="1" ci="7" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="1" ci="7" mb="1" cb="1"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="1" ci="7" mb="1" cb="1"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="1" ci="7" mb="1" cb="1"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="1" ci="7" mb="1" cb="1"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="1" ci="7" mb="1" cb="1"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="7" mb="1" cb="1"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="8" ci="0" mb="2" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="38" mb="0" cb="0"/><counter type="INSTRUCTION" missed="583" covered="349"/><counter type="BRANCH" missed="151" covered="7"/><counter type="LINE" missed="6" covered="70"/><counter type="COMPLEXITY" missed="83" covered="38"/><counter type="METHOD" missed="4" covered="38"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="1097" covered="406"/><counter type="BRANCH" missed="239" covered="7"/><counter type="LINE" missed="61" covered="80"/><counter type="COMPLEXITY" missed="169" covered="39"/><counter type="METHOD" missed="42" covered="39"/><counter type="CLASS" missed="3" covered="3"/></package><package name="com/provectus/kafka/ui/service/integration/odd/schema"><class name="com/provectus/kafka/ui/service/integration/odd/schema/AvroExtractor" sourcefilename="AvroExtractor.java"><method name="extract" desc="(Lio/confluent/kafka/schemaregistry/avro/AvroSchema;Lorg/opendatadiscovery/oddrn/model/KafkaPath;Z)Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDataSetField" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/avro/Schema;Ljava/lang/Boolean;)Lorg/opendatadiscovery/client/model/DataSetField;" line="58"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractRecord" desc="(Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractUnion" desc="(Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="109"><counter type="INSTRUCTION" missed="38" covered="70"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractArray" desc="(Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="160"><counter type="INSTRUCTION" missed="16" covered="40"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMap" desc="(Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="187"><counter type="INSTRUCTION" missed="16" covered="46"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractPrimitive" desc="(Lorg/apache/avro/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/List;)V" line="224"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapType" desc="(Lorg/apache/avro/Schema$Type;)Lorg/opendatadiscovery/client/model/DataSetFieldType$TypeEnum;" line="235"><counter type="INSTRUCTION" missed="11" covered="18"/><counter type="BRANCH" missed="5" covered="6"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapSchema" desc="(Lorg/apache/avro/Schema;Ljava/lang/Boolean;)Lorg/opendatadiscovery/client/model/DataSetFieldType;" line="250"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logicalType" desc="(Lorg/apache/avro/Schema;)Ljava/lang/String;" line="257"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractUnion$2" desc="(Lorg/apache/avro/Schema;)Z" line="115"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extractUnion$1" desc="(Lorg/apache/avro/Schema$Type;)Z" line="110"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractRecord$0" desc="(ZLjava/lang/String;Ljava/lang/String;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;Lorg/apache/avro/Schema$Field;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="418"/><counter type="BRANCH" missed="20" covered="48"/><counter type="LINE" missed="14" covered="96"/><counter type="COMPLEXITY" missed="20" covered="34"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/schema/ProtoExtractor" sourcefilename="ProtoExtractor.java"><method name="extract" desc="(Lio/confluent/kafka/schemaregistry/protobuf/ProtobufSchema;Lorg/opendatadiscovery/oddrn/model/KafkaPath;Z)Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractProtoWellKnownType" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;)Z" line="88"><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractRepeated" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="120"><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMessage" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractPrimitive" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogicalTypeName" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor;)Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDataSetField" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/opendatadiscovery/client/model/DataSetFieldType$TypeEnum;Ljava/lang/String;Ljava/lang/Boolean;)Lorg/opendatadiscovery/client/model/DataSetField;" line="205"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapType" desc="(Lcom/google/protobuf/Descriptors$FieldDescriptor$Type;)Lorg/opendatadiscovery/client/model/DataSetFieldType$TypeEnum;" line="219"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="4" covered="3"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractMessage$1" desc="(Ljava/lang/String;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;Lcom/google/protobuf/Descriptors$FieldDescriptor;)V" line="163"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extract$0" desc="(Ljava/lang/String;Lcom/google/protobuf/Descriptors$Descriptor;Ljava/util/List;Lcom/google/protobuf/Descriptors$FieldDescriptor;)V" line="50"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="350"/><counter type="BRANCH" missed="8" covered="27"/><counter type="LINE" missed="4" covered="91"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/schema/DataSetFieldsExtractors" sourcefilename="DataSetFieldsExtractors.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extract" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaSubject;Ljava/util/Map;Lorg/opendatadiscovery/oddrn/model/KafkaPath;Z)Ljava/util/List;" line="21"><counter type="INSTRUCTION" missed="28" covered="25"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootField" desc="(Lorg/opendatadiscovery/oddrn/model/KafkaPath;Z)Lorg/opendatadiscovery/client/model/DataSetField;" line="34"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="65"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/integration/odd/schema/JsonSchemaExtractor" sourcefilename="JsonSchemaExtractor.java"><method name="extract" desc="(Lio/confluent/kafka/schemaregistry/json/JsonSchema;Lorg/opendatadiscovery/oddrn/model/KafkaPath;Z)Ljava/util/List;" line="34"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Lorg/everit/json/schema/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="56"><counter type="INSTRUCTION" missed="22" covered="69"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractPrimitive" desc="(Lorg/everit/json/schema/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/List;)V" line="82"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractUnknown" desc="(Lorg/everit/json/schema/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/List;)V" line="102"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractObject" desc="(Lorg/everit/json/schema/ObjectSchema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="123"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractArray" desc="(Lorg/everit/json/schema/ArraySchema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="172"><counter type="INSTRUCTION" missed="17" covered="40"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractCombined" desc="(Lorg/everit/json/schema/CombinedSchema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;)V" line="218"><counter type="INSTRUCTION" missed="19" covered="75"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="(Lorg/everit/json/schema/Schema;)Ljava/lang/String;" line="259"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logicalTypeName" desc="(Lorg/everit/json/schema/Schema;)Ljava/lang/String;" line="264"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDataSetField" desc="(Lorg/everit/json/schema/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/opendatadiscovery/client/model/DataSetFieldType$TypeEnum;Ljava/lang/String;Ljava/lang/Boolean;)Lorg/opendatadiscovery/client/model/DataSetField;" line="276"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapType" desc="(Lorg/everit/json/schema/Schema;)Lorg/opendatadiscovery/client/model/DataSetFieldType$TypeEnum;" line="290"><counter type="INSTRUCTION" missed="11" covered="32"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractObject$1" desc="(Lorg/everit/json/schema/ObjectSchema;ZLjava/lang/String;Ljava/lang/String;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;Ljava/lang/String;Lorg/everit/json/schema/Schema;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extract$0" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lcom/google/common/collect/ImmutableSet;Ljava/util/List;Lorg/everit/json/schema/Schema;)V" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="120" covered="388"/><counter type="BRANCH" missed="27" covered="57"/><counter type="LINE" missed="18" covered="102"/><counter type="COMPLEXITY" missed="26" covered="29"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataSetFieldsExtractors.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="4" ci="6" mb="3" cb="1"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="2"/><line nr="37" mi="0" ci="8" mb="0" cb="2"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="65"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonSchemaExtractor.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="3" ci="3" mb="1" cb="1"/><line nr="57" mi="10" ci="0" mb="0" cb="0"/><line nr="58" mi="11" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="2"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="2"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="1" cb="7"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="2" ci="4" mb="1" cb="1"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="2" ci="4" mb="1" cb="1"/><line nr="88" mi="5" ci="4" mb="1" cb="1"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="2" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="10" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="1" cb="3"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="2" ci="4" mb="1" cb="1"/><line nr="173" mi="3" ci="4" mb="1" cb="1"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="11" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="1" cb="1"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="1" cb="1"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="1" cb="1"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="1" cb="1"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="4" mb="1" cb="1"/><line nr="230" mi="4" ci="6" mb="1" cb="1"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="9" ci="8" mb="1" cb="1"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="11" mb="0" cb="2"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="2" cb="4"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="1" cb="1"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="3" ci="3" mb="1" cb="1"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="1" cb="1"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="120" covered="388"/><counter type="BRANCH" missed="27" covered="57"/><counter type="LINE" missed="18" covered="102"/><counter type="COMPLEXITY" missed="26" covered="29"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProtoExtractor.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="1" ci="5" mb="1" cb="1"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="1" cb="1"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="11" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="2"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="2"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="4" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="2"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="1" ci="5" mb="1" cb="1"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="2"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="4" ci="6" mb="4" cb="3"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="350"/><counter type="BRANCH" missed="8" covered="27"/><counter type="LINE" missed="4" covered="91"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvroExtractor.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="2"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="5"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="2"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="2" ci="4" mb="1" cb="1"/><line nr="110" mi="1" ci="14" mb="1" cb="1"/><line nr="113" mi="0" ci="9" mb="3" cb="3"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="4" mb="1" cb="1"/><line nr="131" mi="0" ci="2" mb="1" cb="1"/><line nr="132" mi="12" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="11" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="2" ci="4" mb="1" cb="1"/><line nr="161" mi="3" ci="4" mb="1" cb="1"/><line nr="162" mi="0" ci="2" mb="1" cb="1"/><line nr="163" mi="11" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="10" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="2" ci="4" mb="1" cb="1"/><line nr="188" mi="3" ci="4" mb="1" cb="1"/><line nr="189" mi="0" ci="2" mb="1" cb="1"/><line nr="190" mi="11" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="2"/><line nr="225" mi="0" ci="9" mb="0" cb="2"/><line nr="226" mi="0" ci="2" mb="0" cb="2"/><line nr="227" mi="0" ci="13" mb="0" cb="0"/><line nr="230" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="4" ci="6" mb="5" cb="6"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="2"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="418"/><counter type="BRANCH" missed="20" covered="48"/><counter type="LINE" missed="14" covered="96"/><counter type="COMPLEXITY" missed="20" covered="34"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="258" covered="1221"/><counter type="BRANCH" missed="58" covered="139"/><counter type="LINE" missed="41" covered="302"/><counter type="COMPLEXITY" missed="58" covered="92"/><counter type="METHOD" missed="4" covered="38"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/provectus/kafka/ui/service"><class name="com/provectus/kafka/ui/service/ApplicationInfoService" sourcefilename="ApplicationInfoService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/util/DynamicConfigOperations;Lorg/springframework/boot/info/BuildProperties;Lorg/springframework/boot/info/GitProperties;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplicationInfo" desc="()Lcom/provectus/kafka/ui/model/ApplicationInfoDTO;" line="39"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lcom/provectus/kafka/ui/util/GithubReleaseInfo$GithubReleaseDto;)Lcom/provectus/kafka/ui/model/ApplicationInfoLatestReleaseDTO;" line="47"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuildInfo" desc="(Lcom/provectus/kafka/ui/util/GithubReleaseInfo$GithubReleaseDto;)Lcom/provectus/kafka/ui/model/ApplicationInfoBuildDTO;" line="54"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnabledFeatures" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateGithubReleaseInfo" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="41"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="8"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ReactiveAdminClient$SupportedFeature" sourcefilename="ReactiveAdminClient.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/function/BiFunction;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IF)V" line="107"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forVersion" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="112"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forVersion$2" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/lang/Float;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$SupportedFeature;)Lorg/reactivestreams/Publisher;" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forVersion$1" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient$SupportedFeature;Ljava/lang/Boolean;)Lreactor/util/function/Tuple2;" line="114"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(FLorg/apache/kafka/clients/admin/AdminClient;Ljava/lang/Float;)Lreactor/core/publisher/Mono;" line="108"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="93"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ConsumerGroupService$ConsumerGroupsPage" sourcefilename="ConsumerGroupService.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;I)V" line="100"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/MessagesService" sourcefilename="MessagesService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/service/DeserializationService;Lcom/provectus/kafka/ui/service/ConsumerGroupService;Lcom/provectus/kafka/ui/config/ClustersProperties;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withExistingTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="81"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execSmartFilterTest" desc="(Lcom/provectus/kafka/ui/model/SmartFilterTestExecutionDTO;)Lcom/provectus/kafka/ui/model/SmartFilterTestExecutionResultDTO;" line="89"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteTopicMessages" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="122"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetsForDeletion" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="131"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendMessage" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/CreateTopicMessageDTO;)Lreactor/core/publisher/Mono;" line="146"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendMessageImpl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/clients/admin/TopicDescription;Lcom/provectus/kafka/ui/model/CreateTopicMessageDTO;)Lreactor/core/publisher/Mono;" line="154"><counter type="INSTRUCTION" missed="15" covered="60"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createProducer" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Lorg/apache/kafka/clients/producer/KafkaProducer;" line="190"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadMessages" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerPosition;Ljava/lang/String;Lcom/provectus/kafka/ui/model/MessageFilterTypeDTO;Ljava/lang/Integer;Lcom/provectus/kafka/ui/model/SeekDirectionDTO;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="208"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixPageSize" desc="(Ljava/lang/Integer;)I" line="216"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadMessagesImpl" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerPosition;Ljava/lang/String;Lcom/provectus/kafka/ui/model/MessageFilterTypeDTO;ILcom/provectus/kafka/ui/model/SeekDirectionDTO;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="231"><counter type="INSTRUCTION" missed="17" covered="50"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMsgFilter" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/MessageFilterTypeDTO;)Ljava/util/function/Predicate;" line="253"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throttleUiPublish" desc="(Lcom/provectus/kafka/ui/model/SeekDirectionDTO;)Ljava/util/function/UnaryOperator;" line="260"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$throttleUiPublish$17" desc="(Lcom/google/common/util/concurrent/RateLimiter;Ljava/lang/Object;)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMsgFilter$16" desc="(Lcom/provectus/kafka/ui/model/TopicMessageDTO;)Z" line="254"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadMessagesImpl$15" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;" line="243"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadMessagesImpl$14" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;" line="239"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadMessagesImpl$13" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fixPageSize$12" desc="(Ljava/lang/Integer;)Z" line="217"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadMessages$11" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerPosition;Ljava/lang/String;Lcom/provectus/kafka/ui/model/MessageFilterTypeDTO;Ljava/lang/Integer;Lcom/provectus/kafka/ui/model/SeekDirectionDTO;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/clients/admin/TopicDescription;)Lorg/reactivestreams/Publisher;" line="211"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sendMessageImpl$10" desc="(Ljava/util/concurrent/CompletableFuture;Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V" line="176"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sendMessage$9" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/CreateTopicMessageDTO;Lorg/apache/kafka/clients/admin/TopicDescription;)Lreactor/core/publisher/Mono;" line="148"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsForDeletion$8" desc="(Ljava/lang/String;Ljava/util/List;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="132"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsForDeletion$7" desc="(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="135"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsForDeletion$6" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)Z" line="139"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsetsForDeletion$5" desc="(Ljava/util/List;Ljava/util/Map$Entry;)Z" line="136"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopicMessages$4" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/clients/admin/TopicDescription;)Lreactor/core/publisher/Mono;" line="124"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopicMessages$3" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="126"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopicMessages$2" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execSmartFilterTest$1" desc="(Ljava/lang/Long;)Ljava/time/OffsetDateTime;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$withExistingTopic$0" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="495"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="6" covered="111"/><counter type="COMPLEXITY" missed="10" covered="35"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/KafkaConnectService" sourcefilename="KafkaConnectService.java"><method name="getConnects" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllConnectors" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="61"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchesSearchTerm" desc="(Ljava/lang/String;)Ljava/util/function/Predicate;" line="82"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringsForSearch" desc="(Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;)Ljava/util/stream/Stream;" line="90"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorTopics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="99"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorNames" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="108"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectorNamesWithErrorsSuppress" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseConnectorsNamesStringToList" desc="(Ljava/lang/String;)Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConnector" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;" line="129"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectorExists" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="148"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnector" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="154"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyStatus" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="189"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="198"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConnectorConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;" line="205"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteConnector" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="214"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateConnectorState" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConnectorActionDTO;)Lreactor/core/publisher/Mono;" line="220"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restartTasks" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;" line="242"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorTasks" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="250"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restartConnectorTask" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="266"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectorPlugins" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="272"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConnectorPluginConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;" line="278"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="api" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="288"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/mapper/ClusterMapper;Lcom/provectus/kafka/ui/mapper/KafkaConnectMapper;Lcom/fasterxml/jackson/databind/ObjectMapper;Lcom/provectus/kafka/ui/service/KafkaConfigSanitizer;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validateConnectorPluginConfig$36" desc="(Lreactor/core/publisher/Mono;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="280"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validateConnectorPluginConfig$35" desc="(Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="282"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorPlugins$34" desc="(Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Flux;" line="273"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$restartConnectorTask$33" desc="(Ljava/lang/String;Ljava/lang/Integer;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="267"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConnectorTasks$32" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Flux;" line="252"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorTasks$31" desc="(Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;Ljava/lang/String;Lcom/provectus/kafka/ui/model/TaskDTO;)Lorg/reactivestreams/Publisher;" line="256"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorTasks$30" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$NotFound;)Lreactor/core/publisher/Mono;" line="258"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConnectorTasks$29" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$NotFound;)Lorg/reactivestreams/Publisher;" line="253"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$restartTasks$28" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/TaskDTO;)Lorg/reactivestreams/Publisher;" line="245"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateConnectorState$27" desc="(Lcom/provectus/kafka/ui/model/ConnectorActionDTO;Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="222"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateConnectorState$26" desc="(Lcom/provectus/kafka/ui/model/TaskDTO;)Z" line="229"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateConnectorState$25" desc="(Lcom/provectus/kafka/ui/model/TaskDTO;)Z" line="226"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteConnector$24" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="215"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setConnectorConfig$23" desc="(Lreactor/core/publisher/Mono;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="207"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setConnectorConfig$22" desc="(Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorConfig$21" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnector$20" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="155"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnector$19" desc="(Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ConnectorDTO;)Lreactor/core/publisher/Mono;" line="158"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnector$18" desc="(Lcom/provectus/kafka/ui/model/ConnectorDTO;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/model/ConnectorStatus;)Lcom/provectus/kafka/ui/model/ConnectorDTO;" line="163"><counter type="INSTRUCTION" missed="5" covered="50"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnector$17" desc="(Ljava/lang/String;Lorg/springframework/web/reactive/function/client/WebClientResponseException$NotFound;)Lreactor/core/publisher/Mono;" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$connectorExists$16" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="149"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createConnector$15" desc="(Lreactor/core/publisher/Mono;Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="131"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createConnector$14" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/connect/model/Connector;)Lreactor/core/publisher/Mono;" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createConnector$13" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/NewConnectorDTO;)Lreactor/core/publisher/Mono;" line="132"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createConnector$12" desc="(Lcom/provectus/kafka/ui/model/NewConnectorDTO;Ljava/lang/Boolean;)Lcom/provectus/kafka/ui/model/NewConnectorDTO;" line="134"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorNames$11" desc="(Ljava/util/List;)Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorNames$10" desc="(Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Flux;" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorTopics$9" desc="(Ljava/lang/Exception;)Lreactor/core/publisher/Mono;" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConnectorTopics$8" desc="(Ljava/lang/String;Ljava/util/Map;)Lcom/provectus/kafka/ui/connect/model/ConnectorTopics;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnectorTopics$7" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;)Lreactor/core/publisher/Mono;" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matchesSearchTerm$6" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;)Z" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matchesSearchTerm$5" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matchesSearchTerm$4" desc="(Lcom/provectus/kafka/ui/model/FullConnectorInfoDTO;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllConnectors$3" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;)Lorg/reactivestreams/Publisher;" line="63"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllConnectors$2" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ConnectDTO;Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="65"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllConnectors$1" desc="(Lreactor/util/function/Tuple4;)Lcom/provectus/kafka/ui/model/connect/InternalConnectInfo;" line="71"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConnects$0" desc="(Ljava/util/List;)Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="591"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="25" covered="114"/><counter type="COMPLEXITY" missed="21" covered="51"/><counter type="METHOD" missed="13" covered="48"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/FeatureService" sourcefilename="FeatureService.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAvailableFeatures" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Lreactor/core/publisher/Mono;" line="25"><counter type="INSTRUCTION" missed="5" covered="53"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topicDeletionEnabled" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="49"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aclEdit" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Lreactor/core/publisher/Mono;" line="55"><counter type="INSTRUCTION" missed="13" covered="17"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aclView" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="64"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aclViewEnabled" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAvailableFeatures$0" desc="(Lreactor/core/publisher/Mono;)Lorg/reactivestreams/Publisher;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="97"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="4" covered="24"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/StatisticsCache" sourcefilename="StatisticsCache.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ClustersStorage;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;Ljava/util/Map;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onTopicDelete" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/model/Statistics;" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/provectus/kafka/ui/model/Statistics;Lcom/provectus/kafka/ui/model/KafkaCluster;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/AdminClientServiceImpl" sourcefilename="AdminClientServiceImpl.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="37"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAdminClient" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createAdminClient$5" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="55"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createAdminClient$4" desc="(Lorg/apache/kafka/clients/admin/AdminClient;)Lreactor/core/publisher/Mono;" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createAdminClient$3" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/lang/Throwable;)V" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createAdminClient$2" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lorg/apache/kafka/clients/admin/AdminClient;" line="44"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient;" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$0" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient;" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="107"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo" sourcefilename="ReactiveAdminClient.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Set;Z)V" line="132"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Lorg/apache/kafka/clients/admin/AdminClient;)Lreactor/core/publisher/Mono;" line="139"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo$ConfigRelatedInfoBuilder;" line="131"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$extract$3" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Lreactor/core/publisher/Mono;" line="142"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extract$2" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="148"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extract$1" desc="(Ljava/lang/String;ZLjava/util/Set;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo;" line="161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extract$0" desc="(Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="146"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="136"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="111"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/StatisticsService" sourcefilename="StatisticsService.java"><method name="updateCache" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatistics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="38"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogDirInfo" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTopics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadTopicConfigs" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/metrics/MetricsCollector;Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/service/FeatureService;Lcom/provectus/kafka/ui/service/StatisticsCache;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getStatistics$5" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="63"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getStatistics$4" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Throwable;)V" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getStatistics$3" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getStatistics$2" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Lreactor/core/publisher/Mono;" line="40"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getStatistics$1" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;[Ljava/lang/Object;)Lcom/provectus/kafka/ui/model/Statistics;" line="49"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateCache$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="152"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/BrokerService" sourcefilename="BrokerService.java"><method name="loadBrokersConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadBrokersConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokersConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Integer;)Lreactor/core/publisher/Flux;" line="56"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokers" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Flux;" line="69"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateBrokerLogDir" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Integer;Lcom/provectus/kafka/ui/model/BrokerLogdirUpdateDTO;)Lreactor/core/publisher/Mono;" line="83"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateBrokerLogDir" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lcom/provectus/kafka/ui/model/BrokerLogdirUpdateDTO;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="91"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateBrokerConfigByName" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="106"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusterLogDirs" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="115"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllBrokersLogdirs" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;)Lreactor/core/publisher/Flux;" line="133"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokerConfig" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Integer;)Lreactor/core/publisher/Flux;" line="139"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBrokerMetrics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="143"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/StatisticsCache;Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/mapper/DescribeLogDirsMapper;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getClusterLogDirs$14" desc="(Lorg/apache/kafka/common/errors/TimeoutException;)Lreactor/core/publisher/Mono;" line="127"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getClusterLogDirs$13" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="117"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerConfigByName$12" desc="(Ljava/lang/Throwable;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerConfigByName$11" desc="(Lorg/apache/kafka/common/errors/InvalidRequestException;)Lreactor/core/publisher/Mono;" line="109"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerConfigByName$10" desc="(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="107"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerLogDir$9" desc="(Ljava/lang/Throwable;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerLogDir$8" desc="(Lorg/apache/kafka/common/errors/LogDirNotFoundException;)Lreactor/core/publisher/Mono;" line="98"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerLogDir$7" desc="(Lorg/apache/kafka/common/errors/UnknownTopicOrPartitionException;)Lreactor/core/publisher/Mono;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateBrokerLogDir$6" desc="(Lcom/provectus/kafka/ui/model/BrokerLogdirUpdateDTO;Ljava/lang/Integer;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokers$5" desc="(Lcom/provectus/kafka/ui/model/PartitionDistributionStats;Lcom/provectus/kafka/ui/model/Statistics;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Ljava/util/List;" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokers$4" desc="(Lcom/provectus/kafka/ui/model/PartitionDistributionStats;Lcom/provectus/kafka/ui/model/Statistics;Lorg/apache/kafka/common/Node;)Lcom/provectus/kafka/ui/model/InternalBroker;" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokersConfig$3" desc="(Ljava/util/List;)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokersConfig$2" desc="(Ljava/lang/Integer;Lorg/apache/kafka/common/Node;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadBrokersConfig$1" desc="(Ljava/util/Map;)Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadBrokersConfig$0" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="279"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="53"/><counter type="COMPLEXITY" missed="2" covered="29"/><counter type="METHOD" missed="2" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ConsumerGroupService$GroupWithDescr" sourcefilename="ConsumerGroupService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/model/InternalConsumerGroup;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)V" line="103"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/SchemaRegistryService" sourcefilename="SchemaRegistryService.java"><method name="api" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllLatestVersionSchemas" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="52"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllSubjectNames" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseSubjectListString" desc="(Ljava/lang/String;)Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllVersionsBySubject" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectVersions" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Flux;" line="77"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchemaSubjectByVersion" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLatestSchemaVersionBySubject" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaSubject" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="93"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteSchemaSubjectByVersion" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/Integer;)Lreactor/core/publisher/Mono;" line="101"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteLatestSchemaSubject" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteSchemaSubject" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="109"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteSchemaSubjectEntirely" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerNewSchema" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/sr/model/NewSubject;)Lreactor/core/publisher/Mono;" line="123"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateSchemaCompatibility" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/sr/model/Compatibility;)Lreactor/core/publisher/Mono;" line="135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateGlobalSchemaCompatibility" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/sr/model/Compatibility;)Lreactor/core/publisher/Mono;" line="143"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchemaCompatibilityLevel" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="150"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGlobalSchemaCompatibilityLevel" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="157"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSchemaCompatibilityInfoOrGlobal" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="164"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checksSchemaCompatibility" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/sr/model/NewSubject;)Lreactor/core/publisher/Mono;" line="171"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checksSchemaCompatibility$16" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/model/NewSubject;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="171"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSchemaCompatibilityLevel$15" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="153"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSchemaCompatibilityLevel$14" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="151"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateGlobalSchemaCompatibility$13" desc="(Lcom/provectus/kafka/ui/sr/model/Compatibility;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateSchemaCompatibility$12" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/model/Compatibility;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="136"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$registerNewSchema$11" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$UnprocessableEntity;)Ljava/lang/Throwable;" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$registerNewSchema$10" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$Conflict;)Ljava/lang/Throwable;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$registerNewSchema$9" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/model/NewSubject;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteSchemaSubjectEntirely$8" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="113"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteSchemaSubject$7" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSchemaSubject$6" desc="(Lorg/springframework/web/reactive/function/client/WebClientResponseException$NotFound;)Lreactor/core/publisher/Mono;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemaSubject$5" desc="(Lreactor/util/function/Tuple2;)Lcom/provectus/kafka/ui/service/SchemaRegistryService$SubjectWithCompatibilityLevel;" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSchemaSubject$4" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="94"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSubjectVersions$3" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Flux;" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllVersionsBySubject$2" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/Integer;)Lorg/reactivestreams/Publisher;" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllSubjectNames$1" desc="(Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;)Lreactor/core/publisher/Mono;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAllLatestVersionSchemas$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="121" covered="177"/><counter type="LINE" missed="14" covered="36"/><counter type="COMPLEXITY" missed="17" covered="22"/><counter type="METHOD" missed="17" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/KafkaClusterFactory" sourcefilename="KafkaClusterFactory.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/WebclientProperties;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/model/KafkaCluster;" line="51"><counter type="INSTRUCTION" missed="13" covered="71"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lreactor/core/publisher/Mono;" line="77"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertProperties" desc="(Ljava/util/Map;)Ljava/util/Properties;" line="123"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectClientsConfigured" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Z" line="131"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectClients" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Ljava/util/Map;" line="136"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectClient" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="143"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaRegistryConfigured" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Z" line="157"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schemaRegistryClient" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="161"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ksqlConfigured" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Z" line="178"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ksqlClient" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="182"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseUrlList" desc="(Ljava/lang/String;)Ljava/util/List;" line="198"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metricsConfigured" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Z" line="202"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metricsConfigDataToMetricsConfig" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$MetricsConfigData;)Lcom/provectus/kafka/ui/model/MetricsConfig;" line="207"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseUrlList$10" desc="(Ljava/lang/String;)Z" line="198"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$ksqlClient$9" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Ljava/lang/String;)Lcom/provectus/kafka/ui/service/ksql/KsqlApiClient;" line="184"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$schemaRegistryClient$8" desc="(Lorg/springframework/web/reactive/function/client/WebClient;Ljava/lang/String;)Lcom/provectus/kafka/ui/sr/api/KafkaSrClientApi;" line="170"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$connectClient$7" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Ljava/lang/String;)Lcom/provectus/kafka/ui/connect/api/KafkaConnectClientApi;" line="145"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$connectClients$6" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validate$5" desc="(Lreactor/util/function/Tuple4;)Lcom/provectus/kafka/ui/model/ClusterConfigValidationDTO;" line="113"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validate$4" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;)Lorg/reactivestreams/Publisher;" line="106"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validate$3" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;Lcom/provectus/kafka/ui/model/ApplicationPropertyValidationDTO;)Lreactor/util/function/Tuple2;" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validate$2" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;Lcom/provectus/kafka/ui/config/ClustersProperties$ConnectCluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validate$1" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validate$0" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)Lcom/provectus/kafka/ui/util/ReactiveFailover;" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="246" covered="239"/><counter type="BRANCH" missed="22" covered="10"/><counter type="LINE" missed="53" covered="49"/><counter type="COMPLEXITY" missed="26" covered="16"/><counter type="METHOD" missed="10" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/TopicsService" sourcefilename="TopicsService.java"><method name="loadTopics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="69"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadTopicAfterCreation" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="103"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createList" desc="(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets;Lcom/provectus/kafka/ui/model/Metrics;Lcom/provectus/kafka/ui/model/InternalLogDirStats;)Ljava/util/List;" line="127"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPartitionOffsets" desc="(Ljava/util/Map;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="143"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicDetails" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicConfigs" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="165"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lcom/provectus/kafka/ui/model/TopicCreationDTO;)Lreactor/core/publisher/Mono;" line="173"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/TopicCreationDTO;)Lreactor/core/publisher/Mono;" line="184"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recreateTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="189"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/TopicUpdateDTO;)Lreactor/core/publisher/Mono;" line="222"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;" line="230"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeReplicationFactor" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="240"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="changeReplicationFactor" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/ReplicationFactorChangeDTO;)Lreactor/core/publisher/Mono;" line="251"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartitionsReassignments" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/InternalTopic;Lcom/provectus/kafka/ui/model/ReplicationFactorChangeDTO;)Ljava/util/Map;" line="288"><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentAssignment" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;)Ljava/util/Map;" line="360"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBrokersMap" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Ljava/util/Map;" line="371"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increaseTopicPartitions" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/PartitionsIncreaseDTO;)Lreactor/core/publisher/Mono;" line="388"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="419"><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="429"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicsForPagination" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="447"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActiveProducersState" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="464"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterExisting" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="469"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/service/StatisticsCache;Lcom/provectus/kafka/ui/config/ClustersProperties;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$filterExisting$41" desc="(Ljava/util/Collection;Ljava/util/Set;)Ljava/util/List;" line="472"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterExisting$40" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="470"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducersState$39" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="465"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicsForPagination$38" desc="(Lcom/provectus/kafka/ui/model/Statistics;Ljava/util/List;)Ljava/util/List;" line="449"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getTopicsForPagination$37" desc="(Lcom/provectus/kafka/ui/model/Statistics;Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopic;" line="451"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cloneTopic$36" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)Lreactor/core/publisher/Mono;" line="430"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cloneTopic$35" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="442"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cloneTopic$34" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="432"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopic$33" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/Void;)V" line="421"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteTopic$32" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="420"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$increaseTopicPartitions$31" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/PartitionsIncreaseDTO;Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)Lreactor/core/publisher/Mono;" line="389"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$increaseTopicPartitions$30" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;)Lcom/provectus/kafka/ui/model/PartitionsIncreaseResponseDTO;" line="411"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$increaseTopicPartitions$29" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;Lcom/provectus/kafka/ui/model/PartitionsIncreaseDTO;Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="390"><counter type="INSTRUCTION" missed="30" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokersMap$28" desc="(Ljava/util/Map;Ljava/util/List;)V" line="378"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getBrokersMap$27" desc="(Ljava/util/Map;Ljava/lang/Integer;)V" line="379"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getBrokersMap$26" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="376"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getBrokersMap$25" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="375"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCurrentAssignment$24" desc="(Lcom/provectus/kafka/ui/model/InternalPartition;)Ljava/util/List;" line="363"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getPartitionsReassignments$23" desc="(Ljava/util/Map$Entry;)Ljava/util/Optional;" line="355"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getPartitionsReassignments$22" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;Ljava/util/Map$Entry;)Lorg/apache/kafka/common/TopicPartition;" line="354"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$changeReplicationFactor$21" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/ReplicationFactorChangeDTO;Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)Lreactor/core/publisher/Mono;" line="251"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$changeReplicationFactor$20" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;)Lcom/provectus/kafka/ui/model/ReplicationFactorChangeResponseDTO;" line="278"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$changeReplicationFactor$19" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;Lcom/provectus/kafka/ui/model/ReplicationFactorChangeDTO;Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="253"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$updateTopic$18" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/TopicUpdateDTO;)Lreactor/core/publisher/Mono;" line="231"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateTopic$17" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/TopicUpdateDTO;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="224"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recreateTopic$16" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)Lreactor/core/publisher/Mono;" line="190"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recreateTopic$15" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/model/InternalTopic;)Lreactor/core/publisher/Mono;" line="194"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recreateTopic$14" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="214"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recreateTopic$13" desc="(Ljava/lang/String;Lreactor/util/retry/RetryBackoffSpec;Lreactor/util/retry/Retry$RetrySignal;)Ljava/lang/Throwable;" line="211"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$recreateTopic$12" desc="(Lcom/provectus/kafka/ui/model/InternalTopic;Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="196"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createTopic$11" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/TopicCreationDTO;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="185"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createTopic$10" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;" line="179"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicConfigs$9" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="166"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicConfigs$8" desc="(Ljava/util/Map;)Ljava/util/List;" line="169"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getPartitionOffsets$7" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="147"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getPartitionOffsets$6" desc="(Ljava/util/Map;Ljava/util/Map;Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Map$Entry;" line="150"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createList$5" desc="(Ljava/util/Map;Ljava/util/Map;Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets;Lcom/provectus/kafka/ui/model/Metrics;Lcom/provectus/kafka/ui/model/InternalLogDirStats;Ljava/lang/String;)Lcom/provectus/kafka/ui/model/InternalTopic;" line="129"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadTopicAfterCreation$4" desc="(Ljava/lang/String;Lreactor/util/retry/RetryBackoffSpec;Lreactor/util/retry/Retry$RetrySignal;)Ljava/lang/Throwable;" line="112"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadTopic$3" desc="(Ljava/util/List;)Lreactor/core/publisher/Mono;" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadTopics$2" desc="(Ljava/util/List;Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="74"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadTopics$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="76"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadTopics$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lcom/provectus/kafka/ui/model/InternalPartitionsOffsets;)Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="551" covered="550"/><counter type="BRANCH" missed="34" covered="4"/><counter type="LINE" missed="108" covered="109"/><counter type="COMPLEXITY" missed="44" covered="41"/><counter type="METHOD" missed="25" covered="41"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/SchemaRegistryService$1" sourcefilename="SchemaRegistryService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/SchemaRegistryService;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ClusterService" sourcefilename="ClusterService.java"><method name="getClusters" desc="()Ljava/util/List;" line="27"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClusterStats" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="34"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClusterMetrics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="42"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateCluster" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lreactor/core/publisher/Mono;" line="48"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/StatisticsCache;Lcom/provectus/kafka/ui/service/ClustersStorage;Lcom/provectus/kafka/ui/mapper/ClusterMapper;Lcom/provectus/kafka/ui/service/StatisticsService;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateCluster$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;)Lcom/provectus/kafka/ui/model/ClusterDTO;" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getClusters$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/model/ClusterDTO;" line="29"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="19"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription" sourcefilename="ReactiveAdminClient.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/common/Node;Ljava/lang/String;Ljava/util/Collection;Ljava/util/Set;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getController" desc="()Lorg/apache/kafka/common/Node;" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusterId" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodes" desc="()Ljava/util/Collection;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAuthorizedOperations" desc="()Ljava/util/Set;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="121"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="121"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="158" covered="24"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="22" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ClustersStorage" sourcefilename="ClustersStorage.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/config/ClustersProperties;Lcom/provectus/kafka/ui/service/KafkaClusterFactory;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKafkaClusters" desc="()Ljava/util/Collection;" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusterByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/provectus/kafka/ui/service/KafkaClusterFactory;Lcom/provectus/kafka/ui/config/ClustersProperties;Lcom/provectus/kafka/ui/config/ClustersProperties$Cluster;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/KafkaConfigSanitizer" sourcefilename="KafkaConfigSanitizer.java"><method name="&lt;init&gt;" desc="(ZLjava/util/List;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile" desc="(Ljava/util/Collection;)Ljava/util/List;" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRegex" desc="(Ljava/lang/String;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kafkaConfigKeysToSanitize" desc="()Ljava/util/Set;" line="61"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sanitize" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sanitizeConnectorConfig" desc="(Ljava/util/Map;)Ljava/util/Map;" line="81"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sanitizeConnectorConfig$2" desc="(Ljava/util/HashMap;Ljava/lang/String;Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$kafkaConfigKeysToSanitize$1" desc="(Ljava/util/Map$Entry;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$compile$0" desc="(Ljava/lang/String;)Ljava/util/regex/Pattern;" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="177"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo$ConfigRelatedInfoBuilder" sourcefilename="ReactiveAdminClient.java"><method name="&lt;init&gt;" desc="()V" line="131"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="version" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo$ConfigRelatedInfoBuilder;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="features" desc="(Ljava/util/Set;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo$ConfigRelatedInfoBuilder;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="topicDeletionIsAllowed" desc="(Z)Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo$ConfigRelatedInfoBuilder;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo;" line="131"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/DeserializationService" sourcefilename="DeserializationService.java"><method name="&lt;init&gt;" desc="(Lorg/springframework/core/env/Environment;Lcom/provectus/kafka/ui/service/ClustersStorage;Lcom/provectus/kafka/ui/config/ClustersProperties;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerdesFor" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/serdes/ClusterSerdes;" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerializer" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Ljava/lang/String;)Lcom/provectus/kafka/ui/serde/api/Serde$Serializer;" line="52"><counter type="INSTRUCTION" missed="20" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerdeForDeserialize" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Ljava/lang/String;)Lcom/provectus/kafka/ui/serdes/SerdeInstance;" line="67"><counter type="INSTRUCTION" missed="20" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="producerRecordCreator" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/provectus/kafka/ui/serdes/ProducerRecordCreator;" line="85"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializerFor" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/provectus/kafka/ui/serdes/ConsumerRecordDeserializer;" line="95"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerdesForSerialize" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/List;" line="113"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerdesForDeserialize" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;)Ljava/util/List;" line="127"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDto" desc="(Lcom/provectus/kafka/ui/serdes/SerdeInstance;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Z)Lcom/provectus/kafka/ui/model/SerdeDescriptionDTO;" line="142"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="153"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdesForDeserialize$7" desc="(Ljava/util/ArrayList;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)V" line="134"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdesForDeserialize$6" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)Z" line="133"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdesForDeserialize$5" desc="(Lcom/provectus/kafka/ui/serdes/SerdeInstance;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)Z" line="132"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdesForSerialize$4" desc="(Ljava/util/ArrayList;Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)V" line="120"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdesForSerialize$3" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/serde/api/Serde$Target;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)Z" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdesForSerialize$2" desc="(Lcom/provectus/kafka/ui/serdes/SerdeInstance;Lcom/provectus/kafka/ui/serdes/SerdeInstance;)Z" line="118"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerdeForDeserialize$1" desc="(Ljava/lang/String;)Ljavax/validation/ValidationException;" line="70"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSerializer$0" desc="(Ljava/lang/String;)Ljavax/validation/ValidationException;" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="233" covered="165"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="32" covered="36"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="12" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/SchemaRegistryService$SubjectWithCompatibilityLevel" sourcefilename="SchemaRegistryService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaSubject;Lcom/provectus/kafka/ui/sr/model/Compatibility;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompatibility" desc="()Lcom/provectus/kafka/ui/sr/model/Compatibility;" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subject" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubject" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSubject" desc="(Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="version" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVersion" desc="(Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="(Ljava/lang/Integer;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/Integer;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setId" desc="(Ljava/lang/Integer;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schema" desc="(Ljava/lang/String;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSchema" desc="(Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schemaType" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaType;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchemaType" desc="()Lcom/provectus/kafka/ui/sr/model/SchemaType;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSchemaType" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaType;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="references" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addReferencesItem" desc="(Lcom/provectus/kafka/ui/sr/model/SchemaReference;)Lcom/provectus/kafka/ui/sr/model/SchemaSubject;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferences" desc="()Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setReferences" desc="(Ljava/util/List;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="36"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="13" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ConsumerGroupService" sourcefilename="ConsumerGroupService.java"><method name="getConsumerGroups" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="46"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsumerGroupsForTopic" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConsumerGroupRelatesToTopic" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;Z)Z" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerGroupsPage" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;IILjava/lang/String;Lcom/provectus/kafka/ui/model/ConsumerGroupOrderingDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;)Lreactor/core/publisher/Mono;" line="113"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadSortedDescriptions" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;IILcom/provectus/kafka/ui/model/ConsumerGroupOrderingDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;)Lreactor/core/publisher/Mono;" line="138"><counter type="INSTRUCTION" missed="42" covered="38"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadDescriptionsByListings" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;Ljava/util/Comparator;IILcom/provectus/kafka/ui/model/SortOrderDTO;)Lreactor/core/publisher/Mono;" line="187"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortAndPaginate" desc="(Ljava/util/Collection;Ljava/util/Comparator;IILcom/provectus/kafka/ui/model/SortOrderDTO;)Ljava/util/stream/Stream;" line="199"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeConsumerGroups" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="206"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadDescriptionsByInternalConsumerGroups" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;Ljava/util/Comparator;IILcom/provectus/kafka/ui/model/SortOrderDTO;)Lreactor/core/publisher/Mono;" line="218"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerGroupDetail" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="234"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteConsumerGroupById" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="246"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConsumer" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConsumer" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Lcom/provectus/kafka/ui/emitter/EnhancedConsumer;" line="256"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;Lcom/provectus/kafka/ui/service/rbac/AccessControlService;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteConsumerGroupById$35" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="247"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupDetail$34" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="235"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupDetail$33" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)Lreactor/core/publisher/Mono;" line="239"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupDetail$32" desc="(Ljava/util/List;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup;" line="241"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupDetail$31" desc="(Ljava/util/List;)Z" line="240"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupDetail$30" desc="(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;" line="237"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupDetail$29" desc="(Ljava/lang/String;Ljava/util/Map;)Z" line="236"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadDescriptionsByInternalConsumerGroups$28" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/Comparator;IILcom/provectus/kafka/ui/model/SortOrderDTO;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="222"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadDescriptionsByInternalConsumerGroups$27" desc="(Ljava/util/Comparator;IILcom/provectus/kafka/ui/model/SortOrderDTO;Ljava/util/List;)Ljava/util/List;" line="225"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadDescriptionsByInternalConsumerGroups$26" desc="(Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="224"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$describeConsumerGroups$25" desc="(Ljava/util/Map;)Ljava/util/List;" line="208"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadDescriptionsByListings$24" desc="(Ljava/util/List;Ljava/util/Map;)Ljava/util/List;" line="191"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSortedDescriptions$23" desc="(Lcom/provectus/kafka/ui/service/ConsumerGroupService$GroupWithDescr;)I" line="173"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadSortedDescriptions$22" desc="(Lcom/provectus/kafka/ui/service/ConsumerGroupService$GroupWithDescr;)J" line="166"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadSortedDescriptions$21" desc="(Ljava/util/Comparator;IILcom/provectus/kafka/ui/model/SortOrderDTO;Ljava/util/Map;)Ljava/util/List;" line="161"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSortedDescriptions$20" desc="(Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)I" line="157"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadSortedDescriptions$19" desc="(Lorg/apache/kafka/clients/admin/ConsumerGroupListing;)I" line="145"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsPage$18" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;IILcom/provectus/kafka/ui/model/ConsumerGroupOrderingDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="114"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$17" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;IILcom/provectus/kafka/ui/model/ConsumerGroupOrderingDTO;Lcom/provectus/kafka/ui/model/SortOrderDTO;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="125"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$16" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;ILjava/util/List;)Lreactor/core/publisher/Mono;" line="126"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$15" desc="(Ljava/util/List;ILjava/util/List;)Lcom/provectus/kafka/ui/service/ConsumerGroupService$ConsumerGroupsPage;" line="127"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$14" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/clients/admin/ConsumerGroupListing;)Lorg/reactivestreams/Publisher;" line="122"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$13" desc="(Ljava/util/Collection;)Ljava/lang/Iterable;" line="121"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$12" desc="(Ljava/lang/String;Ljava/util/Collection;)Ljava/util/Collection;" line="115"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroupsPage$11" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ConsumerGroupListing;)Z" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isConsumerGroupRelatesToTopic$10" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/MemberDescription;)Z" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isConsumerGroupRelatesToTopic$9" desc="(Ljava/lang/String;Lorg/apache/kafka/common/TopicPartition;)Z" line="96"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsForTopic$8" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsForTopic$7" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="71"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsForTopic$6" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/ArrayList;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="76"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsForTopic$5" desc="(Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Lcom/google/common/collect/Table;)Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsForTopic$4" desc="(Ljava/lang/String;Lcom/google/common/collect/Table;Ljava/util/Map;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)Lcom/provectus/kafka/ui/model/InternalTopicConsumerGroup;" line="83"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroupsForTopic$3" desc="(Ljava/lang/String;Lcom/google/common/collect/Table;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)Z" line="80"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConsumerGroups$2" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/List;Lcom/google/common/collect/Table;)Lreactor/core/publisher/Mono;" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroups$1" desc="(Ljava/util/List;Lcom/google/common/collect/Table;Ljava/util/Map;)Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConsumerGroups$0" desc="(Lcom/google/common/collect/Table;Ljava/util/Map;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)Lcom/provectus/kafka/ui/model/InternalConsumerGroup;" line="55"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="330" covered="338"/><counter type="BRANCH" missed="21" covered="6"/><counter type="LINE" missed="52" covered="59"/><counter type="COMPLEXITY" missed="42" covered="26"/><counter type="METHOD" missed="26" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/KafkaConnectService$1" sourcefilename="KafkaConnectService.java"><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/KafkaConnectService;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/ReactiveAdminClient" sourcefilename="ReactiveAdminClient.java"><method name="create" desc="(Lorg/apache/kafka/clients/admin/AdminClient;)Lreactor/core/publisher/Mono;" line="169"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAuthorizedSecurityEnabled" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/lang/Float;)Lreactor/core/publisher/Mono;" line="175"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMono" desc="(Lorg/apache/kafka/common/KafkaFuture;)Lreactor/core/publisher/Mono;" line="187"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusterFeatures" desc="()Ljava/util/Set;" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listTopics" desc="(Z)Lreactor/core/publisher/Mono;" line="221"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteTopic" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="225"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="229"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTopicDeletionEnabled" desc="()Z" line="233"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateInternalStats" desc="(Lorg/apache/kafka/common/Node;)Lreactor/core/publisher/Mono;" line="237"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicsConfig" desc="()Lreactor/core/publisher/Mono;" line="246"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicsConfig" desc="(Ljava/util/Collection;Z)Lreactor/core/publisher/Mono;" line="252"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopicsConfigImpl" desc="(Ljava/util/Collection;Z)Lreactor/core/publisher/Mono;" line="263"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadBrokersConfig" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="280"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadBrokersConfig" desc="(Ljava/util/List;)Lreactor/core/publisher/Mono;" line="312"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTopics" desc="()Lreactor/core/publisher/Mono;" line="316"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTopics" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="321"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTopicsImpl" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="330"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTopic" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="343"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMonoWithExceptionFilter" desc="(Ljava/util/Map;[Ljava/lang/Class;)Lreactor/core/publisher/Mono;" line="359"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeLogDirs" desc="()Lreactor/core/publisher/Mono;" line="384"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeLogDirs" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="391"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeCluster" desc="()Lreactor/core/publisher/Mono;" line="401"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeClusterImpl" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/Set;)Lreactor/core/publisher/Mono;" line="405"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteConsumerGroups" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="424"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTopic" desc="(Ljava/lang/String;ILjava/lang/Integer;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="435"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alterPartitionReassignments" desc="(Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="445"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createPartitions" desc="(Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="449"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateTopicConfig" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="456"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listConsumerGroupNames" desc="()Lreactor/core/publisher/Mono;" line="466"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listConsumerGroups" desc="()Lreactor/core/publisher/Mono;" line="470"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeConsumerGroups" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="474"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listConsumerGroupOffsets" desc="(Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="488"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alterConsumerGroupOffsets" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="519"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listTopicOffsets" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/OffsetSpec;Z)Lreactor/core/publisher/Mono;" line="535"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOffsets" desc="(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/OffsetSpec;Z)Lreactor/core/publisher/Mono;" line="549"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOffsets" desc="(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/OffsetSpec;)Lreactor/core/publisher/Mono;" line="558"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterPartitionsWithLeaderCheck" desc="(Ljava/util/Collection;Z)Lreactor/core/publisher/Mono;" line="563"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterPartitionsWithLeaderCheck" desc="(Ljava/util/Collection;Ljava/util/function/Predicate;Z)Ljava/util/Set;" line="574"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOffsetsUnsafe" desc="(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/OffsetSpec;)Lreactor/core/publisher/Mono;" line="605"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listAcls" desc="(Lorg/apache/kafka/common/resource/ResourcePatternFilter;)Lreactor/core/publisher/Mono;" line="631"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAcls" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="636"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteAcls" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="641"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateBrokerConfigByName" desc="(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="647"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteRecords" desc="(Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="653"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alterReplicaLogDirs" desc="(Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="660"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActiveProducersState" desc="(Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="665"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="incrementalAlterConfig" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="681"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alterConfig" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="698"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="partitionCalls" desc="(Ljava/util/Collection;ILjava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;" line="714"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionCalls" desc="(Ljava/util/Collection;IILjava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;" line="732"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapMerger" desc="()Ljava/util/function/BiFunction;" line="742"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="752"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Lreactor/core/publisher/Mono;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClient" desc="()Lorg/apache/kafka/clients/admin/AdminClient;" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mapMerger$75" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="743"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$alterConfig$74" desc="(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;" line="699"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$incrementalAlterConfig$73" desc="(Ljava/util/Map$Entry;)Lorg/apache/kafka/clients/admin/AlterConfigOp;" line="687"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$incrementalAlterConfig$72" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry;)Lorg/apache/kafka/clients/admin/AlterConfigOp;" line="684"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$incrementalAlterConfig$71" desc="(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ConfigEntry;)Z" line="683"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$incrementalAlterConfig$70" desc="(Lorg/apache/kafka/clients/admin/ConfigEntry;)Z" line="682"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getActiveProducersState$69" desc="(Ljava/util/Map;)Ljava/util/Map;" line="673"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducersState$68" desc="(Ljava/util/Map$Entry;)Ljava/util/List;" line="675"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducersState$67" desc="(Ljava/util/Map$Entry;)Z" line="674"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducersState$66" desc="(Ljava/lang/String;Lorg/apache/kafka/clients/admin/TopicDescription;)Lorg/apache/kafka/common/KafkaFuture;" line="666"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getActiveProducersState$65" desc="(Ljava/lang/String;I)Lorg/apache/kafka/common/TopicPartition;" line="668"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteRecords$64" desc="(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="654"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$63" desc="(Lorg/apache/kafka/clients/admin/OffsetSpec;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="611"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$62" desc="(Ljava/util/Map;)Ljava/util/Map;" line="616"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$61" desc="(Ljava/util/Map$Entry;)Ljava/lang/Long;" line="619"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$60" desc="(Ljava/util/Map$Entry;)Z" line="618"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$59" desc="(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListOffsetsResult;Lorg/apache/kafka/common/TopicPartition;)V" line="613"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$58" desc="(Lorg/apache/kafka/clients/admin/OffsetSpec;Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/admin/OffsetSpec;" line="611"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsetsUnsafe$57" desc="(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/TopicPartition;" line="611"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$filterPartitionsWithLeaderCheck$56" desc="(Ljava/util/Collection;ZLjava/util/Map;)Ljava/util/Collection;" line="566"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsets$55" desc="(Lorg/apache/kafka/common/TopicPartition;)Z" line="558"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listOffsets$54" desc="(Lorg/apache/kafka/clients/admin/OffsetSpec;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="550"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTopicOffsets$53" desc="(Lorg/apache/kafka/clients/admin/OffsetSpec;Ljava/util/Set;)Lreactor/core/publisher/Mono;" line="537"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTopicOffsets$52" desc="(ZLorg/apache/kafka/clients/admin/TopicDescription;)Ljava/util/Set;" line="536"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listTopicOffsets$51" desc="(Lorg/apache/kafka/common/TopicPartition;)Z" line="536"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$alterConsumerGroupOffsets$50" desc="(Ljava/util/Map$Entry;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;" line="522"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupOffsets$49" desc="(Ljava/util/Map;)Lcom/google/common/collect/Table;" line="507"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupOffsets$48" desc="(Lcom/google/common/collect/ImmutableTable$Builder;Ljava/lang/String;Ljava/util/Map;)V" line="508"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupOffsets$47" desc="(Lcom/google/common/collect/ImmutableTable$Builder;Ljava/lang/String;Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V" line="509"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupOffsets$46" desc="(Ljava/util/List;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="489"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupOffsets$45" desc="(Ljava/util/List;Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsSpec;" line="494"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupOffsets$44" desc="(Ljava/lang/String;)Ljava/lang/String;" line="493"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$describeConsumerGroups$43" desc="(Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="478"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$listConsumerGroupNames$42" desc="(Ljava/util/Collection;)Ljava/util/List;" line="466"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateTopicConfig$41" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="459"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateTopicConfig$40" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;" line="458"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteConsumerGroups$39" desc="(Lorg/apache/kafka/common/errors/GroupNotEmptyException;)Lreactor/core/publisher/Mono;" line="428"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteConsumerGroups$38" desc="(Lorg/apache/kafka/common/errors/GroupIdNotFoundException;)Lreactor/core/publisher/Mono;" line="426"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$describeClusterImpl$37" desc="(Lorg/apache/kafka/clients/admin/DescribeClusterResult;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;" line="413"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$describeLogDirs$36" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="395"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$describeLogDirs$35" desc="(Ljava/lang/Throwable;)Z" line="394"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$describeLogDirs$34" desc="(Lorg/apache/kafka/common/errors/ClusterAuthorizationException;)Lreactor/core/publisher/Mono;" line="393"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$describeLogDirs$33" desc="(Lorg/apache/kafka/common/errors/UnsupportedVersionException;)Lreactor/core/publisher/Mono;" line="392"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$describeLogDirs$32" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ClusterDescription;)Ljava/util/List;" line="385"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toMonoWithExceptionFilter$31" desc="([Ljava/lang/Object;)Ljava/util/Map;" line="376"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$30" desc="(Lreactor/util/function/Tuple2;)Ljava/lang/Object;" line="379"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$29" desc="(Lreactor/util/function/Tuple2;)Z" line="378"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$28" desc="(Ljava/lang/Object;)Lreactor/util/function/Tuple2;" line="377"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$27" desc="([Ljava/lang/Class;Ljava/util/Map$Entry;)Lreactor/core/publisher/Mono;" line="365"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$26" desc="(Ljava/util/Map$Entry;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="371"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$25" desc="([Ljava/lang/Class;Ljava/lang/Throwable;)Z" line="370"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$24" desc="(Ljava/lang/Throwable;Ljava/lang/Class;)Z" line="370"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMonoWithExceptionFilter$23" desc="(Ljava/util/Map$Entry;Ljava/lang/Object;)Lreactor/util/function/Tuple2;" line="366"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$describeTopic$22" desc="(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="343"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadBrokersConfig$21" desc="(Ljava/util/Map;)Ljava/util/Map;" line="302"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadBrokersConfig$20" desc="(Ljava/util/Map$Entry;)Ljava/util/List;" line="305"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadBrokersConfig$19" desc="(Ljava/util/Map$Entry;)Ljava/lang/Integer;" line="304"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadBrokersConfig$18" desc="(Ljava/util/List;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="299"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadBrokersConfig$17" desc="(Ljava/lang/Throwable;)Z" line="298"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadBrokersConfig$16" desc="(Ljava/util/List;Lorg/apache/kafka/common/errors/ClusterAuthorizationException;)Lreactor/core/publisher/Mono;" line="294"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadBrokersConfig$15" desc="(Ljava/util/List;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="289"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadBrokersConfig$14" desc="(Ljava/lang/Throwable;)Z" line="286"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadBrokersConfig$13" desc="(Ljava/lang/Integer;)Lorg/apache/kafka/common/config/ConfigResource;" line="281"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicsConfigImpl$12" desc="(Ljava/util/Map;)Ljava/util/Map;" line="273"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicsConfigImpl$11" desc="(Ljava/util/Map$Entry;)Ljava/util/List;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicsConfigImpl$10" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicsConfigImpl$9" desc="(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigResource;" line="264"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicsConfig$8" desc="(ZLjava/util/Collection;)Lreactor/core/publisher/Mono;" line="257"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTopicsConfig$7" desc="(Ljava/util/Set;)Lreactor/core/publisher/Mono;" line="246"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateInternalStats$6" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMono$5" desc="(Lorg/apache/kafka/common/KafkaFuture;)V" line="199"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMono$4" desc="(Lorg/apache/kafka/common/KafkaFuture;Lreactor/core/publisher/MonoSink;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toMono$3" desc="(Lreactor/core/publisher/MonoSink;Ljava/lang/Object;Ljava/lang/Throwable;)V" line="188"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isAuthorizedSecurityEnabled$2" desc="(Ljava/lang/Throwable;)V" line="180"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAuthorizedSecurityEnabled$1" desc="(Ljava/lang/Throwable;)Z" line="177"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$create$0" desc="(Lorg/apache/kafka/clients/admin/AdminClient;Lreactor/core/publisher/Mono;Lcom/provectus/kafka/ui/service/ReactiveAdminClient$ConfigRelatedInfo;)Lcom/provectus/kafka/ui/service/ReactiveAdminClient;" line="170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="273" covered="1109"/><counter type="BRANCH" missed="18" covered="34"/><counter type="LINE" missed="47" covered="201"/><counter type="COMPLEXITY" missed="39" covered="118"/><counter type="METHOD" missed="26" covered="105"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/OffsetsResetService" sourcefilename="OffsetsResetService.java"><method name="resetToEarliest" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsets" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/clients/admin/OffsetSpec;)Lreactor/core/publisher/Mono;" line="49"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetToLatest" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetToTimestamp" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;J)Lreactor/core/publisher/Mono;" line="70"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetToOffsets" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="83"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkGroupCondition" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/lang/String;)Lreactor/core/publisher/Mono;" line="97"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="editTsOffsets" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="127"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="editOffsetsBounds" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="140"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetOffsets" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/AdminClientService;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$editOffsetsBounds$21" desc="(Ljava/util/Map;Ljava/util/HashMap;Ljava/util/Map;Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$20" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="101"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$19" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;)Lreactor/core/publisher/Mono;" line="107"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$18" desc="(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/clients/admin/ConsumerGroupDescription;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$17" desc="(Ljava/lang/String;Ljava/util/Map;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$16" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$15" desc="(Ljava/lang/String;Ljava/util/List;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkGroupCondition$14" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToOffsets$13" desc="(Ljava/util/Map;Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="88"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToOffsets$12" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="90"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToOffsets$11" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToOffsets$10" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToOffsets$9" desc="(Ljava/lang/String;Ljava/util/Map$Entry;)Lorg/apache/kafka/common/TopicPartition;" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToTimestamp$8" desc="(Ljava/lang/String;Ljava/util/Collection;JLjava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="72"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToTimestamp$7" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToTimestamp$6" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Collection;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToTimestamp$5" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToLatest$4" desc="(Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="63"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToLatest$3" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$offsets$2" desc="(Ljava/lang/String;Ljava/lang/Integer;)Lorg/apache/kafka/common/TopicPartition;" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToEarliest$1" desc="(Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Lcom/provectus/kafka/ui/service/ReactiveAdminClient;)Lreactor/core/publisher/Mono;" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resetToEarliest$0" desc="(Lcom/provectus/kafka/ui/service/ReactiveAdminClient;Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="381"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="37"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/AdminClientService" sourcefilename="AdminClientService.java"/><class name="com/provectus/kafka/ui/service/ClustersStatisticsScheduler" sourcefilename="ClustersStatisticsScheduler.java"><method name="updateStatistics" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/ClustersStorage;Lcom/provectus/kafka/ui/service/StatisticsService;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateStatistics$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Lorg/reactivestreams/Publisher;" line="25"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateStatistics$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lcom/provectus/kafka/ui/model/Statistics;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SchemaRegistryService.java"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="65" ci="24" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="17" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="13" ci="0" mb="0" cb="0"/><line nr="77" mi="11" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="15" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="2" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="186" covered="219"/><counter type="LINE" missed="14" covered="39"/><counter type="COMPLEXITY" missed="30" covered="31"/><counter type="METHOD" missed="30" covered="31"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="MessagesService.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="2" ci="7" mb="1" cb="1"/><line nr="137" mi="7" ci="2" mb="2" cb="0"/><line nr="139" mi="1" ci="15" mb="1" cb="1"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="1" ci="3" mb="1" cb="1"/><line nr="155" mi="8" ci="0" mb="2" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="1" cb="1"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="13" mb="0" cb="0"/><line nr="211" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="15" mb="1" cb="3"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="4" ci="5" mb="2" cb="2"/><line nr="234" mi="0" ci="10" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="10" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="9" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="2"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="495"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="6" covered="111"/><counter type="COMPLEXITY" missed="10" covered="35"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClusterService.java"><line nr="17" mi="0" ci="15" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="13" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="19"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdminClientServiceImpl.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="3" ci="9" mb="0" cb="0"/><line nr="55" mi="4" ci="1" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="107"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StatisticsService.java"><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="152"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OffsetsResetService.java"><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="14" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="2"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="381"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="37"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClustersStorage.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="17" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FeatureService.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="1" cb="1"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="1" cb="1"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="2" ci="4" mb="1" cb="1"/><line nr="57" mi="8" ci="2" mb="4" cb="0"/><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="1" cb="1"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="97"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="4" covered="24"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClustersStatisticsScheduler.java"><line nr="11" mi="0" ci="9" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeserializationService.java"><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="2"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="10" ci="3" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="1" cb="1"/><line nr="57" mi="17" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="12" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="1" cb="1"/><line nr="72" mi="17" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="14" ci="0" mb="2" cb="0"/><line nr="119" mi="11" ci="0" mb="0" cb="0"/><line nr="120" mi="11" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="14" ci="0" mb="2" cb="0"/><line nr="133" mi="11" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="233" covered="165"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="32" covered="36"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="12" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdminClientService.java"/><sourcefile name="ReactiveAdminClient.java"><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="12" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="1" ci="16" mb="2" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="16" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="155" ci="15" mb="36" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="40" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="2" ci="11" mb="1" cb="1"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="13" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="8" ci="7" mb="5" cb="1"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="12" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="2"/><line nr="191" mi="0" ci="6" mb="2" cb="2"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="1" cb="1"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="12" mb="0" cb="0"/><line nr="252" mi="0" ci="11" mb="1" cb="3"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="10" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="14" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="286" mi="10" ci="4" mb="4" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="2" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="0" cb="0"/><line nr="305" mi="0" ci="8" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="12" mb="0" cb="0"/><line nr="343" mi="0" ci="14" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="2"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="0"/><line nr="367" mi="0" ci="8" mb="0" cb="0"/><line nr="368" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="11" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="8" mb="0" cb="0"/><line nr="379" mi="0" ci="10" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="12" ci="0" mb="0" cb="0"/><line nr="386" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="9" mb="0" cb="0"/><line nr="392" mi="3" ci="3" mb="0" cb="0"/><line nr="393" mi="3" ci="3" mb="0" cb="0"/><line nr="394" mi="2" ci="1" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="7" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="410" mi="0" ci="17" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="9" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="6" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="5" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="440" mi="0" ci="8" mb="0" cb="0"/><line nr="445" mi="7" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="7" mb="0" cb="0"/><line nr="456" mi="0" ci="5" mb="1" cb="1"/><line nr="457" mi="0" ci="8" mb="0" cb="0"/><line nr="458" mi="0" ci="11" mb="0" cb="0"/><line nr="459" mi="0" ci="7" mb="0" cb="0"/><line nr="461" mi="5" ci="0" mb="0" cb="0"/><line nr="466" mi="0" ci="11" mb="0" cb="0"/><line nr="470" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="7" mb="0" cb="0"/><line nr="478" mi="0" ci="7" mb="0" cb="0"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="488" mi="0" ci="4" mb="0" cb="0"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="4" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="0" ci="6" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="0" ci="6" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="10" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="2"/><line nr="511" mi="0" ci="8" mb="0" cb="0"/><line nr="513" mi="0" ci="1" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="519" mi="0" ci="7" mb="0" cb="0"/><line nr="521" mi="0" ci="4" mb="0" cb="0"/><line nr="522" mi="0" ci="11" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="12" mb="0" cb="0"/><line nr="537" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="0" ci="8" mb="0" cb="0"/><line nr="550" mi="0" ci="6" mb="0" cb="0"/><line nr="558" mi="0" ci="10" mb="0" cb="0"/><line nr="563" mi="0" ci="8" mb="0" cb="0"/><line nr="564" mi="0" ci="7" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="7" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="0" cb="0"/><line nr="575" mi="0" ci="10" mb="0" cb="2"/><line nr="576" mi="0" ci="4" mb="0" cb="0"/><line nr="577" mi="0" ci="11" mb="0" cb="2"/><line nr="578" mi="0" ci="8" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="2"/><line nr="580" mi="0" ci="2" mb="0" cb="2"/><line nr="581" mi="0" ci="12" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="4" mb="0" cb="2"/><line nr="589" mi="0" ci="4" mb="0" cb="0"/><line nr="591" mi="0" ci="1" mb="0" cb="0"/><line nr="592" mi="0" ci="4" mb="0" cb="0"/><line nr="593" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="2"/><line nr="606" mi="0" ci="3" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="0"/><line nr="611" mi="0" ci="16" mb="0" cb="0"/><line nr="612" mi="0" ci="4" mb="0" cb="0"/><line nr="613" mi="0" ci="13" mb="0" cb="0"/><line nr="615" mi="0" ci="10" mb="0" cb="0"/><line nr="616" mi="0" ci="4" mb="0" cb="0"/><line nr="618" mi="0" ci="14" mb="0" cb="2"/><line nr="619" mi="0" ci="11" mb="0" cb="0"/><line nr="622" mi="0" ci="5" mb="0" cb="0"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="5" ci="0" mb="0" cb="0"/><line nr="632" mi="11" ci="0" mb="0" cb="0"/><line nr="636" mi="5" ci="0" mb="0" cb="0"/><line nr="637" mi="7" ci="0" mb="0" cb="0"/><line nr="641" mi="5" ci="0" mb="0" cb="0"/><line nr="642" mi="8" ci="0" mb="0" cb="0"/><line nr="643" mi="8" ci="0" mb="0" cb="0"/><line nr="647" mi="0" ci="7" mb="0" cb="0"/><line nr="648" mi="0" ci="10" mb="0" cb="0"/><line nr="649" mi="0" ci="10" mb="0" cb="0"/><line nr="653" mi="0" ci="4" mb="0" cb="0"/><line nr="654" mi="0" ci="13" mb="0" cb="0"/><line nr="655" mi="0" ci="4" mb="0" cb="0"/><line nr="656" mi="0" ci="7" mb="0" cb="0"/><line nr="660" mi="0" ci="7" mb="0" cb="0"/><line nr="665" mi="7" ci="0" mb="0" cb="0"/><line nr="666" mi="8" ci="0" mb="0" cb="0"/><line nr="667" mi="5" ci="0" mb="0" cb="0"/><line nr="668" mi="7" ci="0" mb="0" cb="0"/><line nr="669" mi="1" ci="0" mb="0" cb="0"/><line nr="670" mi="1" ci="0" mb="0" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="673" mi="4" ci="0" mb="0" cb="0"/><line nr="674" mi="13" ci="0" mb="2" cb="0"/><line nr="675" mi="10" ci="0" mb="0" cb="0"/><line nr="681" mi="0" ci="3" mb="0" cb="0"/><line nr="682" mi="0" ci="11" mb="0" cb="2"/><line nr="683" mi="0" ci="11" mb="0" cb="2"/><line nr="684" mi="0" ci="8" mb="0" cb="0"/><line nr="686" mi="0" ci="4" mb="0" cb="0"/><line nr="687" mi="0" ci="16" mb="0" cb="0"/><line nr="689" mi="0" ci="12" mb="0" cb="0"/><line nr="690" mi="0" ci="1" mb="0" cb="0"/><line nr="692" mi="0" ci="2" mb="0" cb="0"/><line nr="693" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="4" ci="0" mb="0" cb="0"/><line nr="699" mi="12" ci="0" mb="0" cb="0"/><line nr="700" mi="4" ci="0" mb="0" cb="0"/><line nr="701" mi="5" ci="0" mb="0" cb="0"/><line nr="702" mi="6" ci="0" mb="0" cb="0"/><line nr="703" mi="9" ci="0" mb="0" cb="0"/><line nr="714" mi="0" ci="3" mb="1" cb="1"/><line nr="715" mi="5" ci="0" mb="0" cb="0"/><line nr="717" mi="0" ci="4" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="2" mb="0" cb="0"/><line nr="720" mi="0" ci="1" mb="0" cb="0"/><line nr="732" mi="0" ci="3" mb="1" cb="1"/><line nr="733" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="0" ci="4" mb="0" cb="0"/><line nr="736" mi="0" ci="5" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="0"/><line nr="738" mi="0" ci="1" mb="0" cb="0"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="4" ci="0" mb="0" cb="0"/><line nr="744" mi="3" ci="0" mb="0" cb="0"/><line nr="745" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="2" ci="0" mb="0" cb="0"/><line nr="752" mi="3" ci="0" mb="0" cb="0"/><line nr="753" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="474" covered="1337"/><counter type="BRANCH" missed="57" covered="43"/><counter type="LINE" missed="49" covered="245"/><counter type="COMPLEXITY" missed="71" covered="139"/><counter type="METHOD" missed="37" covered="123"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="ConsumerGroupService.java"><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="11" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="11" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="14" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="15" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="4" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="14" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="1"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="14" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="2" ci="11" mb="1" cb="1"/><line nr="138" mi="4" ci="6" mb="4" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="14" ci="0" mb="7" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="9" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="2" cb="0"/><line nr="168" mi="9" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="0" cb="0"/><line nr="175" mi="9" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="15" mb="0" cb="2"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="11" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="15" ci="0" mb="0" cb="0"/><line nr="225" mi="10" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="8" ci="0" mb="0" cb="0"/><line nr="235" mi="8" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="9" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="9" ci="0" mb="2" cb="0"/><line nr="241" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="339" covered="347"/><counter type="BRANCH" missed="21" covered="6"/><counter type="LINE" missed="53" covered="60"/><counter type="COMPLEXITY" missed="43" covered="27"/><counter type="METHOD" missed="27" covered="25"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="StatisticsCache.java"><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="14" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ApplicationInfoService.java"><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="12" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="16" ci="0" mb="4" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="2" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="41"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="8"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaConnectService.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="7" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="16" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="1" cb="1"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="1" cb="1"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="9" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="11" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="6" cb="0"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="226" mi="9" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="9" ci="0" mb="0" cb="0"/><line nr="246" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="2" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="2" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="8" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="11" mb="0" cb="0"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="2"/><line nr="290" mi="0" ci="12" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="140" covered="597"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="25" covered="114"/><counter type="COMPLEXITY" missed="21" covered="52"/><counter type="METHOD" missed="13" covered="49"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BrokerService.java"><line nr="36" mi="0" ci="12" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="4"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="279"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="53"/><counter type="COMPLEXITY" missed="2" covered="29"/><counter type="METHOD" missed="2" covered="26"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaClusterFactory.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="1" cb="1"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="1" cb="1"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="1" cb="1"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="9" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="2" cb="0"/><line nr="99" mi="11" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="1" cb="1"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="1" ci="6" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="17" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="1" ci="6" mb="1" cb="1"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="12" mb="0" cb="0"/><line nr="178" mi="2" ci="5" mb="1" cb="1"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="16" mb="1" cb="1"/><line nr="202" mi="2" ci="5" mb="1" cb="1"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="11" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="246" covered="239"/><counter type="BRANCH" missed="22" covered="10"/><counter type="LINE" missed="53" covered="49"/><counter type="COMPLEXITY" missed="26" covered="16"/><counter type="METHOD" missed="10" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopicsService.java"><line nr="53" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="17" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="9" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="9" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="10" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="9" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="22" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="7" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="2" cb="0"/><line nr="259" mi="11" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="2" cb="0"/><line nr="264" mi="11" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="2" cb="0"/><line nr="269" mi="15" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="10" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="2" cb="0"/><line nr="296" mi="11" ci="0" mb="2" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="10" ci="0" mb="2" cb="0"/><line nr="306" mi="4" ci="0" mb="2" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="7" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="2" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="6" ci="0" mb="2" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="5" ci="0" mb="2" cb="0"/><line nr="321" mi="11" ci="0" mb="2" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="10" ci="0" mb="2" cb="0"/><line nr="335" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="2" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="6" ci="0" mb="2" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="6" ci="0" mb="2" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="10" ci="0" mb="0" cb="0"/><line nr="354" mi="10" ci="0" mb="0" cb="0"/><line nr="355" mi="8" ci="0" mb="0" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="6" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="3" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="9" ci="0" mb="0" cb="0"/><line nr="379" mi="14" ci="0" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="11" mb="0" cb="0"/><line nr="389" mi="0" ci="13" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="1" cb="1"/><line nr="394" mi="15" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="4" mb="1" cb="1"/><line nr="400" mi="11" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="0" ci="8" mb="1" cb="1"/><line nr="420" mi="0" ci="16" mb="0" cb="0"/><line nr="421" mi="0" ci="7" mb="0" cb="0"/><line nr="423" mi="6" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="10" mb="0" cb="0"/><line nr="430" mi="0" ci="8" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="10" ci="0" mb="0" cb="0"/><line nr="449" mi="5" ci="0" mb="0" cb="0"/><line nr="450" mi="1" ci="0" mb="0" cb="0"/><line nr="451" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="5" ci="0" mb="0" cb="0"/><line nr="454" mi="2" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="1" ci="0" mb="0" cb="0"/><line nr="459" mi="5" ci="0" mb="0" cb="0"/><line nr="464" mi="7" ci="0" mb="0" cb="0"/><line nr="465" mi="5" ci="0" mb="0" cb="0"/><line nr="469" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="551" covered="550"/><counter type="BRANCH" missed="34" covered="4"/><counter type="LINE" missed="108" covered="109"/><counter type="COMPLEXITY" missed="44" covered="41"/><counter type="METHOD" missed="25" covered="41"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KafkaConfigSanitizer.java"><line nr="26" mi="0" ci="19" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="40" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="0" ci="14" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="177"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2443" covered="5399"/><counter type="BRANCH" missed="181" covered="122"/><counter type="LINE" missed="383" covered="1040"/><counter type="COMPLEXITY" missed="292" covered="476"/><counter type="METHOD" missed="172" covered="437"/><counter type="CLASS" missed="2" covered="26"/></package><package name="com/provectus/kafka/ui/service/metrics"><class name="com/provectus/kafka/ui/service/metrics/JmxMetricsRetriever" sourcefilename="JmxMetricsRetriever.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retrieve" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/Node;)Lreactor/core/publisher/Flux;" line="48"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSslJmxEndpoint" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Z" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retrieveSync" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/Node;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withJmxConnector" desc="(Ljava/lang/String;Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/function/Consumer;)V" line="74"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareJmxEnvAndSetThreadLocal" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;)Ljava/util/Map;" line="91"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetricsFromJmx" desc="(Ljavax/management/remote/JMXConnector;Ljava/util/List;)V" line="114"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractObjectMetrics" desc="(Ljavax/management/ObjectName;Ljavax/management/MBeanServerConnection;)Ljava/util/List;" line="123"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$retrieveSync$1" desc="(Ljava/util/List;Ljavax/management/remote/JMXConnector;)V" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$retrieve$0" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/Node;)Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="243" covered="9"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="56" covered="4"/><counter type="COMPLEXITY" missed="21" covered="2"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/PrometheusMetricsRetriever" sourcefilename="PrometheusMetricsRetriever.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retrieve" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/Node;)Lreactor/core/publisher/Flux;" line="29"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retrieve" desc="(Lorg/springframework/web/reactive/function/client/WebClient;Ljava/lang/String;Lcom/provectus/kafka/ui/model/MetricsConfig;)Lreactor/core/publisher/Flux;" line="47"><counter type="INSTRUCTION" missed="4" covered="48"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$retrieve$3" desc="(Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="61"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$retrieve$2" desc="(Ljava/lang/String;)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$retrieve$1" desc="(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$retrieve$0" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="80"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="11" covered="21"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/PrometheusEndpointMetricsParser" sourcefilename="PrometheusEndpointMetricsParser.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="27"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$4" desc="([Ljava/lang/String;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$3" desc="([Ljava/lang/String;)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$2" desc="([Ljava/lang/String;)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$1" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$0" desc="(Ljava/lang/String;)Z" line="35"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="88"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/MetricsCollector" sourcefilename="MetricsCollector.java"><method name="getBrokerMetrics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Collection;)Lreactor/core/publisher/Mono;" line="28"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetrics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/Node;)Lreactor/core/publisher/Mono;" line="36"><counter type="INSTRUCTION" missed="27" covered="8"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectMetrics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics;" line="49"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="populateWellknowMetrics" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Lcom/provectus/kafka/ui/service/metrics/WellKnownMetrics;" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/provectus/kafka/ui/service/metrics/JmxMetricsRetriever;Lcom/provectus/kafka/ui/service/metrics/PrometheusMetricsRetriever;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$populateWellknowMetrics$5" desc="(Lcom/provectus/kafka/ui/service/metrics/WellKnownMetrics;Lorg/apache/kafka/common/Node;Ljava/util/List;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$populateWellknowMetrics$4" desc="(Lcom/provectus/kafka/ui/service/metrics/WellKnownMetrics;Lorg/apache/kafka/common/Node;Lcom/provectus/kafka/ui/service/metrics/RawMetric;)V" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectMetrics$3" desc="(Ljava/util/Map$Entry;)Ljava/lang/Integer;" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokerMetrics$2" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Ljava/util/Map;)Lcom/provectus/kafka/ui/model/Metrics;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokerMetrics$1" desc="(Lcom/provectus/kafka/ui/model/KafkaCluster;Lorg/apache/kafka/common/Node;)Lorg/reactivestreams/Publisher;" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBrokerMetrics$0" desc="(Lorg/apache/kafka/common/Node;Ljava/util/List;)Lreactor/util/function/Tuple2;" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="96"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="22"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/JmxMetricsFormatter" sourcefilename="JmxMetricsFormatter.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constructMetricsList" desc="(Ljavax/management/ObjectName;[Ljavax/management/MBeanAttributeInfo;[Ljava/lang/Object;)Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixIllegalChars" desc="(Ljava/lang/String;)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertNumericValue" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="50"><counter type="INSTRUCTION" missed="11" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabelsMap" desc="(Ljavax/management/ObjectName;)Ljava/util/LinkedHashMap;" line="69"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$constructMetricsList$0" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/LinkedHashMap;Ljava/util/List;Ljava/math/BigDecimal;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="169"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/JmxSslSocketFactory$HostAndPort" sourcefilename="JmxSslSocketFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="80"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/metrics/JmxSslSocketFactory" sourcefilename="JmxSslSocketFactory.java"><method name="initialized" desc="()Z" line="73"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSslContextThreadLocal" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="93"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearFactoriesCache" desc="()V" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearThreadLocalContext" desc="()V" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="editJmxConnectorEnv" desc="(Ljava/util/Map;)V" line="107"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFactoryFromThreadLocalCtx" desc="()Ljavax/net/ssl/SSLSocketFactory;" line="119"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="threadLocalContextSet" desc="()Z" line="153"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSocket" desc="(Ljava/lang/String;I)Ljava/net/Socket;" line="158"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSocket" desc="(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;" line="173"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSocket" desc="(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;" line="182"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSocket" desc="(Ljava/net/InetAddress;I)Ljava/net/Socket;" line="190"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSocket" desc="(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;" line="199"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultCipherSuites" desc="()[Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupportedCipherSuites" desc="()[Ljava/lang/String;" line="215"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="266" covered="38"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="64" covered="13"/><counter type="COMPLEXITY" missed="27" covered="2"/><counter type="METHOD" missed="14" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/MetricsRetriever" sourcefilename="MetricsRetriever.java"/><class name="com/provectus/kafka/ui/service/metrics/WellKnownMetrics" sourcefilename="WellKnownMetrics.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="populate" desc="(Lorg/apache/kafka/common/Node;Lcom/provectus/kafka/ui/service/metrics/RawMetric;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/provectus/kafka/ui/model/Metrics$MetricsBuilder;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateBrokerIOrates" desc="(Lorg/apache/kafka/common/Node;Lcom/provectus/kafka/ui/service/metrics/RawMetric;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateTopicsIOrates" desc="(Lcom/provectus/kafka/ui/service/metrics/RawMetric;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateTopicsIOrates$1" desc="(Lcom/provectus/kafka/ui/service/metrics/RawMetric;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$updateTopicsIOrates$0" desc="(Lcom/provectus/kafka/ui/service/metrics/RawMetric;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="199"/><counter type="BRANCH" missed="9" covered="25"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/RawMetric$SimpleMetric" sourcefilename="RawMetric.java"><method name="name" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="labels" desc="()Ljava/util/Map;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/math/BigDecimal;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyWithValue" desc="(Ljava/math/BigDecimal;)Lcom/provectus/kafka/ui/service/metrics/RawMetric;" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/math/BigDecimal;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="31"><counter type="INSTRUCTION" missed="21" covered="51"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="31"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="75"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="18" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/service/metrics/JmxSslSocketFactory$Ssl" sourcefilename="JmxSslSocketFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/service/metrics/RawMetric" sourcefilename="RawMetric.java"><method name="identityKey" desc="()Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/math/BigDecimal;)Lcom/provectus/kafka/ui/service/metrics/RawMetric;" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MetricsRetriever.java"/><sourcefile name="RawMetric.java"><line nr="19" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="31" mi="69" ci="54" mb="21" cb="9"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="82"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="19" covered="7"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MetricsCollector.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="15" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="4" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="2" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="96"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="22"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JmxSslSocketFactory.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="9" ci="0" mb="0" cb="0"/><line nr="83" mi="15" ci="0" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="4" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="4" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="2" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="2" cb="0"/><line nr="160" mi="8" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="174" mi="8" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="2" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="8" ci="0" mb="0" cb="0"/><line nr="202" mi="8" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="2" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="2" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="38"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="66" covered="13"/><counter type="COMPLEXITY" missed="29" covered="2"/><counter type="METHOD" missed="16" covered="2"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="PrometheusMetricsRetriever.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="2" ci="8" mb="2" cb="2"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="2" ci="5" mb="1" cb="1"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="6" ci="2" mb="0" cb="0"/><line nr="59" mi="2" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="13" mb="1" cb="3"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="80"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="11" covered="21"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JmxMetricsFormatter.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="2"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="17" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="1" cb="1"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="169"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrometheusEndpointMetricsParser.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="2" cb="2"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="1" ci="9" mb="1" cb="1"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="88"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WellKnownMetrics.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="40" mi="0" ci="6" mb="0" cb="2"/><line nr="41" mi="0" ci="8" mb="1" cb="1"/><line nr="42" mi="0" ci="4" mb="1" cb="1"/><line nr="43" mi="0" ci="2" mb="1" cb="1"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="1" cb="1"/><line nr="47" mi="0" ci="6" mb="0" cb="2"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="1" cb="1"/><line nr="50" mi="0" ci="2" mb="1" cb="1"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="1" cb="1"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="18" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="0" ci="17" mb="0" cb="2"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="199"/><counter type="BRANCH" missed="9" covered="25"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JmxMetricsRetriever.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="4" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="11" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="12" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="9" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="10" ci="0" mb="2" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="2" cb="0"/><line nr="128" mi="10" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="243" covered="9"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="56" covered="4"/><counter type="COMPLEXITY" missed="21" covered="2"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="732" covered="761"/><counter type="BRANCH" missed="93" covered="59"/><counter type="LINE" missed="148" covered="157"/><counter type="COMPLEXITY" missed="96" covered="63"/><counter type="METHOD" missed="36" covered="47"/><counter type="CLASS" missed="2" covered="9"/></package><package name="com/provectus/kafka/ui/config/auth/condition"><class name="com/provectus/kafka/ui/config/auth/condition/ActiveDirectoryCondition$OnActiveDirectory" sourcefilename="ActiveDirectoryCondition.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/condition/ActiveDirectoryCondition" sourcefilename="ActiveDirectoryCondition.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/provectus/kafka/ui/config/auth/condition/CognitoCondition" sourcefilename="CognitoCondition.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Z" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matches$0" desc="(Ljava/lang/String;)Z" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/provectus/kafka/ui/config/auth/condition/ActiveDirectoryCondition$OnAuthType" sourcefilename="ActiveDirectoryCondition.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ActiveDirectoryCondition.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="CognitoCondition.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="4" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="14" covered="11"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="3" covered="1"/></package><counter type="INSTRUCTION" missed="47036" covered="35037"/><counter type="BRANCH" missed="5218" covered="1316"/><counter type="LINE" missed="8288" covered="6390"/><counter type="COMPLEXITY" missed="5933" covered="2615"/><counter type="METHOD" missed="2978" covered="2135"/><counter type="CLASS" missed="207" covered="301"/></report>